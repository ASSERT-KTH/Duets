<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.marssa</groupId>
	<artifactId>footprint</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<name>MARSSA Footprint OSGi Bundle</name>
	<url>https://github.com/marssa/footprint</url>
	<description>This project was created specifically for the design and development of the MARSSA footprint which will run on each MARSSA node.</description>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<properties>
		<javaVersion>1.6</javaVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<organization>
		<name>MARSEC-XL International Limited</name>
		<url>http://www.marsec-xl.org/</url>
	</organization>

	<scm>
		<url>https://github.com/marssa/footprint</url>
		<connection>git://github.com/marssa/footprint.git</connection>
		<developerConnection>scm:git:https://github.com/marssa/footprint.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<email>taboneclayton@gmail.com</email>
			<name>Clayton Tabone</name>
			<url>https://github.com/taboneclayton</url>
			<id>taboneclayton</id>
		</developer>
		<developer>
			<email>warren.zahra@marsec-xl.org</email>
			<name>Warren Zahra</name>
			<url>https://github.com/warrenzahra</url>
			<id>warrenzahra</id>
		</developer>
		<developer>
			<email>amanda.fenech@marsec-xl.org</email>
			<name>Amanda Fenech</name>
			<url>https://github.com/Adnama</url>
			<id>Adnama</id>
		</developer>
		<developer>
			<email>alangrech@gmail.com</email>
			<name>Alan Grech</name>
			<url>https://github.com/alangrech</url>
			<id>alangrech</id>
		</developer>
	</developers>

	<issueManagement>
		<system>Redmine</system>
		<url>http://www.marsec-xl-projects.org/projects/footprint</url>
	</issueManagement>

	<!-- No additional repositories are required yet -->
	<repositories>
		<!-- Repository containing JScience artifacts -->
		<repository>
			<id>jscience-repo</id>
			<name>JScience</name>
			<url>http://maven.obiba.org/maven2/</url>
		</repository>
	</repositories>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>1.4.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.flexjson</groupId>
			<artifactId>flexjson</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- MySQL connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.18</version>
		</dependency>

		<!-- Connection pooling for JDBC -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jscience</groupId>
			<artifactId>jscience</artifactId>
			<version>4.3.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>downloads-maven-plugin</artifactId>
				<version>0.5</version>
				<configuration>
					<description>Official ${project.name} build of the
						${project.version} release</description>
					<override>true</override>
					<includeAttached>true</includeAttached>
					<server>github</server>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>upload</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.6</version>
				<configuration>
					<message>Building site for ${project.version}</message>
					<server>github</server>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.2</version>
							<configuration>
								<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
								<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.7</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.6</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.6</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>


			<!-- Specify Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
				</configuration>
			</plugin>

			<!-- Bundle artifact as OSGi bundle -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.6</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.marssa.footprint.Activator</Bundle-Activator>
						<!-- Add maven directory to list of resources since this contains the 
							remote-resources.xml file -->
						<Include-Resource>{maven-resources},META-INF/maven'='target/classes/META-INF/maven/</Include-Resource>
						<excludeDependencies>false</excludeDependencies>
						<Embed-Dependency>*;scope=compile|runtime;inline=false;</Embed-Dependency>
					</instructions>
				</configuration>
				<executions>
					<execution>
						<id>install-bundle</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- Generate XML Schema from MARSSA datatypes Java classes -->
			<plugin>
				<groupId>com.sun.tools.jxc.maven2</groupId>
				<artifactId>maven-jaxb-schemagen-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<project>
						${project}
					</project>
					<destdir>${basedir}/src/main/resources/generated/schemas</destdir>
					<srcdir>${project.build.sourceDirectory}</srcdir>
					<includes>
						<include>**/*org/marssa/footprint/datatypes/</include>
						<include>**/*org/marssa/footprint/interfaces/navigation/</include>
					</includes>
					<excludes>
						<exclude>**/*org/marssa/footprint/interfaces/control/</exclude>
					</excludes>
					<schemas>
						<schema>
							<namespace>org.marssa.footprint.quantities</namespace>
							<file>quantities.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes</namespace>
							<file>datatypes.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.composite</namespace>
							<file>datatypes.composite.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal</namespace>
							<file>datatypes.decimal.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.distance</namespace>
							<file>datatypes.decimal.distance.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.electrical.charge</namespace>
							<file>datatypes.decimal.electrical.charge.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.electrical.current</namespace>
							<file>datatypes.decimal.electrical.current.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.electrical.energy</namespace>
							<file>datatypes.decimal.electrical.energy.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.electrical.impedance</namespace>
							<file>datatypes.decimal.electrical.impedance.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.electrical.power</namespace>
							<file>datatypes.decimal.electrical.power.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.electrical.voltage</namespace>
							<file>datatypes.decimal.electrical.voltage.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.flow</namespace>
							<file>datatypes.decimal.flow.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.frequency</namespace>
							<file>datatypes.decimal.frequency.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.pressure</namespace>
							<file>datatypes.decimal.pressure.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.speed</namespace>
							<file>datatypes.decimal.speed.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.temperature</namespace>
							<file>datatypes.decimal.temperature.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.decimal.volume</namespace>
							<file>datatypes.decimal.volume.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.integer</namespace>
							<file>datatypes.integer.xsd</file>
						</schema>
						<schema>
							<namespace>org.marssa.footprint.datatypes.time</namespace>
							<file>datatypes.time.xsd</file>
						</schema>
					</schemas>
					<verbose>true</verbose>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-xjc</artifactId>
						<version>2.2</version>
					</dependency>
					<dependency>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-impl</artifactId>
						<version>2.2</version>
					</dependency>
					<dependency>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
						<version>${javaVersion}</version>
						<scope>system</scope>
						<systemPath>${java.home}/../lib/tools.jar</systemPath>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Package resources as remote resources inside the packaged bundle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>bundle</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*.xsd</include>
						<include>**/README</include>
					</includes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
						<version>1.0.0</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Add license header to all files -->
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>HEADER</header>
				</configuration>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.5</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>1.0-beta-7</version>
					</dependency>
				</dependencies>
			</plugin>




			<!-- Generate jar file with Javadoc documentation for this artifact -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate jar file with Java sources for this aartifact -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.sun.tools.jxc.maven2
										</groupId>
										<artifactId>
											maven-jaxb-schemagen-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-remote-resources-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>bundle</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.mycila.maven-license-plugin
										</groupId>
										<artifactId>
											maven-license-plugin
										</artifactId>
										<versionRange>[1.9.0,)</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Sonatype Staging Repository</name>
			<url>http://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>

		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>

		</snapshotRepository>

	</distributionManagement>
	<profiles>
		<profile>
			<id>gpg-sign</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build-for-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
				<!-- To include a shell: <dependency> <groupId>org.apache.felix</groupId> 
					<artifactId>org.apache.felix.gogo.shell</artifactId> <version>0.6.1</version> 
					</dependency> -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<pathconvert property="plugins.jars" pathsep="${path.separator}">
											<path refid="maven.runtime.classpath" />
											<map from="${project.build.directory}${file.separator}classes"
												to="" />
										</pathconvert>
										<pathconvert pathsep=" " property="bundles">
											<path path="${plugins.jars}" />
											<mapper>
												<chainedmapper>
													<flattenmapper />
													<globmapper from="*" to="file:modules/*"
														casesensitive="no" />
												</chainedmapper>
											</mapper>
										</pathconvert>
										<propertyfile file="${project.build.directory}/config.properties">
											<entry key="felix.auto.start"
												value="${bundles} file:modules/${project.build.finalName}.jar" />
											<entry key="org.osgi.framework.bootdelegation" value="*" />
										</propertyfile>
										<copy
											file="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}"
											tofile="${project.build.directory}/felix.jar" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>create-executable-jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/main/assembly/felix.xml</descriptor>
									</descriptors>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run-on-felix</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.apache.felix.main</artifactId>
					<version>3.0.7</version>
					<scope>provided</scope>
				</dependency>
				<!-- org.apache.felix:org.apache.felix.gogo.shell:0.6.1 useless from 
					Maven since stdin is swallowed -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<target>
								<property name="vm.args" value="" />
								<pathconvert property="plugins.jars" pathsep="${path.separator}">
									<path refid="maven.runtime.classpath" />
									<map from="${project.build.directory}${file.separator}classes"
										to="" />
								</pathconvert>
								<makeurl property="urls" separator=" ">
									<path path="${plugins.jars}" />
									<path
										location="${project.build.directory}/${project.build.finalName}.jar" />
								</makeurl>
								<propertyfile file="${project.build.directory}/run.properties">
									<entry key="felix.auto.start" value="${urls}" />
									<entry key="felix.auto.deploy.action" value="uninstall,install,update,start" />
									<entry key="org.osgi.framework.storage"
										value="${project.build.directory}${file.separator}felix-cache" />
									<entry key="org.osgi.framework.bootdelegation" value="*" />
								</propertyfile>
								<makeurl property="run.properties.url"
									file="${project.build.directory}/run.properties" />
								<java fork="true"
									jar="${maven.dependency.org.apache.felix.org.apache.felix.main.jar.path}">
									<sysproperty key="felix.config.properties" value="${run.properties.url}" />
									<jvmarg line="${vm.args}" />
								</java>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
