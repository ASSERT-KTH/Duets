<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jisonami</groupId>
	<artifactId>Jisonami2</artifactId>
	<packaging>war</packaging>
	<version>0.1.1</version>
	<name>Jisonami Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
	</parent>

	<properties>
		<!-- 使用了lambda表达式，覆盖默认的java版本，默认为1.6 -->
		<java.version>1.8</java.version>
		<!-- 之前用hibernate5.1.0.Final生成的表，使用spring-boot-starter-data-jpa默认引入的hibernate4.3.11会报sql错 -->
		<hibernate.version>5.1.0.Final</hibernate.version>
		<oracle6.version>11.2.0.3</oracle6.version>
		<taglibs.standard.version>1.1.2</taglibs.standard.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- maven打war包需要，spring boot的jsp项目必须是war项目，jar项目不支持jsp -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- 引入oracle数据库jdbc驱动包 -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>${oracle6.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- jstl依赖包 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${taglibs.standard.version}</version>
		</dependency>

		<!-- json -->
		<!-- 引入fastjson依赖 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.12</version>
		</dependency>
		<!-- 引jackson依赖 -->
		<!-- jackson核心包，必选，提供基于“流模式”解析的API -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<!-- jackson注解包，可选，提供注解功能 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<!-- jackson数据绑定包，可选，提供基于“对象绑定”和“树模型”相关API -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- 引入gson依赖 -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>com.alibaba</groupId> -->
<!-- 			<artifactId>fastjson</artifactId> -->
<!-- 			<version>1.2.12</version> -->
<!-- 		</dependency> -->
		<!-- 引jackson依赖 -->
		<!-- jackson核心包，必选，提供基于“流模式”解析的API -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<!-- jackson注解包，可选，提供注解功能 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<!-- jackson数据绑定包，可选，提供基于“对象绑定”和“树模型”相关API -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- 引入gson依赖 -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.google.code.gson</groupId> -->
<!-- 			<artifactId>gson</artifactId> -->
<!-- 		</dependency> -->
	</dependencies>

	<build>
		<plugins>
			<!-- spring boot项目编译插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>
