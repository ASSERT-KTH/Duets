{"sha":"33d75882094ef40014d7d1012c164624687ea84f","url":"https://api.github.com/repos/lvCmx/jzoffer/git/trees/33d75882094ef40014d7d1012c164624687ea84f","tree":[{"path":".gitignore","mode":"100644","type":"blob","sha":"657c02bce8c99b9ac60c5570215b389a11e065af","size":412},{"path":"README.md","mode":"100644","type":"blob","sha":"15ad27e9f7b336d3755983d951571cd731332c8f","size":16538},{"path":"pom.xml","mode":"100644","type":"blob","sha":"341aa69b614bb27b7da449c9b8e585efb11fe5df","size":616},{"path":"src","mode":"040000","type":"tree","sha":"ad67751bc2cbb8a3ffaf27b505dadab9b1ceaad9"},{"path":"src/main","mode":"040000","type":"tree","sha":"83d54e9097821b8271ce528a19eb17e226c7d7af"},{"path":"src/main/java","mode":"040000","type":"tree","sha":"f9f4b37b5266c19059ae478809889f63534c3bc0"},{"path":"src/main/java/common","mode":"040000","type":"tree","sha":"6167875a6a7b93c08b39babe9531f0a6fa94d6f6"},{"path":"src/main/java/common/BinaryTree.java","mode":"100644","type":"blob","sha":"90429b9a8b4a0f68cd4791f8be15bcd55b5dfdd8","size":2507},{"path":"src/main/java/common/ListNode.java","mode":"100644","type":"blob","sha":"80f57e3e604b39744a013aec7441a21392b94540","size":220},{"path":"src/main/java/common/ListNodeUtil.java","mode":"100644","type":"blob","sha":"d0d6ab170086ec248e74d972441dbe223bfa3fdb","size":1397},{"path":"src/main/java/common/Node.java","mode":"100644","type":"blob","sha":"d93113b22c9d14901d3ff1d1fda803c8b814a2b5","size":419},{"path":"src/main/java/common/TreeNodeUtil.java","mode":"100644","type":"blob","sha":"fe78175622436198418bea738d2d5c55e891ab4c","size":49},{"path":"src/main/java/扩展_动态规划","mode":"040000","type":"tree","sha":"2250c27adf86612379216d475bb80830a1e59c45"},{"path":"src/main/java/扩展_动态规划/不能相邻的两个数的最大和","mode":"040000","type":"tree","sha":"6077a63b3f30b57afcde605600754bc506cc1b70"},{"path":"src/main/java/扩展_动态规划/不能相邻的两个数的最大和/Main.java","mode":"100644","type":"blob","sha":"58ad14e4af51ff480b2dd38c7ba3708953ee759e","size":1845},{"path":"src/main/java/扩展_动态规划/不能相邻的两个数的最大和/解题公式.png","mode":"100644","type":"blob","sha":"0843471952c7bb012936fccee835d199f33e84ee","size":668144},{"path":"src/main/java/扩展_动态规划/不能相邻的两个数的最大和/递归式.png","mode":"100644","type":"blob","sha":"1fa212cd185333de4dd27e98013138af20255adb","size":622162},{"path":"src/main/java/扩展_动态规划/不能相邻的两个数的最大和/题目_不相邻的两个数的最大和.png","mode":"100644","type":"blob","sha":"319b5a579789a2772333d2226f6d9991a126531b","size":167326},{"path":"src/main/java/扩展_动态规划/最大的利益","mode":"040000","type":"tree","sha":"06fdd8a126c495fdaccf81877244e92c3ba65cd7"},{"path":"src/main/java/扩展_动态规划/最大的利益/Main.java","mode":"100644","type":"blob","sha":"ae5459d12686b352d2763ce5e36142fe8bb779ac","size":978},{"path":"src/main/java/扩展_动态规划/最大的利益/题目.png","mode":"100644","type":"blob","sha":"265ee2681ea88e9cba80c38f8f06130542864abd","size":870304},{"path":"src/main/java/扩展_动态规划/求数组中的数之和为指定的数","mode":"040000","type":"tree","sha":"accde4660f2230d0cd89ea5cc74e45ed46dde56e"},{"path":"src/main/java/扩展_动态规划/求数组中的数之和为指定的数/Main.java","mode":"100644","type":"blob","sha":"04c339bc5d5b90951bb96e1b0f58d912f1961df6","size":878},{"path":"src/main/java/扩展_动态规划/求数组中的数之和为指定的数/递归的出口.png","mode":"100644","type":"blob","sha":"db96781663ddb873f252e0619edbbf71e7e9f2ad","size":535317},{"path":"src/main/java/扩展_动态规划/求数组中的数之和为指定的数/题目.png","mode":"100644","type":"blob","sha":"6e073387a0be9c970bafb6fbe14a13b7f3a41f8e","size":373945},{"path":"src/main/java/扩展_动态规划/连续子数组的最大和","mode":"040000","type":"tree","sha":"cab90d94e7da3afd1fd11e4f4ba3cca8e842e5de"},{"path":"src/main/java/扩展_动态规划/连续子数组的最大和/Main.java","mode":"100644","type":"blob","sha":"6b5a257180444e8f2062bd39491c7964eee37b2d","size":774},{"path":"src/main/java/第8章_英文版新增面试题","mode":"040000","type":"tree","sha":"654e3e5f6aef28437094322d56374b3210caf83b"},{"path":"src/main/java/第8章_英文版新增面试题/二叉树的下一个结点.java","mode":"100644","type":"blob","sha":"68ecd0a3a84dd882fe34787cce2ecc26827e3de7","size":1533},{"path":"src/main/java/第8章_英文版新增面试题/删除链表中重复的结点.java","mode":"100644","type":"blob","sha":"21b71cf8187449dbc3234304a303b6823db2a2cf","size":1332},{"path":"src/main/java/第8章_英文版新增面试题/对称的二叉树.java","mode":"100644","type":"blob","sha":"d22ded3663a17f95dd1657bfba6677aa92709217","size":586},{"path":"src/main/java/第8章_英文版新增面试题/把二叉树打印成多行.java","mode":"100644","type":"blob","sha":"7464d8e0dfd4c0ca39f83825732939a59d9fe411","size":974},{"path":"src/main/java/第8章_英文版新增面试题/数组中重复的数字.java","mode":"100644","type":"blob","sha":"4079d4bb700eb12db7a5c0efa3ba8ff038c749d2","size":784},{"path":"src/main/java/第8章_英文版新增面试题/链表中环的入口结点.java","mode":"100644","type":"blob","sha":"2957edfc6616783ea220018383b3a90addcc311a","size":1318},{"path":"src/main/java/第三章_高质量的代码","mode":"040000","type":"tree","sha":"754d6b7baf297c6a6b6be3cc375ac25e0f53050a"},{"path":"src/main/java/第三章_高质量的代码/反转链表.java","mode":"100644","type":"blob","sha":"b12f8c626079a6bfe409bfef4d78dd2043e63960","size":1154},{"path":"src/main/java/第三章_高质量的代码/合并两个排序的链表.java","mode":"100644","type":"blob","sha":"4d048410ad47a712ebd4cd402c8cdb312e68dcaa","size":1389},{"path":"src/main/java/第三章_高质量的代码/在O1时间删除链表结点.java","mode":"100644","type":"blob","sha":"3e7c6c79fc599823829db7572f19645626e18502","size":1496},{"path":"src/main/java/第三章_高质量的代码/奇数位于前面偶数位于后面并且不改原在原数组中的顺序.java","mode":"100644","type":"blob","sha":"c1381f50b08acd4eb21fc07200fa1304f2f9022d","size":1447},{"path":"src/main/java/第三章_高质量的代码/打印1至最大的n位数.java","mode":"100644","type":"blob","sha":"ec558cdcf33db6e87de6689de2851f2e8764ccde","size":118},{"path":"src/main/java/第三章_高质量的代码/数值的整数次方.java","mode":"100644","type":"blob","sha":"fc3250cb90eba2d0a6c978b8ac3855f9a1590645","size":909},{"path":"src/main/java/第三章_高质量的代码/树的子结构.java","mode":"100644","type":"blob","sha":"7db1d7d4520e68b314ac20f2e5c8ed481a96158e","size":953},{"path":"src/main/java/第三章_高质量的代码/调整数组顺序使奇数位于偶数前面.java","mode":"100644","type":"blob","sha":"21a4eb37100663a9932467df61c8533433eb0b33","size":1099},{"path":"src/main/java/第三章_高质量的代码/链表中倒数第k个结点.java","mode":"100644","type":"blob","sha":"f22b390003922f73a3bc35f92b3dcfe4cd7886c9","size":850},{"path":"src/main/java/第三章_高质量的代码/面试题_调整0位于数组的最后面.java","mode":"100644","type":"blob","sha":"c09c33aed0333e3a39a87058809311daf93d356c","size":1625},{"path":"src/main/java/第二章_面试需要的基础知识","mode":"040000","type":"tree","sha":"cf1eee1e895d0cdff18948a22b2bf486150ac330"},{"path":"src/main/java/第二章_面试需要的基础知识/Singleton模式.java","mode":"100644","type":"blob","sha":"efb90b38f6ea99487e2dc14b1be747868fc811fc","size":1826},{"path":"src/main/java/第二章_面试需要的基础知识/二维数组中的查找.java","mode":"100644","type":"blob","sha":"344cfaf663f34f32147751be0abbd96fbabd38ee","size":743},{"path":"src/main/java/第二章_面试需要的基础知识/二进制中1的个数.java","mode":"100644","type":"blob","sha":"2ba49b192a1dbce197785913207bc548f5c4fb44","size":802},{"path":"src/main/java/第二章_面试需要的基础知识/从尾到头打印链表.java","mode":"100644","type":"blob","sha":"22bcb8ed6f4220ad545513107b312c4b0ee4d684","size":838},{"path":"src/main/java/第二章_面试需要的基础知识/快速排序.java","mode":"100644","type":"blob","sha":"231d76dcbe101bb4a0fc96b290aa4a64cbf54ac4","size":963},{"path":"src/main/java/第二章_面试需要的基础知识/斐波那契数列.java","mode":"100644","type":"blob","sha":"369a3353456f09031231090ed3b213a67b25ef97","size":902},{"path":"src/main/java/第二章_面试需要的基础知识/旋转数组的最小数.java","mode":"100644","type":"blob","sha":"00f3acec5cab0ac8ec475ed378c7bf78de8a02c9","size":790},{"path":"src/main/java/第二章_面试需要的基础知识/替换空格.java","mode":"100644","type":"blob","sha":"30011fd093f9d990c5cc0103149ddd4112afd7dd","size":1272},{"path":"src/main/java/第二章_面试需要的基础知识/用两个栈实现队列.java","mode":"100644","type":"blob","sha":"80908bbcf66ca3700adfc1e29f12a3097014b984","size":862},{"path":"src/main/java/第二章_面试需要的基础知识/用两个队列实现一个栈.java","mode":"100644","type":"blob","sha":"fd576b97bb200b5254395b78cf9ff51d0828facb","size":1480},{"path":"src/main/java/第二章_面试需要的基础知识/跳台阶与变态跳台阶.java","mode":"100644","type":"blob","sha":"c2c48c1d51670f09cafae37913642b60b16fc012","size":637},{"path":"src/main/java/第二章_面试需要的基础知识/重建二叉树.java","mode":"100644","type":"blob","sha":"ccc3bc9bf8794b12d8e0e5cac8221a2c59d335e0","size":2452},{"path":"src/main/java/第五章_优化时间和空间效率","mode":"040000","type":"tree","sha":"bfd2852ae55b3926644dc258545db3bfa25b745a"},{"path":"src/main/java/第五章_优化时间和空间效率/test.java","mode":"100644","type":"blob","sha":"e54e0fb177f4fa38dad689c054cbb63cf8220c06","size":831},{"path":"src/main/java/第五章_优化时间和空间效率/两个链表的第一个公共结点.java","mode":"100644","type":"blob","sha":"0803d278b6cbb61d0204c009c25b86236381d5d2","size":1908},{"path":"src/main/java/第五章_优化时间和空间效率/数组中出现次数超过一半的数字.java","mode":"100644","type":"blob","sha":"33f17f3e279db0375b6662cc43add745f9257045","size":2251},{"path":"src/main/java/第五章_优化时间和空间效率/数组中的逆序对.java","mode":"100644","type":"blob","sha":"83ea1c0d12698ff1150357585beac88693d6ee94","size":311},{"path":"src/main/java/第五章_优化时间和空间效率/最小的k个数.java","mode":"100644","type":"blob","sha":"e78212b653ec1b50894a6f41a361f60fd6d3f660","size":2222},{"path":"src/main/java/第五章_优化时间和空间效率/第一个只出现一次的字符.java","mode":"100644","type":"blob","sha":"3018d588a85ccdf34a7e557e58b73e5333e074ff","size":1157},{"path":"src/main/java/第五章_优化时间和空间效率/连续子数组的最大和.java","mode":"100644","type":"blob","sha":"31f828e7926b22d029c902be1f78c4be21055d60","size":1660},{"path":"src/main/java/第六章_面试中的各项能力","mode":"040000","type":"tree","sha":"2e0f69489fe064ab5ff2eacdd44c781e955b2a62"},{"path":"src/main/java/第六章_面试中的各项能力/二叉树的深度.java","mode":"100644","type":"blob","sha":"5ed52a65c263f292b88124be311e4eda733e50d1","size":343},{"path":"src/main/java/第六章_面试中的各项能力/判断二叉树是否为平衡二叉树.java","mode":"100644","type":"blob","sha":"83374374e9aedd723d0410356f47a929b6793c45","size":1454},{"path":"src/main/java/第六章_面试中的各项能力/和为s的两个数.java","mode":"100644","type":"blob","sha":"e42f438782ea695f561eeba17d19b85efe9f659e","size":1172},{"path":"src/main/java/第六章_面试中的各项能力/和为s的连续正数序列.java","mode":"100644","type":"blob","sha":"61da94dc2ad2f261f977998937956f36b46ed7f6","size":816},{"path":"src/main/java/第六章_面试中的各项能力/字符反转.java","mode":"100644","type":"blob","sha":"0212f6f528499d11016a38f48543f2a24ef17f19","size":977},{"path":"src/main/java/第六章_面试中的各项能力/数字在排序数组中出现的次数.java","mode":"100644","type":"blob","sha":"c15461c1fa3b21b75a5592e3a691fba8b111d287","size":2107},{"path":"src/main/java/第六章_面试中的各项能力/数组中只出现一次的数字.java","mode":"100644","type":"blob","sha":"ee1e0c35c3762b83ab6f78ad70339a512061bcfc","size":1332},{"path":"src/main/java/第六章_面试中的各项能力/翻转单词顺序.java","mode":"100644","type":"blob","sha":"74ac0a91d0583121c91cec6692909d20f3f24912","size":1105},{"path":"src/main/java/第四章_解决面试的思路","mode":"040000","type":"tree","sha":"2d89e64b0d56c8b14c0e8fb69b3dc57d42b003ba"},{"path":"src/main/java/第四章_解决面试的思路/之字打印二叉树.java","mode":"100644","type":"blob","sha":"bf54b2d061ab38064797f4cdd89aa7ba53abf493","size":2252},{"path":"src/main/java/第四章_解决面试的思路/二叉搜索树与双向链表.java","mode":"100644","type":"blob","sha":"3a5983075525fb1ca6ad81cec91baa9cf9b87df3","size":686},{"path":"src/main/java/第四章_解决面试的思路/二叉搜索树的后序遍历序列.java","mode":"100644","type":"blob","sha":"329bedcfdacc08225393251340c3f4ae5eaa3c93","size":1340},{"path":"src/main/java/第四章_解决面试的思路/二叉树中和为某一值的路径.java","mode":"100644","type":"blob","sha":"79d59395699e830dd6a2cdbba3c99ac37c93b3e7","size":2139},{"path":"src/main/java/第四章_解决面试的思路/二叉树的镜像.java","mode":"100644","type":"blob","sha":"30c1f988542f00b2f6e9bfef28cc61b443aeecde","size":543},{"path":"src/main/java/第四章_解决面试的思路/从上往下打印二叉树.java","mode":"100644","type":"blob","sha":"9d0b68ef8349e459c09a53de56042ca358a52950","size":1167},{"path":"src/main/java/第四章_解决面试的思路/从上往下打印二叉树_按行打印.java","mode":"100644","type":"blob","sha":"add4884f0196f6d58db924844e55913b4a52a26e","size":1363},{"path":"src/main/java/第四章_解决面试的思路/包含min函数的栈.java","mode":"100644","type":"blob","sha":"2616988f89018db734c1e58b5270969b8a4a203b","size":1708},{"path":"src/main/java/第四章_解决面试的思路/复杂链表的复制.java","mode":"100644","type":"blob","sha":"1409cae12c91d9bf5fa797cd9e5b27db2ccb6490","size":83},{"path":"src/main/java/第四章_解决面试的思路/字符串的全排列_去除重复.java","mode":"100644","type":"blob","sha":"536a3ce80d504b3d3fc2c081dab3db54d0f3c603","size":1488},{"path":"src/main/java/第四章_解决面试的思路/字符串的排列.java","mode":"100644","type":"blob","sha":"857732b01f59c2f9bdf70f20c65cb283e91794f4","size":1264},{"path":"src/main/java/第四章_解决面试的思路/字符串的组合.java","mode":"100644","type":"blob","sha":"99fb837af076e8cc2d282b9fbe5276d8bf8e15cd","size":1664},{"path":"src/main/java/第四章_解决面试的思路/思考题_8个数字在正方体上三组相对的面上的4个顶点的和都相等.java","mode":"100644","type":"blob","sha":"f9a85132f4b1965e00a22df391814ef6f1777f73","size":2512},{"path":"src/main/java/第四章_解决面试的思路/栈的压入及弹出序列.java","mode":"100644","type":"blob","sha":"cf525928dbc3bd4ce2e03e2fc75b78d88aac9dbc","size":1245},{"path":"src/main/java/第四章_解决面试的思路/面试题_45度打印矩阵.java","mode":"100644","type":"blob","sha":"0fb30377124b9ec376ada2f60b9a9f9980fab8fd","size":1086},{"path":"src/main/java/第四章_解决面试的思路/顺时针打印矩阵.java","mode":"100644","type":"blob","sha":"3a9de255e4fafc5c5bf17b1fc5589b69a2ce4a9d","size":1542}],"truncated":false}