<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.gitfx</groupId>
    <artifactId>GitFx</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
  
    <name>GitFx</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>io.github.gitfx.GitFxApp</mainClass>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>5.0-SNAPSHOT</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.1-alpha</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit</artifactId>
            <version>4.0.1-alpha</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.9</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>
        
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.airhacks</groupId>
            <artifactId>afterburner.fx</artifactId>
            <version>1.6.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.20.8</version>
        </dependency>
        <!-- Core Library -->
       
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>3.7.0.201502260915-r</version>
        </dependency>
       

        <!-- Smart HTTP Servlet -->
     
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit.http.server</artifactId>
            <version>3.7.0.201502260915-r</version>
        </dependency>
        

        <!-- AWT UI Helpers -->
     
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit.ui</artifactId>
            <version>3.7.0.201502260915-r</version>
        </dependency>
       

        <!-- JUnit Test Support -->
     
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit.junit</artifactId>
            <version>3.7.0.201502260915-r</version>
        </dependency>
        
        <!-- For AspectJ:-  
        	This Package defines some useful Annotations for handling cross cutting concerns.
        	source:- http://aspects.jcabi.com/index.html
        	-->
        <dependency>
      		<groupId>com.jcabi</groupId>
      		<artifactId>jcabi-aspects</artifactId>
      		<version>0.22.5</version>
 		</dependency>
 		
 		<!-- For AspectJ Runtime:-  
			The runtime needed to execute a program using AspectJ
        	source:- https://mvnrepository.com/artifact/org.aspectj/aspectjrt/1.6.12
        	-->
    	<dependency>
      		<groupId>org.aspectj</groupId>
      		<artifactId>aspectjrt</artifactId>
      		<version>1.6.12</version>
      		<scope>runtime</scope>
    	</dependency>
        
        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjtools -->
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjtools</artifactId>
		    <version>1.8.6</version>
		</dependency>
		        
    </dependencies>
    
    <repositories>
    
        <repository>
            <id>jgit-repository</id>
            <url>https://repo.eclipse.org/content/groups/releases/</url>
        </repository>
    
        <repository>
            <id>maven-central-repo</id>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>sonatype-snapshots-repo</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <organization>
        <name>GitFx</name>
    </organization>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>system</excludeScope>
                            <excludes>META-INF/*.SF</excludes>
                            <excludes>META-INF/*.DSA</excludes>
                            <excludes>META-INF/*.RSA</excludes>
                            <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/../bin/javafxpackager</executable>
                            <arguments>
                                <argument>-createjar</argument>
                                <argument>-nocss2bin</argument>
                                <argument>-appclass</argument>
                                <argument>${mainClass}</argument>
                                <argument>-srcdir</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-outdir</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>-outfile</argument>
                                <argument>${project.build.finalName}.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>exec</goal>                            
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <commandlineArgs>${runfx.args}</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>  
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
                    </compilerArguments>
                    <debug>false</debug>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${java.home}/lib/jfxrt.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
            
            
            <!-- For AspectJ Automation:
            	It is used in com.jcabi:parent POM project in order to automate certain build operations. 
            	source:- http://plugin.jcabi.com/usage.html 
            	-->
            <plugin>
        		<groupId>com.jcabi</groupId>
        		<artifactId>jcabi-maven-plugin</artifactId>
        		<version>0.14</version>
        		<executions>
          			<execution>
			            <goals>
              				<goal>ajc</goal>
            			</goals>
          			</execution>
        		</executions>
      		</plugin>
      		
        </plugins>
        
        
        <!-- This added to solve the Error in the execution element of the jcabi-maven-plugin:
        	 # Plugin execution not covered by lifecycle configuration: com.jcabi:jcabi-maven-plugin:0.9.2:ajc (execution: default, phase: process-classes)
        	 source:- http://aspects.jcabi.com/example-weaving-eclipse.html
        	 		  http://aspects.jcabi.com/example-weaving.html
        	 -->
        <pluginManagement>
	    <plugins>
	    <!--This plugin's configuration is used to store Eclipse m2e settings
	      only. It has no influence on the Maven build itself. -->
	    <plugin>
	      <groupId>org.eclipse.m2e</groupId>
	      <artifactId>lifecycle-mapping</artifactId>
	      <version>1.0.0</version>
	      <configuration>
	        <lifecycleMappingMetadata>
	          <pluginExecutions>
	            <pluginExecution>
	              <pluginExecutionFilter>
	                <groupId>com.jcabi</groupId>
	                <artifactId>jcabi-maven-plugin</artifactId>
	                <versionRange>[0.0,)</versionRange>
	                <goals>
	                  <goal>ajc</goal>
	                </goals>
	              </pluginExecutionFilter>
	              <action>
	                <execute />
	              </action>
	            </pluginExecution>
	          </pluginExecutions>
	        </lifecycleMappingMetadata>
	      </configuration>
	    </plugin>
	  </plugins>
	  </pluginManagement>
        
    </build>
</project>
