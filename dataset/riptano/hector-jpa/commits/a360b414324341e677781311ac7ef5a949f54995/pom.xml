<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.datastax.hectorjpa</groupId>
	<artifactId>hector-jpa</artifactId>
	<version>0.8.0-6-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>hector-jpa</name>
	<url>http://github.com/riptano/hector-jpa</url>
	<licenses>
		<license>
			<name>MIT License</name>
			<distribution>repo</distribution>
			<url>https://github.com/riptano/hector-jpa/wiki/License</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git://github.com/riptano/hector-jpa.git</connection>
		<developerConnection>scm:git:git@github.com:riptano/hector-jpa.git</developerConnection>
		<url>http://github.com/riptano/hector-jpa/tree/master/</url>
	</scm>

	<issueManagement>
		<system>github</system>
		<url>http://github.com/riptano/hector-jpa/issues</url>
	</issueManagement>

	<distributionManagement>
		<site>
			<id>github.com</id>
			<url>gitsite:git@github.com/riptano/hector-jpa.git</url>
		</site>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		 <dependency>
			<groupId>org.apache.cassandra</groupId>
			<artifactId>cassandra-javautils</artifactId>
			<version>0.7.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cassandra</groupId>
			<artifactId>cassandra-all</artifactId>
			<version>0.8.6</version>
		</dependency>
		<dependency>
			<groupId>me.prettyprint</groupId>
			<artifactId>hector-core</artifactId>
			<version>0.8.0-2-24277548729756076783ff5f1dc1b0656dba6bb1</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		
		<!-- <dependency> <groupId>cassandra-indexed-collections</groupId> <artifactId>cassandra-indexed-collections</artifactId> 
			<version>0.0.2-SNAPSHOT</version> </dependency> -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>


		<!-- required for consistency annotations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>





		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa</artifactId>
			<version>${openjpa.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa-kernel</artifactId>
			<version>${openjpa.version}</version>
		</dependency> -->
		<!-- <dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa-jdbc</artifactId>
			<version>${openjpa.version}</version>
			<scope>test</scope>
		</dependency> -->
	<!-- 	<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa-persistence-jdbc</artifactId>
			<version>${openjpa.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa-persistence-jdbc</artifactId>
			<version>${openjpa.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency> -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<optimize>true</optimize>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
				<executions>
					<execution>
						<id>generate-query-metadata</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
							<optimize>true</optimize>
							<showDeprecation>true</showDeprecation>
							<showWarnings>true</showWarnings>
							<compilerArgument>-Aopenjpa.metamodel=true</compilerArgument>
							<testIncludes>
								<includes>com/datastax/hectorjpa/bean/**/*.java</includes>
							</testIncludes>
						</configuration>
					</execution>
					<!-- performs normal compilation of all classes in test package -->

					<execution>
						<id>compile-all-tests</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>

					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<useProjectReferences>false</useProjectReferences>
				</configuration>
			</plugin>

			<!-- generate metadata for typed queries we have to define the compiler 
				plugin twice to make sure everything gets compiled during the normal test 
				compile phase -->



			<!-- enhance our test entities -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>openjpa-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>testEnhancer</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>test-enhance</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>com/datastax/hectorjpa/bean/**/*.class</includes>
				</configuration>
			</plugin>

			<!-- always attach sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- attach sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- install the jars for hector jpa to function properly -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<id>install-jar</id>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<pomFile>lib/hector-core-0.8.0-2-24277548729756076783ff5f1dc1b0656dba6bb1.pom</pomFile>
							<file>lib/hector-core-0.8.0-2-24277548729756076783ff5f1dc1b0656dba6bb1.jar</file>
							<sources>lib/hector-core-0.8.0-2-24277548729756076783ff5f1dc1b0656dba6bb1-sources.jar</sources>
							<packaging>jar</packaging>
						</configuration>
					</execution>
					<execution>
						<phase>validate</phase>
						<id>install-source</id>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<pomFile>lib/hector-core-0.8.0-2-24277548729756076783ff5f1dc1b0656dba6bb1.pom</pomFile>
							<file>lib/hector-core-0.8.0-2-24277548729756076783ff5f1dc1b0656dba6bb1-sources.jar</file>
							<packaging>java-source</packaging>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-install-plugin
										</artifactId>
										<versionRange>
											[2.3.1,)
										</versionRange>
										<goals>
											<goal>install-file</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											openjpa-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>test-enhance</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<properties>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.outputEncoding>UTF-8</project.build.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<slf4j.version>1.6.1</slf4j.version>
		<aspectj.version>1.6.8</aspectj.version>
		<openjpa.version>2.1.1</openjpa.version>
	</properties>

</project>
