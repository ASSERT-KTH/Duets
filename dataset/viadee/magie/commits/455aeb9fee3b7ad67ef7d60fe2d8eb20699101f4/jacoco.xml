<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="ExplanationFramework"><sessioninfo id="ca10fcd9b42c-78ef0b66" start="1596150496482" dump="1596150501058"/><package name="de/viadee/xai/framework/global_explanation_procedure_step"><class name="de/viadee/xai/framework/global_explanation_procedure_step/ExplanationProcedureStep" sourcefilename="ExplanationProcedureStep.java"/><sourcefile name="ExplanationProcedureStep.java"/></package><package name="de/viadee/xai/framework/adapter/local_explainer_adapter"><class name="de/viadee/xai/framework/adapter/local_explainer_adapter/AnchorLocalExplainerAdapter" sourcefilename="AnchorLocalExplainerAdapter.java"><method name="&lt;init&gt;" desc="(Z)V" line="33"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZIIIII)V" line="33"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTabularInstance" desc="(I)Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explain" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularRow;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="87"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateRuleExplanation" desc="(Lde/viadee/xai/anchor/algorithm/AnchorResult;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="113"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;)V" line="141"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="291" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter" sourcefilename="LocalExplainerAdapter.java"/><sourcefile name="AnchorLocalExplainerAdapter.java"><line nr="33" mi="10" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="11" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="11" ci="0" mb="2" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="151" mi="12" ci="0" mb="4" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="9" ci="0" mb="2" cb="0"/><line nr="157" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="291" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LocalExplainerAdapter.java"/><counter type="INSTRUCTION" missed="291" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/optimization_initializer"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/optimization_initializer/EvolutionStartInitializer" sourcefilename="EvolutionStartInitializer.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)[Lio/jenetics/Genotype;" line="26"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)V" line="52"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constructBinaryStringFromBooleanArray" desc="([Z)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/optimization_initializer/BinaryAscendingInitializer" sourcefilename="BinaryAscendingInitializer.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)[[Z" line="20"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/optimization_initializer/BinaryRuleExplanationInitializer" sourcefilename="BinaryRuleExplanationInitializer.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)[[Z" line="32"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)V" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="EvolutionStartInitializer.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="17" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="2" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="2" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="2" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="59" mi="10" ci="0" mb="2" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryRuleExplanationInitializer.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="2" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="16" ci="0" mb="2" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="2" cb="0"/><line nr="46" mi="6" ci="0" mb="2" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryAscendingInitializer.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="11" ci="0" mb="2" cb="0"/><line nr="24" mi="10" ci="0" mb="2" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="271" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="59" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="de/viadee/xai/framework/explanation_calculation/explanation"><class name="de/viadee/xai/framework/explanation_calculation/explanation/BitmapRuleExplanationSet" sourcefilename="BitmapRuleExplanationSet.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDataset;Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILjava/util/Set;)V" line="33"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="51"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILjava/util/Collection;Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="72"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="95"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="113"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverFromRuleExplanationSet" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="124"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndicesFromRuleExplanations" desc="(Ljava/util/Set;Ljava/util/function/Function;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="137"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverFromRuleExplanation" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="146"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)V" line="154"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCoveredInstances" desc="()I" line="168"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverage" desc="()D" line="173"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditions" desc="()Ljava/util/Map;" line="178"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberExplanations" desc="()I" line="190"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberConditionValues" desc="()I" line="195"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelFeature" desc="()Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="204"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelValue" desc="()I" line="209"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCalculator" desc="()Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="214"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="219"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExplanations" desc="()Ljava/util/Set;" line="228"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="233"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="314" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="70" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/ExplanationMetricAssignation" sourcefilename="ExplanationMetricAssignation.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;D)V" line="19"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetricValue" desc="()D" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExplanation" desc="()Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/ExplanationMetricAssignation;)I" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="52"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/StdRuleExplanationSetFactory" sourcefilename="StdRuleExplanationSetFactory.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmpty" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="29"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newWithCollection" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILjava/util/Collection;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="36"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newCopyWith" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateWithData" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/MinimalCoversRuleExplanationFactory" sourcefilename="MinimalCoversRuleExplanationFactory.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="(Ljava/util/Map;Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateWithData" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCalculator" desc="()Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/StdRuleExplanationFactory" sourcefilename="StdRuleExplanationFactory.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="(Ljava/util/Map;Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)Lde/viadee/xai/framework/explanation_calculation/explanation/StdRuleExplanation;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateWithData" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Lde/viadee/xai/framework/explanation_calculation/explanation/StdRuleExplanation;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCalculator" desc="()Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/StdRuleExplanation" sourcefilename="StdRuleExplanation.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="64"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateCoverAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCorrectCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="93"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateCorrectCoverAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="98"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncorrectCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="103"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateIncorrectCoverAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="108"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateCorrectlyNotCoveredAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCorrectlyNotCoveredAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="118"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyNotCoveredAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateIncorrectlyNotCoveredAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverage" desc="()D" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrecision" desc="()D" line="138"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePrecision" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;)D" line="143"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateCoverage" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;)D" line="154"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePrecision" desc="(II)D" line="161"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateCoverage" desc="(II)D" line="169"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCorrectlyCovered" desc="()I" line="174"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyCovered" desc="()I" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyNotCovered" desc="()I" line="184"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyNotCovered" desc="()I" line="189"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCovered" desc="()I" line="194"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabelFeature" desc="()Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="199"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelValue" desc="()I" line="204"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionFeatures" desc="()Ljava/util/Set;" line="209"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionValues" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)Ljava/util/Set;" line="214"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditions" desc="()Ljava/util/Map;" line="219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberConditionValues" desc="()I" line="224"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberConditions" desc="()I" line="233"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="238"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="249"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="258"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCalculator" desc="()Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="268"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$1" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)Ljava/lang/String;" line="273"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$0" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/lang/Integer;)Ljava/lang/String;" line="276"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="362" covered="105"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="69" covered="21"/><counter type="COMPLEXITY" missed="36" covered="11"/><counter type="METHOD" missed="26" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory" sourcefilename="RuleExplanationSetFactory.java"/><class name="de/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory" sourcefilename="RuleExplanationFactory.java"/><class name="de/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet" sourcefilename="RuleExplanationSet.java"/><class name="de/viadee/xai/framework/explanation_calculation/explanation/MinimalBitmapCoversRuleExplanation" sourcefilename="MinimalBitmapCoversRuleExplanation.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="64"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateCoverAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCorrectCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateCorrectCoverAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncorrectCoverAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateIncorrectCoverAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCorrectlyNotCoveredAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="114"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateCorrectlyNotCoveredAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="123"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncorrectlyNotCoveredAsBitmap" desc="()Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateIncorrectlyNotCoveredAsBitmap" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="133"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoverage" desc="()D" line="138"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrecision" desc="()D" line="145"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePrecision" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;)D" line="152"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateCoverage" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;)D" line="162"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePrecision" desc="(II)D" line="169"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateCoverage" desc="(II)D" line="177"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCorrectlyCovered" desc="()I" line="182"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyCovered" desc="()I" line="187"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyNotCovered" desc="()I" line="193"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyNotCovered" desc="()I" line="198"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCovered" desc="()I" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabelFeature" desc="()Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="208"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelValue" desc="()I" line="213"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionFeatures" desc="()Ljava/util/Set;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditionValues" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)Ljava/util/Set;" line="223"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConditions" desc="()Ljava/util/Map;" line="228"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberConditionValues" desc="()I" line="233"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCalculator" desc="()Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="242"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberConditions" desc="()I" line="247"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="253"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="264"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="273"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="278"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$1" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)Ljava/lang/String;" line="283"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$0" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/lang/Integer;)Ljava/lang/String;" line="286"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="363" covered="111"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="72" covered="26"/><counter type="COMPLEXITY" missed="36" covered="11"/><counter type="METHOD" missed="26" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation" sourcefilename="RuleExplanation.java"/><sourcefile name="RuleExplanationFactory.java"/><sourcefile name="BitmapRuleExplanationSet.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="2" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="2" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="9" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="7" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="10" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="11" ci="0" mb="2" cb="0"/><line nr="180" mi="11" ci="0" mb="2" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="12" ci="0" mb="2" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="20" ci="0" mb="0" cb="0"/><line nr="222" mi="6" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="314" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="70" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExplanationMetricAssignation.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="11" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="62" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RuleExplanationSet.java"/><sourcefile name="RuleExplanationSetFactory.java"/><sourcefile name="StdRuleExplanationFactory.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimalBitmapCoversRuleExplanation.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="2" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="7" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="10" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="7" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="12" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="2" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="19" ci="0" mb="4" cb="0"/><line nr="258" mi="5" ci="0" mb="2" cb="0"/><line nr="264" mi="7" ci="0" mb="0" cb="0"/><line nr="265" mi="12" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="7" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="14" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="18" ci="0" mb="0" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="9" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="363" covered="111"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="72" covered="26"/><counter type="COMPLEXITY" missed="36" covered="11"/><counter type="METHOD" missed="26" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleExplanation.java"/><sourcefile name="StdRuleExplanationSetFactory.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StdRuleExplanation.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="2" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="2" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="2" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="10" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="12" ci="0" mb="2" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="19" ci="0" mb="4" cb="0"/><line nr="243" mi="5" ci="0" mb="2" cb="0"/><line nr="249" mi="7" ci="0" mb="0" cb="0"/><line nr="250" mi="12" ci="0" mb="2" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="14" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="18" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="9" ci="0" mb="0" cb="0"/><line nr="279" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="362" covered="105"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="69" covered="21"/><counter type="COMPLEXITY" missed="36" covered="11"/><counter type="METHOD" missed="26" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimalCoversRuleExplanationFactory.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1170" covered="246"/><counter type="BRANCH" missed="64" covered="0"/><counter type="LINE" missed="238" covered="55"/><counter type="COMPLEXITY" missed="124" covered="26"/><counter type="METHOD" missed="92" covered="26"/><counter type="CLASS" missed="3" covered="4"/></package><package name="de/viadee/xai/framework/validation"><class name="de/viadee/xai/framework/validation/AdultValidation" sourcefilename="AdultValidation.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/validation/CarValidation" sourcefilename="CarValidation.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="15"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/validation/IrisValidation" sourcefilename="IrisValidation.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/validation/TitanicValidation" sourcefilename="TitanicValidation.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/validation/SkinValidation" sourcefilename="SkinValidation.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CarValidation.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TitanicValidation.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SkinValidation.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IrisValidation.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AdultValidation.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="367" covered="0"/><counter type="LINE" missed="103" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="de/viadee/xai/framework/utility"><class name="de/viadee/xai/framework/utility/Tuple" sourcefilename="Tuple.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstElement" desc="()Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecondElement" desc="()Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/utility/RuleMetricCalculation" sourcefilename="RuleMetricCalculation.java"><method name="calculateJaccardSimilarity" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateJaccardDissimilarity" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="31"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateJaccardSimilarity" desc="(Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;)D" line="41"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateJaccardDissimilarity" desc="(Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;)D" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateRMI" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="65"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRMI" desc="(IIII)D" line="82"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRMI2" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="119"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRMI2" desc="(IIII)D" line="134"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateMICell" desc="(IIII)D" line="159"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRecall" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="171"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateF1" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="183"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateAccuracy" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="194"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateMatthewsCorrelationCoefficient" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="208"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateNormalizedRMI" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)D" line="223"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="320" covered="66"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="61" covered="12"/><counter type="COMPLEXITY" missed="20" covered="4"/><counter type="METHOD" missed="10" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/utility/Utility" sourcefilename="Utility.java"><method name="doublesEqual" desc="(DD)Z" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareDoubles" desc="(DD)I" line="56"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateBinaryChars" desc="(II)Ljava/util/Map;" line="75"><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortExplanationsViaMetric" desc="(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/List;" line="133"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateRuleExplanationsWithFactory" desc="(Ljava/util/Collection;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;)Ljava/util/Set;" line="152"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformConditionsMapToArray" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;" line="170"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformSetToBitmap" desc="(Ljava/util/Set;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="189"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformBitmapsToSets" desc="([Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;)[Ljava/util/Set;" line="202"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformBitmapToSet" desc="(Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;)Ljava/util/Set;" line="215"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="roundDouble" desc="(DI)D" line="229"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sortExplanationsViaMetric$0" desc="(Ljava/util/function/Function;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Lde/viadee/xai/framework/explanation_calculation/explanation/ExplanationMetricAssignation;" line="136"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="250" covered="98"/><counter type="BRANCH" missed="30" covered="8"/><counter type="LINE" missed="57" covered="21"/><counter type="COMPLEXITY" missed="23" covered="8"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuleMetricCalculation.java"><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="102" mi="8" ci="0" mb="4" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="16" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="16" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="10" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="12" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="25" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="320" covered="66"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="61" covered="12"/><counter type="COMPLEXITY" missed="20" covered="4"/><counter type="METHOD" missed="10" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tuple.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Utility.java"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="2" cb="0"/><line nr="56" mi="6" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="10" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="2" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="2" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="11" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="10" ci="0" mb="2" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="11" mb="0" cb="2"/><line nr="175" mi="0" ci="12" mb="0" cb="2"/><line nr="176" mi="0" ci="11" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="10" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="2"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="10" mb="0" cb="2"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="250" covered="98"/><counter type="BRANCH" missed="30" covered="8"/><counter type="LINE" missed="57" covered="21"/><counter type="COMPLEXITY" missed="23" covered="8"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="570" covered="179"/><counter type="BRANCH" missed="50" covered="8"/><counter type="LINE" missed="118" covered="39"/><counter type="COMPLEXITY" missed="43" covered="15"/><counter type="METHOD" missed="18" covered="11"/><counter type="CLASS" missed="0" covered="3"/></package><package name="de/viadee/xai/framework/persistence"><class name="de/viadee/xai/framework/persistence/PersistenceService" sourcefilename="PersistenceService.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/persistence/explanation_persistence_service/ExplanationPersistenceService;Lde/viadee/xai/framework/persistence/data_persistence_service/DataPersistenceService;Lde/viadee/xai/framework/persistence/calculator_persistence_service/CalculatorPersistenceService;)V" line="38"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistExplanations" desc="(Ljava/util/List;I)Ljava/util/Map;" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistCalculator" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)I" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistData" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDataset;Lde/viadee/xai/framework/data/index/RoaringBitmapIndex;)I" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadExplanations" desc="(I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadExplanationsForAllLabels" desc="([I)Ljava/util/Set;" line="103"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadCalculator" desc="(I)Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadData" desc="(I)Lde/viadee/xai/framework/utility/Tuple;" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="terminate" desc="()V" line="129"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="PersistenceService.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="2" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="2" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/exception"><class name="de/viadee/xai/framework/exception/PipelineExecutionFailed" sourcefilename="PipelineExecutionFailed.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/LabelTypeDiscretizationNotLegal" sourcefilename="LabelTypeDiscretizationNotLegal.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/RuleJoinNotLegal" sourcefilename="RuleJoinNotLegal.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;ILde/viadee/xai/framework/data/Feature$CategoricalFeature;I)V" line="22"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/BuildProcessNotLegal" sourcefilename="BuildProcessNotLegal.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/FeatureNotLegal" sourcefilename="FeatureNotLegal.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="16"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature;)V" line="24"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/ColumnTypeNotAccepted" sourcefilename="ColumnTypeNotAccepted.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;)V" line="17"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/ColumnForFeatureNotFound" sourcefilename="ColumnForFeatureNotFound.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature;)V" line="19"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/RepresentationNotFound" sourcefilename="RepresentationNotFound.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/io/Serializable;)V" line="19"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/PostDiscretizationNotLegal" sourcefilename="PostDiscretizationNotLegal.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/exception/FeatureNotFound" sourcefilename="FeatureNotFound.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature;)V" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RepresentationNotFound.java"><line nr="19" mi="16" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ColumnTypeNotAccepted.java"><line nr="17" mi="13" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ColumnForFeatureNotFound.java"><line nr="19" mi="13" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LabelTypeDiscretizationNotLegal.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BuildProcessNotLegal.java"><line nr="12" mi="12" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PostDiscretizationNotLegal.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RuleJoinNotLegal.java"><line nr="22" mi="17" ci="0" mb="0" cb="0"/><line nr="23" mi="9" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PipelineExecutionFailed.java"><line nr="13" mi="12" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FeatureNotLegal.java"><line nr="16" mi="13" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="19" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FeatureNotFound.java"><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="12" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="158" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="10" covered="0"/></package><package name="de/viadee/xai/framework/adapter/data_source_adapter"><class name="de/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter" sourcefilename="NullDataAdapter.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/anchor/adapter/tabular/AnchorTabular;)V" line="16"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadDataset" desc="()Lde/viadee/xai/anchor/adapter/tabular/AnchorTabular;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/adapter/data_source_adapter/DataSourceAdapter" sourcefilename="DataSourceAdapter.java"/><sourcefile name="DataSourceAdapter.java"/><sourcefile name="NullDataAdapter.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="2" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/adapter/black_box_classifier_adapter"><class name="de/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter" sourcefilename="BlackBoxClassifierAdapter.java"/><class name="de/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxModelAdapter" sourcefilename="BlackBoxModelAdapter.java"/><class name="de/viadee/xai/framework/adapter/black_box_classifier_adapter/TRSmileRFClassifier" sourcefilename="TRSmileRFClassifier.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;)Ljava/lang/Integer;" line="28"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transform" desc="(Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;)[D" line="33"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predict" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularRow;)I" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortGenericColumns" desc="([Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;)[Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;" line="69"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="164" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/adapter/black_box_classifier_adapter/TabularRowToTabularInstance" sourcefilename="TabularRowToTabularInstance.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularRow;)Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;" line="23"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetValue" desc="(Lde/viadee/xai/framework/data/FeatureValue;)Ljava/io/Serializable;" line="60"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/adapter/black_box_classifier_adapter/TabularRowTransformer" sourcefilename="TabularRowTransformer.java"/><class name="de/viadee/xai/framework/adapter/black_box_classifier_adapter/TRSmileClassifier" sourcefilename="TRSmileClassifier.java"><method name="&lt;init&gt;" desc="(I)V" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="train" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDataset;)V" line="42"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformAll" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDataset;)Lde/viadee/xai/framework/utility/Tuple;" line="56"><counter type="INSTRUCTION" missed="163" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="194" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TabularRowToTabularInstance.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="2" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="2" cb="0"/><line nr="41" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlackBoxClassifierAdapter.java"/><sourcefile name="BlackBoxModelAdapter.java"/><sourcefile name="TRSmileClassifier.java"><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="2" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="11" ci="0" mb="2" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="2" cb="0"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="10" ci="0" mb="2" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="2" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="194" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TabularRowTransformer.java"/><sourcefile name="TRSmileRFClassifier.java"><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="9" ci="0" mb="2" cb="0"/><line nr="38" mi="6" ci="0" mb="2" cb="0"/><line nr="40" mi="11" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="2" cb="0"/><line nr="75" mi="9" ci="0" mb="2" cb="0"/><line nr="76" mi="11" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="2" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="164" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="482" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="100" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="de/viadee/xai/framework/data/tabular_data"><class name="de/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder" sourcefilename="TabularDataset.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lde/viadee/xai/anchor/adapter/tabular/AnchorTabular;)V" line="483"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withPreDiscretizationForBlackboxData" desc="(Lde/viadee/xai/framework/data/preprocessor/Preprocessor;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="515"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withBlackboxDataDiscretizer" desc="(Lde/viadee/xai/framework/data/preprocessor/Discretizer;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="529"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withPostDiscretizationForBlackboxData" desc="(Lde/viadee/xai/framework/data/preprocessor/Preprocessor;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="547"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withPreDiscretizationForExplainerData" desc="(Lde/viadee/xai/framework/data/preprocessor/Preprocessor;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="562"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withTrainingTestSplit" desc="(ZDI)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="576"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExplainerDataDiscretizer" desc="(Lde/viadee/xai/framework/data/preprocessor/Discretizer;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="597"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withBlackBoxModel" desc="(Lde/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="612"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withPostDiscretizationForExplainerData" desc="(Lde/viadee/xai/framework/data/preprocessor/Preprocessor;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="625"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildTrainingData" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="644"><counter type="INSTRUCTION" missed="219" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildTestData" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="728"><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trainingTestSplit" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;DI)Lde/viadee/xai/framework/utility/Tuple;" line="800"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateTabularDatasetPackageFromIndices" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;Ljava/util/List;)Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;" line="834"><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateLabelColumnToFeature" desc="([Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;)Lde/viadee/xai/framework/data/tabular_data/LabelColumn;" line="884"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateColumnsToFeatures" desc="([Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;Ljava/util/List;)Lde/viadee/xai/framework/utility/Tuple;" line="908"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateColumnToFeature" desc="([Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;Z)Lde/viadee/xai/framework/utility/Tuple;" line="928"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateDoubleColumn" desc="([Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;Lde/viadee/xai/anchor/adapter/tabular/column/DoubleColumn;Z)Lde/viadee/xai/framework/utility/Tuple;" line="940"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateCategoricalColumn" desc="([Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;ZZ)Lde/viadee/xai/framework/utility/Tuple;" line="962"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueForColumn" desc="(Lde/viadee/xai/anchor/adapter/tabular/TabularInstance;Lde/viadee/xai/anchor/adapter/tabular/column/GenericColumn;Z)Ljava/io/Serializable;" line="979"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1197" covered="0"/><counter type="BRANCH" missed="116" covered="0"/><counter type="LINE" missed="245" covered="0"/><counter type="COMPLEXITY" missed="77" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/tabular_data/LabelColumn" sourcefilename="LabelColumn.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature;Ljava/io/Serializable;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabel" desc="()Lde/viadee/xai/framework/data/Feature;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValues" desc="()Ljava/io/Serializable;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/data/tabular_data/TabularDatasetPackage" sourcefilename="TabularDatasetPackage.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;)V" line="28"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;Lde/viadee/xai/framework/data/tabular_data/LabelColumn;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumericData" desc="()Ljava/util/Map;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumericCol" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;)[D" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCategoricalData" desc="()Ljava/util/Map;" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCatCol" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)[I" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCatFeatures" desc="()Ljava/util/Set;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumericFeatures" desc="()Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelCol" desc="()Lde/viadee/xai/framework/data/tabular_data/LabelColumn;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()I" line="105"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="23"/><counter type="LINE" missed="10" covered="8"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/data/tabular_data/TabularRow" sourcefilename="TabularRow.java"><method name="&lt;init&gt;" desc="([Lde/viadee/xai/framework/data/FeatureValue$NumericFeatureValue;[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;[Lde/viadee/xai/framework/data/FeatureValue$NumericFeatureValue;[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;Lde/viadee/xai/framework/data/FeatureValue;Lde/viadee/xai/framework/data/FeatureValue;)V" line="44"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumValue" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;[Lde/viadee/xai/framework/data/FeatureValue$NumericFeatureValue;)D" line="56"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCatValue" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;)I" line="66"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalValue" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;)D" line="80"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalValue" desc="(Lde/viadee/xai/framework/data/Feature;)D" line="91"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalValue" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)I" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedValue" desc="(Lde/viadee/xai/framework/data/Feature;)D" line="118"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedValue" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;)D" line="133"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedValue" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)I" line="143"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalLabelValue" desc="()Lde/viadee/xai/framework/data/FeatureValue;" line="151"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedLabelValue" desc="()Lde/viadee/xai/framework/data/FeatureValue;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalValues" desc="()[Lde/viadee/xai/framework/data/FeatureValue;" line="167"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedFeatureValues" desc="()[Lde/viadee/xai/framework/data/FeatureValue;" line="175"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCatFeatureValues" desc="()[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalCatFeatureValues" desc="()[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;" line="191"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()[Lde/viadee/xai/framework/data/FeatureValue;" line="196"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bundleFeatureValues" desc="([Lde/viadee/xai/framework/data/FeatureValue$NumericFeatureValue;[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;)[Lde/viadee/xai/framework/data/FeatureValue;" line="203"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCatFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="217"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedNumFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$NumericFeature;" line="226"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalCatFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="235"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalNumFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$NumericFeature;" line="244"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOriginalCatFeatureValues" desc="()I" line="252"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOriginalNumFeatureValues" desc="()I" line="260"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberProcessedCatFeatureValues" desc="()I" line="268"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberProcessedNumFeatureValues" desc="()I" line="276"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeatureForName" desc="(Ljava/lang/String;[Lde/viadee/xai/framework/data/FeatureValue;)Lde/viadee/xai/framework/data/Feature;" line="282"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeatureCount" desc="()I" line="292"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="297"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="306" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="28" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/tabular_data/LabelColumn$CategoricalLabelColumn" sourcefilename="LabelColumn.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;[I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()I" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/data/tabular_data/LabelColumn$NumericLabelColumn" sourcefilename="LabelColumn.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;[D)V" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLength" desc="()I" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/tabular_data/TabularDataset" sourcefilename="TabularDataset.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;Lde/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter;)V" line="70"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValuesForFeature" desc="(Lde/viadee/xai/framework/data/Feature;Ljava/util/Map;)Ljava/io/Serializable;" line="80"><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginalCol" desc="(Lde/viadee/xai/framework/data/Feature;)Ljava/io/Serializable;" line="100"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalCol" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;)[D" line="116"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalCol" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)[I" line="126"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCol" desc="(Lde/viadee/xai/framework/data/Feature;)Ljava/io/Serializable;" line="137"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCol" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;)[D" line="153"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCol" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;)[I" line="163"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginalNumFeatures" desc="()Ljava/util/Set;" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalCatFeatures" desc="()Ljava/util/Set;" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedNumFeatures" desc="()Ljava/util/Set;" line="187"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCatFeatures" desc="()Ljava/util/Set;" line="195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginalFeatures" desc="()Ljava/util/Set;" line="203"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedFeatures" desc="()Ljava/util/Set;" line="214"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOriginalCols" desc="()I" line="225"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOriginalNumCols" desc="()I" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOriginalCatCols" desc="()I" line="241"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberProcessedCols" desc="()I" line="249"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberProcessedNumCols" desc="()I" line="257"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberProcessedCatCols" desc="()I" line="265"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="originalLabelIsNumeric" desc="()Z" line="274"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedLabelCol" desc="()Lde/viadee/xai/framework/data/tabular_data/LabelColumn;" line="283"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginalLabelCol" desc="()Lde/viadee/xai/framework/data/tabular_data/LabelColumn;" line="291"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedCatFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="300"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedNumFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$NumericFeature;" line="309"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalCatFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="318"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalNumFeatureForName" desc="(Ljava/lang/String;)Lde/viadee/xai/framework/data/Feature$NumericFeature;" line="327"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeatureForName" desc="(Ljava/lang/String;Ljava/util/Set;)Lde/viadee/xai/framework/data/Feature;" line="331"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(ILde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;)Lde/viadee/xai/framework/data/tabular_data/TabularRow;" line="343"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="(I)Lde/viadee/xai/framework/data/tabular_data/TabularRow;" line="366"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumFeatureValuesFor" desc="(ILjava/util/Map;)[Lde/viadee/xai/framework/data/FeatureValue$NumericFeatureValue;" line="371"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCatFeatureValuesFor" desc="(ILjava/util/Map;)[Lde/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue;" line="381"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelFeatureValue" desc="(Lde/viadee/xai/framework/data/Feature;Ljava/io/Serializable;I)Lde/viadee/xai/framework/data/FeatureValue;" line="391"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberRows" desc="()I" line="404"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlackBoxModel" desc="()Lde/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter;" line="412"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilderWithAnchorTabular" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lde/viadee/xai/anchor/adapter/tabular/AnchorTabular;)Lde/viadee/xai/framework/data/tabular_data/TabularDataset$TabularDatasetBuilder;" line="433"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="398" covered="47"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="75" covered="12"/><counter type="COMPLEXITY" missed="42" covered="6"/><counter type="METHOD" missed="31" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TabularRow.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="7" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="7" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="7" ci="0" mb="0" cb="0"/><line nr="226" mi="7" ci="0" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="16" ci="0" mb="2" cb="0"/><line nr="283" mi="6" ci="0" mb="2" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="8" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="0" cb="0"/><line nr="298" mi="6" ci="0" mb="0" cb="0"/><line nr="299" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="6" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="306" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="61" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="28" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TabularDatasetPackage.java"><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="7" ci="0" mb="0" cb="0"/><line nr="30" mi="7" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="23"/><counter type="LINE" missed="10" covered="8"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LabelColumn.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="26"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="TabularDataset.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="1" cb="1"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="0" cb="0"/><line nr="126" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="6" ci="0" mb="0" cb="0"/><line nr="205" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="6" ci="0" mb="0" cb="0"/><line nr="216" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="0" cb="0"/><line nr="309" mi="8" ci="0" mb="0" cb="0"/><line nr="318" mi="8" ci="0" mb="0" cb="0"/><line nr="327" mi="8" ci="0" mb="0" cb="0"/><line nr="331" mi="10" ci="0" mb="2" cb="0"/><line nr="332" mi="5" ci="0" mb="2" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="9" ci="0" mb="0" cb="0"/><line nr="348" mi="9" ci="0" mb="0" cb="0"/><line nr="350" mi="10" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="11" ci="0" mb="2" cb="0"/><line nr="374" mi="14" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="376" mi="1" ci="0" mb="0" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="4" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="11" ci="0" mb="2" cb="0"/><line nr="384" mi="14" ci="0" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="386" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="2" cb="0"/><line nr="392" mi="11" ci="0" mb="0" cb="0"/><line nr="394" mi="11" ci="0" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="9" ci="0" mb="0" cb="0"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="0" cb="0"/><line nr="488" mi="5" ci="0" mb="0" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="492" mi="5" ci="0" mb="0" cb="0"/><line nr="494" mi="3" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="497" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="499" mi="5" ci="0" mb="0" cb="0"/><line nr="501" mi="4" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="506" mi="1" ci="0" mb="0" cb="0"/><line nr="515" mi="5" ci="0" mb="0" cb="0"/><line nr="516" mi="2" ci="0" mb="0" cb="0"/><line nr="529" mi="8" ci="0" mb="2" cb="0"/><line nr="530" mi="2" ci="0" mb="2" cb="0"/><line nr="531" mi="4" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="547" mi="3" ci="0" mb="2" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="550" mi="5" ci="0" mb="0" cb="0"/><line nr="551" mi="2" ci="0" mb="0" cb="0"/><line nr="562" mi="5" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="0" cb="0"/><line nr="576" mi="8" ci="0" mb="4" cb="0"/><line nr="577" mi="5" ci="0" mb="0" cb="0"/><line nr="579" mi="3" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="3" ci="0" mb="0" cb="0"/><line nr="582" mi="2" ci="0" mb="0" cb="0"/><line nr="597" mi="5" ci="0" mb="2" cb="0"/><line nr="598" mi="4" ci="0" mb="0" cb="0"/><line nr="600" mi="3" ci="0" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="0" cb="0"/><line nr="612" mi="3" ci="0" mb="0" cb="0"/><line nr="613" mi="2" ci="0" mb="0" cb="0"/><line nr="625" mi="3" ci="0" mb="2" cb="0"/><line nr="626" mi="4" ci="0" mb="0" cb="0"/><line nr="628" mi="5" ci="0" mb="0" cb="0"/><line nr="629" mi="2" ci="0" mb="0" cb="0"/><line nr="644" mi="3" ci="0" mb="2" cb="0"/><line nr="645" mi="5" ci="0" mb="0" cb="0"/><line nr="648" mi="3" ci="0" mb="2" cb="0"/><line nr="649" mi="7" ci="0" mb="0" cb="0"/><line nr="650" mi="2" ci="0" mb="0" cb="0"/><line nr="651" mi="5" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="0" cb="0"/><line nr="655" mi="6" ci="0" mb="0" cb="0"/><line nr="656" mi="11" ci="0" mb="2" cb="0"/><line nr="657" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="1" ci="0" mb="0" cb="0"/><line nr="659" mi="3" ci="0" mb="2" cb="0"/><line nr="660" mi="4" ci="0" mb="0" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="11" ci="0" mb="2" cb="0"/><line nr="665" mi="4" ci="0" mb="0" cb="0"/><line nr="667" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="671" mi="3" ci="0" mb="0" cb="0"/><line nr="674" mi="6" ci="0" mb="0" cb="0"/><line nr="675" mi="11" ci="0" mb="2" cb="0"/><line nr="676" mi="4" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="3" ci="0" mb="2" cb="0"/><line nr="681" mi="3" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="11" ci="0" mb="2" cb="0"/><line nr="685" mi="2" ci="0" mb="0" cb="0"/><line nr="687" mi="2" ci="0" mb="0" cb="0"/><line nr="689" mi="1" ci="0" mb="0" cb="0"/><line nr="692" mi="7" ci="0" mb="0" cb="0"/><line nr="693" mi="3" ci="0" mb="2" cb="0"/><line nr="694" mi="4" ci="0" mb="0" cb="0"/><line nr="695" mi="3" ci="0" mb="2" cb="0"/><line nr="696" mi="5" ci="0" mb="0" cb="0"/><line nr="698" mi="4" ci="0" mb="0" cb="0"/><line nr="699" mi="4" ci="0" mb="0" cb="0"/><line nr="700" mi="8" ci="0" mb="2" cb="0"/><line nr="701" mi="11" ci="0" mb="0" cb="0"/><line nr="703" mi="5" ci="0" mb="0" cb="0"/><line nr="704" mi="8" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="2" ci="0" mb="0" cb="0"/><line nr="710" mi="4" ci="0" mb="0" cb="0"/><line nr="714" mi="10" ci="0" mb="0" cb="0"/><line nr="716" mi="8" ci="0" mb="0" cb="0"/><line nr="728" mi="3" ci="0" mb="2" cb="0"/><line nr="729" mi="5" ci="0" mb="0" cb="0"/><line nr="731" mi="6" ci="0" mb="0" cb="0"/><line nr="732" mi="11" ci="0" mb="2" cb="0"/><line nr="733" mi="4" ci="0" mb="0" cb="0"/><line nr="734" mi="1" ci="0" mb="0" cb="0"/><line nr="736" mi="3" ci="0" mb="2" cb="0"/><line nr="737" mi="4" ci="0" mb="0" cb="0"/><line nr="738" mi="2" ci="0" mb="0" cb="0"/><line nr="741" mi="11" ci="0" mb="2" cb="0"/><line nr="742" mi="4" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="746" mi="2" ci="0" mb="0" cb="0"/><line nr="748" mi="3" ci="0" mb="0" cb="0"/><line nr="751" mi="6" ci="0" mb="0" cb="0"/><line nr="752" mi="11" ci="0" mb="2" cb="0"/><line nr="753" mi="4" ci="0" mb="0" cb="0"/><line nr="754" mi="1" ci="0" mb="0" cb="0"/><line nr="756" mi="3" ci="0" mb="2" cb="0"/><line nr="757" mi="3" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="760" mi="11" ci="0" mb="2" cb="0"/><line nr="761" mi="2" ci="0" mb="0" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="1" ci="0" mb="0" cb="0"/><line nr="769" mi="7" ci="0" mb="0" cb="0"/><line nr="770" mi="3" ci="0" mb="2" cb="0"/><line nr="771" mi="4" ci="0" mb="0" cb="0"/><line nr="772" mi="3" ci="0" mb="2" cb="0"/><line nr="773" mi="5" ci="0" mb="0" cb="0"/><line nr="775" mi="4" ci="0" mb="0" cb="0"/><line nr="776" mi="8" ci="0" mb="2" cb="0"/><line nr="777" mi="11" ci="0" mb="0" cb="0"/><line nr="779" mi="5" ci="0" mb="0" cb="0"/><line nr="780" mi="8" ci="0" mb="0" cb="0"/><line nr="784" mi="4" ci="0" mb="0" cb="0"/><line nr="785" mi="2" ci="0" mb="0" cb="0"/><line nr="786" mi="4" ci="0" mb="0" cb="0"/><line nr="790" mi="10" ci="0" mb="0" cb="0"/><line nr="792" mi="8" ci="0" mb="0" cb="0"/><line nr="800" mi="4" ci="0" mb="0" cb="0"/><line nr="801" mi="6" ci="0" mb="0" cb="0"/><line nr="802" mi="3" ci="0" mb="2" cb="0"/><line nr="803" mi="5" ci="0" mb="0" cb="0"/><line nr="804" mi="5" ci="0" mb="2" cb="0"/><line nr="805" mi="5" ci="0" mb="0" cb="0"/><line nr="807" mi="4" ci="0" mb="0" cb="0"/><line nr="809" mi="20" ci="0" mb="2" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="812" mi="7" ci="0" mb="0" cb="0"/><line nr="813" mi="4" ci="0" mb="0" cb="0"/><line nr="815" mi="7" ci="0" mb="2" cb="0"/><line nr="816" mi="9" ci="0" mb="0" cb="0"/><line nr="817" mi="7" ci="0" mb="0" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="2" ci="0" mb="0" cb="0"/><line nr="822" mi="3" ci="0" mb="0" cb="0"/><line nr="823" mi="2" ci="0" mb="0" cb="0"/><line nr="826" mi="12" ci="0" mb="0" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="4" ci="0" mb="0" cb="0"/><line nr="836" mi="3" ci="0" mb="0" cb="0"/><line nr="838" mi="4" ci="0" mb="2" cb="0"/><line nr="839" mi="5" ci="0" mb="0" cb="0"/><line nr="840" mi="4" ci="0" mb="0" cb="0"/><line nr="841" mi="8" ci="0" mb="2" cb="0"/><line nr="842" mi="10" ci="0" mb="0" cb="0"/><line nr="844" mi="8" ci="0" mb="0" cb="0"/><line nr="845" mi="1" ci="0" mb="0" cb="0"/><line nr="846" mi="5" ci="0" mb="0" cb="0"/><line nr="847" mi="4" ci="0" mb="0" cb="0"/><line nr="848" mi="8" ci="0" mb="2" cb="0"/><line nr="849" mi="10" ci="0" mb="0" cb="0"/><line nr="851" mi="8" ci="0" mb="0" cb="0"/><line nr="854" mi="3" ci="0" mb="0" cb="0"/><line nr="855" mi="3" ci="0" mb="0" cb="0"/><line nr="857" mi="10" ci="0" mb="2" cb="0"/><line nr="858" mi="4" ci="0" mb="0" cb="0"/><line nr="859" mi="7" ci="0" mb="0" cb="0"/><line nr="860" mi="5" ci="0" mb="0" cb="0"/><line nr="861" mi="8" ci="0" mb="2" cb="0"/><line nr="862" mi="10" ci="0" mb="0" cb="0"/><line nr="864" mi="1" ci="0" mb="0" cb="0"/><line nr="865" mi="10" ci="0" mb="2" cb="0"/><line nr="866" mi="4" ci="0" mb="0" cb="0"/><line nr="867" mi="7" ci="0" mb="0" cb="0"/><line nr="868" mi="5" ci="0" mb="0" cb="0"/><line nr="869" mi="8" ci="0" mb="2" cb="0"/><line nr="870" mi="10" ci="0" mb="0" cb="0"/><line nr="872" mi="1" ci="0" mb="0" cb="0"/><line nr="874" mi="7" ci="0" mb="0" cb="0"/><line nr="884" mi="6" ci="0" mb="0" cb="0"/><line nr="885" mi="6" ci="0" mb="2" cb="0"/><line nr="886" mi="6" ci="0" mb="2" cb="0"/><line nr="887" mi="5" ci="0" mb="0" cb="0"/><line nr="889" mi="6" ci="0" mb="2" cb="0"/><line nr="890" mi="6" ci="0" mb="2" cb="0"/><line nr="891" mi="5" ci="0" mb="0" cb="0"/><line nr="894" mi="5" ci="0" mb="2" cb="0"/><line nr="895" mi="4" ci="0" mb="0" cb="0"/><line nr="896" mi="7" ci="0" mb="0" cb="0"/><line nr="898" mi="5" ci="0" mb="2" cb="0"/><line nr="899" mi="4" ci="0" mb="0" cb="0"/><line nr="900" mi="7" ci="0" mb="0" cb="0"/><line nr="903" mi="5" ci="0" mb="0" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="909" mi="4" ci="0" mb="0" cb="0"/><line nr="910" mi="10" ci="0" mb="2" cb="0"/><line nr="911" mi="3" ci="0" mb="2" cb="0"/><line nr="912" mi="7" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="0" cb="0"/><line nr="914" mi="4" ci="0" mb="2" cb="0"/><line nr="915" mi="7" ci="0" mb="0" cb="0"/><line nr="916" mi="7" ci="0" mb="0" cb="0"/><line nr="917" mi="4" ci="0" mb="2" cb="0"/><line nr="918" mi="7" ci="0" mb="0" cb="0"/><line nr="919" mi="7" ci="0" mb="0" cb="0"/><line nr="920" mi="1" ci="0" mb="0" cb="0"/><line nr="921" mi="5" ci="0" mb="0" cb="0"/><line nr="923" mi="1" ci="0" mb="0" cb="0"/><line nr="924" mi="6" ci="0" mb="0" cb="0"/><line nr="928" mi="3" ci="0" mb="2" cb="0"/><line nr="929" mi="7" ci="0" mb="0" cb="0"/><line nr="930" mi="3" ci="0" mb="2" cb="0"/><line nr="931" mi="7" ci="0" mb="0" cb="0"/><line nr="932" mi="3" ci="0" mb="2" cb="0"/><line nr="933" mi="7" ci="0" mb="0" cb="0"/><line nr="935" mi="5" ci="0" mb="0" cb="0"/><line nr="940" mi="4" ci="0" mb="0" cb="0"/><line nr="941" mi="2" ci="0" mb="0" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="944" mi="8" ci="0" mb="2" cb="0"/><line nr="945" mi="10" ci="0" mb="0" cb="0"/><line nr="946" mi="4" ci="0" mb="0" cb="0"/><line nr="947" mi="4" ci="0" mb="2" cb="0"/><line nr="948" mi="2" ci="0" mb="0" cb="0"/><line nr="950" mi="4" ci="0" mb="2" cb="0"/><line nr="951" mi="2" ci="0" mb="0" cb="0"/><line nr="954" mi="8" ci="0" mb="0" cb="0"/><line nr="955" mi="6" ci="0" mb="0" cb="0"/><line nr="962" mi="4" ci="0" mb="0" cb="0"/><line nr="963" mi="8" ci="0" mb="2" cb="0"/><line nr="964" mi="2" ci="0" mb="2" cb="0"/><line nr="965" mi="13" ci="0" mb="0" cb="0"/><line nr="967" mi="11" ci="0" mb="0" cb="0"/><line nr="970" mi="3" ci="0" mb="0" cb="0"/><line nr="971" mi="4" ci="0" mb="0" cb="0"/><line nr="974" mi="8" ci="0" mb="0" cb="0"/><line nr="979" mi="2" ci="0" mb="2" cb="0"/><line nr="980" mi="5" ci="0" mb="0" cb="0"/><line nr="982" mi="3" ci="0" mb="0" cb="0"/><line nr="984" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1595" covered="47"/><counter type="BRANCH" missed="136" covered="2"/><counter type="LINE" missed="320" covered="12"/><counter type="COMPLEXITY" missed="119" covered="6"/><counter type="METHOD" missed="50" covered="6"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1957" covered="96"/><counter type="BRANCH" missed="156" covered="2"/><counter type="LINE" missed="394" covered="29"/><counter type="COMPLEXITY" missed="165" covered="15"/><counter type="METHOD" missed="86" covered="15"/><counter type="CLASS" missed="3" covered="4"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/trajectory_optimizer"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/trajectory_optimizer/TrajectoryOptimizer" sourcefilename="TrajectoryOptimizer.java"/><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/trajectory_optimizer/KOptimalRuleLocalSearch" sourcefilename="KOptimalRuleLocalSearch.java"><method name="&lt;init&gt;" desc="(ILde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;)V" line="29"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optimize" desc="([Z)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="40"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimizeBoolAr" desc="([Z)[Z" line="51"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFlips" desc="([ZII)Lde/viadee/xai/framework/utility/Tuple;" line="74"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="151"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="34"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TrajectoryOptimizer.java"/><sourcefile name="KOptimalRuleLocalSearch.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="4"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="151"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="34"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="151"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="34"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="de/viadee/xai/framework/persistence/data_persistence_service"><class name="de/viadee/xai/framework/persistence/data_persistence_service/NullDataPersister" sourcefilename="NullDataPersister.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistData" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDataset;Lde/viadee/xai/framework/data/index/RoaringBitmapIndex;)I" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadData" desc="(I)Lde/viadee/xai/framework/utility/Tuple;" line="16"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="terminate" desc="()V" line="20"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/persistence/data_persistence_service/DataPersistenceService" sourcefilename="DataPersistenceService.java"/><sourcefile name="NullDataPersister.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DataPersistenceService.java"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline"><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/ReorderedKOpt" sourcefilename="ReorderedKOpt.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="35"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/MAGIX" sourcefilename="MAGIX.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="36"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/ReorderedMAGIX" sourcefilename="ReorderedMAGIX.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="34"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/DirectMemeticMining" sourcefilename="DirectMemeticMining.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="21"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="31"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/DirectKOptMining" sourcefilename="DirectKOptMining.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="34"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/ReorderedKOptMAGIX" sourcefilename="ReorderedKOptMAGIX.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="36"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/ReorderedKOptSetOptimization" sourcefilename="ReorderedKOptSetOptimization.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="35"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/exemplary_pipeline/GeneticAlgorithmPipeline" sourcefilename="GeneticAlgorithmPipeline.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/NullDataAdapter;Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSteps" desc="()V" line="30"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="GeneticAlgorithmPipeline.java"><line nr="20" mi="18" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReorderedMAGIX.java"><line nr="24" mi="18" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MAGIX.java"><line nr="26" mi="18" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReorderedKOpt.java"><line nr="25" mi="18" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="12" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectMemeticMining.java"><line nr="21" mi="15" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="14" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectKOptMining.java"><line nr="24" mi="15" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="16" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReorderedKOptSetOptimization.java"><line nr="25" mi="18" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="10" ci="0" mb="0" cb="0"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReorderedKOptMAGIX.java"><line nr="26" mi="18" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="391" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="8" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/representation_translator"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/representation_translator/BitGeneGenotypeToRuleExplanationSet" sourcefilename="BitGeneGenotypeToRuleExplanationSet.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="33"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/jenetics/Genotype;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="44"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/representation_translator/BitGeneGenotypeToRuleExplanation" sourcefilename="BitGeneGenotypeToRuleExplanation.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lio/jenetics/Genotype;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="38"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;)V" line="51"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/representation_translator/BinaryRepresentationToRuleExplanation" sourcefilename="BinaryRepresentationToRuleExplanation.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="([Z)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="47"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BitGeneGenotypeToRuleExplanationSet.java"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="2" cb="0"/><line nr="47" mi="6" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BitGeneGenotypeToRuleExplanation.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="2" cb="0"/><line nr="41" mi="6" ci="0" mb="2" cb="0"/><line nr="42" mi="11" ci="0" mb="0" cb="0"/><line nr="43" mi="16" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryRepresentationToRuleExplanation.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="16" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="150" covered="77"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="29" covered="14"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="2" covered="1"/></package><package name="de/viadee/xai/framework/data/index"><class name="de/viadee/xai/framework/data/index/RoaringBitmapIndex" sourcefilename="RoaringBitmapIndex.java"/><class name="de/viadee/xai/framework/data/index/SimpleRoaringBitmapIndex" sourcefilename="SimpleRoaringBitmapIndex.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDataset;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="170"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstancesAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/lang/Integer;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="56"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstancesAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/util/Set;)Lorg/roaringbitmap/buffer/MutableRoaringBitmap;" line="69"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstancesAsBitmap" desc="(Ljava/util/Map;)Lorg/roaringbitmap/buffer/MutableRoaringBitmap;" line="86"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="266"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RoaringBitmapIndex.java"/><sourcefile name="SimpleRoaringBitmapIndex.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="2"/><line nr="32" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="40" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="2"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="13" mb="0" cb="2"/><line nr="49" mi="0" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="266"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="266"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/objective_function"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/objective_function/ScaledEnhancedRMICalculator" sourcefilename="ScaledEnhancedRMICalculator.java"><method name="&lt;init&gt;" desc="(D)V" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Double;" line="27"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateMaximumMI" desc="(II)D" line="32"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)V" line="37"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/objective_function/BETAObjectiveCalculator" sourcefilename="BETAObjectiveCalculator.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([D)V" line="41"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateWMax" desc="([Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)I" line="50"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateOMax" desc="(III)J" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateOSMax" desc="(III)J" line="64"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateFMax" desc="(III)J" line="68"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Ljava/lang/Double;" line="73"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateF1" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numPreds" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="84"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateF3" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)J" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ruleOverlap" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="98"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateF4" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateF5" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)J" line="118"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)V" line="128"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="58" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/objective_function/EnhancedRMICalculator" sourcefilename="EnhancedRMICalculator.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="29"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Double;" line="35"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)V" line="40"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="EnhancedRMICalculator.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BETAObjectiveCalculator.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="20" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="16" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="2" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="33" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="10" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="2" cb="0"/><line nr="101" mi="10" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="14" ci="0" mb="0" cb="0"/><line nr="134" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="12" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="58" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ScaledEnhancedRMICalculator.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="390" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="80" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="de/viadee/xai/framework/data"><class name="de/viadee/xai/framework/data/Feature$CategoricalFeature" sourcefilename="Feature.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="103"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;[I)V" line="117"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringToIntegerMapping" desc="([Ljava/lang/String;)Ljava/util/Map;" line="134"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntegerizedValues" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;[Ljava/lang/String;)[I" line="144"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateValueToName" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringRepresentation" desc="(Ljava/lang/Integer;)Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberRepresentation" desc="(Ljava/lang/String;)Ljava/lang/Integer;" line="178"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUniqueNumberRepresentations" desc="()Ljava/util/Set;" line="190"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="107"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="25" covered="21"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/data/FeatureValue$CategoricalFeatureValue" sourcefilename="FeatureValue.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)V" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFeature" desc="()Lde/viadee/xai/framework/data/Feature$CategoricalFeature;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="16"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/data/Feature$NumericFeature" sourcefilename="Feature.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;DD)V" line="58"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/Feature" sourcefilename="Feature.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="29"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/data/Feature$DiscretizedNumericFeature" sourcefilename="Feature.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;[D[D)V" line="221"><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDiscretization" desc="(D)I" line="267"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDiscretization" desc="([D)[I" line="281"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDiscretizationOfOriginal" desc="()[I" line="293"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalValues" desc="()[D" line="301"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="306"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="315"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="289" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/FeatureValue$NumericFeatureValue" sourcefilename="FeatureValue.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;D)V" line="42"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()D" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeature" desc="()Lde/viadee/xai/framework/data/Feature$NumericFeature;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/FeatureValue" sourcefilename="FeatureValue.java"/><sourcefile name="FeatureValue.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="17" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="16"/><counter type="LINE" missed="9" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Feature.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="1" cb="1"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="1" cb="1"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="22" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="8" ci="0" mb="2" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="2"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="12" mb="0" cb="2"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="8" ci="0" mb="2" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="1" cb="1"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="12" ci="0" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="16" ci="0" mb="2" cb="0"/><line nr="230" mi="4" ci="0" mb="2" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="10" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="9" ci="0" mb="2" cb="0"/><line nr="242" mi="9" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="15" ci="0" mb="0" cb="0"/><line nr="247" mi="9" ci="0" mb="0" cb="0"/><line nr="248" mi="9" ci="0" mb="2" cb="0"/><line nr="249" mi="25" ci="0" mb="0" cb="0"/><line nr="250" mi="9" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="15" ci="0" mb="0" cb="0"/><line nr="254" mi="9" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="9" ci="0" mb="2" cb="0"/><line nr="268" mi="7" ci="0" mb="2" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="8" ci="0" mb="2" cb="0"/><line nr="283" mi="8" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="18" ci="0" mb="0" cb="0"/><line nr="309" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="11" ci="0" mb="2" cb="0"/><line nr="316" mi="7" ci="0" mb="2" cb="0"/><line nr="317" mi="5" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="450" covered="137"/><counter type="BRANCH" missed="31" covered="13"/><counter type="LINE" missed="74" covered="28"/><counter type="COMPLEXITY" missed="32" covered="14"/><counter type="METHOD" missed="15" covered="9"/><counter type="CLASS" missed="2" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="501" covered="153"/><counter type="BRANCH" missed="31" covered="13"/><counter type="LINE" missed="83" covered="34"/><counter type="COMPLEXITY" missed="37" covered="17"/><counter type="METHOD" missed="20" covered="12"/><counter type="CLASS" missed="3" covered="3"/></package><package name="de/viadee/xai/framework/data/preprocessor"><class name="de/viadee/xai/framework/data/preprocessor/Preprocessor" sourcefilename="Preprocessor.java"/><class name="de/viadee/xai/framework/data/preprocessor/Discretizer" sourcefilename="Discretizer.java"><method name="apply" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;[D)[I" line="20"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterDiscretization" desc="(Ljava/util/Set;)Ljava/util/Set;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/preprocessor/IndependentColumnDiscretizier" sourcefilename="IndependentColumnDiscretizier.java"><method name="preprocess" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;)Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;" line="27"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preprocessTestData" desc="(Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;)Lde/viadee/xai/framework/data/tabular_data/TabularDatasetPackage;" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/data/preprocessor/PercentileDiscretizer" sourcefilename="PercentileDiscretizer.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([I)V" line="37"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preprocess" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;[D)Lde/viadee/xai/framework/utility/Tuple;" line="53"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lde/viadee/xai/framework/data/Feature$NumericFeature;D)I" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IndependentColumnDiscretizier.java"><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="2" cb="0"/><line nr="29" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="10" ci="0" mb="2" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="11" ci="0" mb="2" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="11" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PercentileDiscretizer.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="19" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="16" ci="0" mb="2" cb="0"/><line nr="41" mi="3" ci="0" mb="2" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="57" mi="12" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Discretizer.java"><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="2" cb="0"/><line nr="22" mi="9" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Preprocessor.java"/><counter type="INSTRUCTION" missed="330" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="de/viadee/xai/framework/explanation_calculation/calculator"><class name="de/viadee/xai/framework/explanation_calculation/calculator/CoverCacheReusingCalculator" sourcefilename="CoverCacheReusingCalculator.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoveredAsBitmap" desc="(Ljava/util/Map;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="29"><counter type="INSTRUCTION" missed="70" covered="10"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="16" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheHitOrCalculateAndStore" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheHitOrCalculateAndStoreForNotCovered" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reuseAndCalculate" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;Ljava/util/function/BiConsumer;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="82"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cacheHitOrCalculateAndStoreForNotCovered$1" desc="(Lorg/roaringbitmap/buffer/MutableRoaringBitmap;Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cacheHitOrCalculateAndStore$0" desc="(Lorg/roaringbitmap/buffer/MutableRoaringBitmap;Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;)V" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="124"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="16" covered="30"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/calculator/EhCachedCategoricalCalculator" sourcefilename="EhCachedCategoricalCalculator.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;Ljava/lang/Class;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="170"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;[ILjava/lang/Class;)V" line="92"><counter type="INSTRUCTION" missed="5" covered="148"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateCacheConfiguration" desc="(I)Lorg/ehcache/config/CacheConfiguration;" line="122"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCovered" desc="(Ljava/util/Map;)I" line="132"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCorrectlyCovered" desc="(Ljava/util/Map;I)I" line="137"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberIncorrectlyCovered" desc="(Ljava/util/Map;I)I" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberIncorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberInCovers" desc="(Ljava/util/Map;I)[I" line="157"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalAmountNumberInCovers" desc="(Ljava/util/Map;I)[I" line="162"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="353"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="9" covered="50"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/calculator/CoverCachedCalculator" sourcefilename="CoverCachedCalculator.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoveredAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/util/Set;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoveredAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/lang/Integer;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cacheHitOrCalculateAndStore" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="68"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheHitOrCalculateAndStoreForNotCovered" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoveredAsBitmap" desc="(Ljava/util/Map;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="90"><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectlyCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="102"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="112"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectlyNotCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="122"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyNotCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="132"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoversAsBitmap" desc="(Ljava/util/Map;I)[Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="142"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalNumberCoversAsBitmap" desc="(Ljava/util/Map;I)[Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="152"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCovered" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)I" line="160"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCovered" desc="(Ljava/util/Map;)I" line="166"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheHitOrCalculateAndStoreNumber" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;)I" line="181"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyCovered" desc="(Ljava/util/Map;I)I" line="193"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyCovered" desc="(Ljava/util/Map;I)I" line="203"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="213"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="223"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberInCovers" desc="(Ljava/util/Map;I)[I" line="233"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalAmountNumberInCovers" desc="(Ljava/util/Map;I)[I" line="243"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="430"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="19" covered="74"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/calculator/SimpleRoaringBitmapCalculator" sourcefilename="SimpleRoaringBitmapCalculator.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/data/index/RoaringBitmapIndex;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoveredAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/util/Set;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoveredAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/lang/Integer;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoveredAsBitmap" desc="(Ljava/util/Map;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectlyCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="51"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="58"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectlyNotCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="65"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyNotCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="74"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoversAsBitmap" desc="(Ljava/util/Map;I)[Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="81"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalNumberCoversAsBitmap" desc="(Ljava/util/Map;I)[Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="100"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCovered" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)I" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCovered" desc="(Ljava/util/Map;)I" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyCovered" desc="(Ljava/util/Map;I)I" line="124"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyCovered" desc="(Ljava/util/Map;I)I" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="142"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberInCovers" desc="(Ljava/util/Map;I)[I" line="147"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalAmountNumberInCovers" desc="(Ljava/util/Map;I)[I" line="159"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataset" desc="()Lde/viadee/xai/framework/data/tabular_data/TabularDataset;" line="170"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="112" covered="206"/><counter type="LINE" missed="18" covered="38"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator" sourcefilename="CategoricalCalculator.java"/><class name="de/viadee/xai/framework/explanation_calculation/calculator/NumberCachedCalculator" sourcefilename="NumberCachedCalculator.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/CategoricalCalculator;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheHitOrCalculateAndStore" desc="(Lorg/ehcache/Cache;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/function/BiFunction;)Ljava/lang/Integer;" line="55"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCovered" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;I)I" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberCovered" desc="(Ljava/util/Map;)I" line="73"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyCovered" desc="(Ljava/util/Map;I)I" line="85"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyCovered" desc="(Ljava/util/Map;I)I" line="95"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberCorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="105"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberIncorrectlyNotCovered" desc="(Ljava/util/Map;I)I" line="115"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimalAmountNumberInCovers" desc="(Ljava/util/Map;I)[I" line="125"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="286"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="5" covered="42"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator" sourcefilename="RoaringBitmapCalculator.java"/><class name="de/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapNumberCachedCalculator" sourcefilename="RoaringBitmapNumberCachedCalculator.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoveredAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/util/Set;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoveredAsBitmap" desc="(Lde/viadee/xai/framework/data/Feature$CategoricalFeature;Ljava/lang/Integer;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="32"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoveredAsBitmap" desc="(Ljava/util/Map;)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectlyCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectlyNotCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="52"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncorrectlyNotCoveredAsBitmap" desc="(Ljava/util/Map;I)Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoversAsBitmap" desc="(Ljava/util/Map;I)[Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalNumberCoversAsBitmap" desc="(Ljava/util/Map;I)[Lorg/roaringbitmap/buffer/ImmutableRoaringBitmap;" line="67"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimalAmountNumberInCovers" desc="(Ljava/util/Map;I)[I" line="72"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="142"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NumberCachedCalculator.java"><line nr="31" mi="0" ci="26" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="2"/><line nr="40" mi="0" ci="16" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="16" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="286"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="5" covered="42"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CoverCachedCalculator.java"><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="16" mb="0" cb="2"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="16" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="16" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="8" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="2"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="7" ci="0" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="7" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="104" covered="430"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="19" covered="74"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RoaringBitmapCalculator.java"/><sourcefile name="CoverCacheReusingCalculator.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="1" cb="1"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="2" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="10" ci="0" mb="2" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="124"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="16" covered="30"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CategoricalCalculator.java"/><sourcefile name="RoaringBitmapNumberCachedCalculator.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="142"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EhCachedCategoricalCalculator.java"><line nr="26" mi="0" ci="24" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="24" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="2"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="16" mb="0" cb="0"/><line nr="79" mi="0" ci="16" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="16" mb="0" cb="2"/><line nr="114" mi="0" ci="16" mb="0" cb="0"/><line nr="115" mi="0" ci="16" mb="0" cb="0"/><line nr="116" mi="0" ci="16" mb="0" cb="0"/><line nr="117" mi="0" ci="16" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="353"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="9" covered="50"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleRoaringBitmapCalculator.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="19" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="15" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="8" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="7" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="206"/><counter type="LINE" missed="18" covered="38"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="390" covered="1541"/><counter type="BRANCH" missed="9" covered="31"/><counter type="LINE" missed="70" covered="256"/><counter type="COMPLEXITY" missed="29" covered="70"/><counter type="METHOD" missed="23" covered="56"/><counter type="CLASS" missed="0" covered="6"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer" sourcefilename="OptimizationInitializer.java"/><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction" sourcefilename="ObjectiveFunction.java"/><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator" sourcefilename="RepresentationTranslator.java"/><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/AbstractBruteForceOptimizer" sourcefilename="AbstractBruteForceOptimizer.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;II)V" line="40"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePopulationSize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="49"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/KOptimalRuleExplanationOptimizer" sourcefilename="KOptimalRuleExplanationOptimizer.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DI)V" line="26"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DILde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;I)V" line="26"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="([[ZLjava/util/function/Function;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="87"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRepresentationLength" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePopulationSize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="105"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer" sourcefilename="Optimizer.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;I)V" line="55"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateAndCalculateFitness" desc="(Ljava/lang/Object;)Ljava/lang/Comparable;" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="72"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculatePopulationSize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Ljava/lang/Object;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/AbstractGeneticAlgorithmOptimizer" sourcefilename="AbstractGeneticAlgorithmOptimizer.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;I)V" line="65"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;IIIDDIDII)V" line="114"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="([Lio/jenetics/Genotype;Ljava/util/function/Function;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="138"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$optimize$0" desc="(Ljava/util/function/Function;Lio/jenetics/Genotype;)Lio/jenetics/Phenotype;" line="159"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="222" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OptimizationInitializer.java"/><sourcefile name="Optimizer.java"><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractBruteForceOptimizer.java"><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="2" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KOptimalRuleExplanationOptimizer.java"><line nr="26" mi="9" ci="0" mb="0" cb="0"/><line nr="36" mi="13" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="11" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectiveFunction.java"/><sourcefile name="RepresentationTranslator.java"/><sourcefile name="AbstractGeneticAlgorithmOptimizer.java"><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="0" cb="0"/><line nr="140" mi="13" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="9" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="9" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="222" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="465" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="112" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="4" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/rule_optimizer"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/rule_optimizer/RuleExplanationBruteForce" sourcefilename="RuleExplanationBruteForce.java"><method name="&lt;init&gt;" desc="(I)V" line="35"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="([[ZLjava/util/function/Function;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="48"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRepresentationLength" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/rule_optimizer/RuleExplanationGeneticAlgorithm" sourcefilename="RuleExplanationGeneticAlgorithm.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DI)V" line="65"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;IIIDDIDIII)V" line="108"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformGenotypes" desc="(Lio/jenetics/engine/EvolutionResult;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="126"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRepresentationLength" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="142"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RuleExplanationGeneticAlgorithm.java"><line nr="39" mi="13" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="13" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="14" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="2" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="4" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RuleExplanationBruteForce.java"><line nr="35" mi="14" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="16" ci="0" mb="2" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/rule_set_optimizer"><class name="de/viadee/xai/framework/global_explanation_procedure_step/optimizer/rule_set_optimizer/RuleExplanationSetGeneticAlgorithm" sourcefilename="RuleExplanationSetGeneticAlgorithm.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([D)V" line="28"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/OptimizationInitializer;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/RepresentationTranslator;Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/ObjectiveFunction;IIIDDIDII)V" line="65"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformGenotypes" desc="(Lio/jenetics/engine/EvolutionResult;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRepresentationLength" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)I" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RuleExplanationSetGeneticAlgorithm.java"><line nr="24" mi="20" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="13" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="14" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/explanation_visualizer"><class name="de/viadee/xai/framework/explanation_visualizer/ExplanationVisualizer" sourcefilename="ExplanationVisualizer.java"/><class name="de/viadee/xai/framework/explanation_visualizer/StringRuleExplanationVisualizer" sourcefilename="StringRuleExplanationVisualizer.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="37"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visualize" desc="(Ljava/util/List;)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="218" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visualize$0" desc="(Ljava/util/Map$Entry;Ljava/lang/Integer;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="StringRuleExplanationVisualizer.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="10" ci="0" mb="2" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="48" mi="11" ci="0" mb="2" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="2" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="12" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExplanationVisualizer.java"/><counter type="INSTRUCTION" missed="237" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/explanation_pipeline"><class name="de/viadee/xai/framework/explanation_pipeline/PipelineContext" sourcefilename="PipelineContext.java"/><class name="de/viadee/xai/framework/explanation_pipeline/GlobalExplanationContainer" sourcefilename="GlobalExplanationContainer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/util/Map;)V" line="21"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVisualizedResult" desc="()Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStoredResultIds" desc="()Ljava/util/Map;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/ExplanationPipeline" sourcefilename="ExplanationPipeline.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_pipeline/PipelineContext;Lde/viadee/xai/framework/adapter/data_source_adapter/DataSourceAdapter;Lde/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter;Lde/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter;Lde/viadee/xai/framework/explanation_visualizer/ExplanationVisualizer;Lde/viadee/xai/framework/persistence/PersistenceService;)V" line="43"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executePipeline" desc="()Lde/viadee/xai/framework/explanation_pipeline/GlobalExplanationContainer;" line="102"><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistCalculator" desc="()V" line="177"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistData" desc="()V" line="181"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistExplanations" desc="()Ljava/util/Map;" line="184"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/postprocessor/Postprocessor;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="197"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleOptimizer" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="207"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleSetOptimizer" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="217"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/ExplanationMapper;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/explanation_structurer/ExplanationStructurer;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/postprocessor/Postprocessor;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="246"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleSetOptimizer" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="260"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleOptimizer" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="274"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/ExplanationMapper;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="287"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/postprocessor/Postprocessor;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="300"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleOptimizerWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleSetOptimizerWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="322"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/ExplanationMapper;)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="332"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/postprocessor/Postprocessor;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="344"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleSetOptimizerWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="360"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRuleOptimizerWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="376"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addWithTest" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/ExplanationMapper;Z)Lde/viadee/xai/framework/explanation_pipeline/ExplanationPipeline;" line="391"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initializeStep" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/ExplanationProcedureStep;ZZZI)V" line="405"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initializeOptimizationStep" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/optimizer/Optimizer;ZILjava/lang/Object;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="418"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initializeProcedureStep" desc="(Lde/viadee/xai/framework/global_explanation_procedure_step/ExplanationProcedureStep;ZZ)V" line="425"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="store" desc="(I)V" line="441"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkTestExists" desc="()V" line="445"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeSteps" desc="(Ljava/util/Set;)Ljava/util/Set;" line="451"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeStep" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="478"><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkAndStore" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;I)V" line="518"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validatePipelineContext" desc="(Lde/viadee/xai/framework/explanation_pipeline/PipelineContext;)Z" line="524"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="splitData" desc="()V" line="529"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareIndex" desc="()V" line="532"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareCalculator" desc="()V" line="539"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareExplanationFactories" desc="()V" line="546"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareExplanationSetFactories" desc="()V" line="555"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1001" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="203" covered="0"/><counter type="COMPLEXITY" missed="62" covered="0"/><counter type="METHOD" missed="36" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/NullPipelineContext" sourcefilename="NullPipelineContext.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/explanation_pipeline/AbstractStdExplanationPipeline" sourcefilename="AbstractStdExplanationPipeline.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/data_source_adapter/DataSourceAdapter;Lde/viadee/xai/framework/adapter/black_box_classifier_adapter/BlackBoxClassifierAdapter;Lde/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter;Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareDataset" desc="(Lde/viadee/xai/anchor/adapter/tabular/AnchorTabular;)V" line="48"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="GlobalExplanationContainer.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PipelineContext.java"/><sourcefile name="NullPipelineContext.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExplanationPipeline.java"><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="2" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="4" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="10" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="12" ci="0" mb="2" cb="0"/><line nr="186" mi="15" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="0" cb="0"/><line nr="247" mi="8" ci="0" mb="0" cb="0"/><line nr="248" mi="6" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="10" ci="0" mb="0" cb="0"/><line nr="261" mi="8" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="10" ci="0" mb="0" cb="0"/><line nr="275" mi="8" ci="0" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="7" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="300" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="8" ci="0" mb="0" cb="0"/><line nr="346" mi="8" ci="0" mb="0" cb="0"/><line nr="347" mi="6" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="10" ci="0" mb="0" cb="0"/><line nr="362" mi="8" ci="0" mb="0" cb="0"/><line nr="363" mi="6" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="377" mi="10" ci="0" mb="0" cb="0"/><line nr="378" mi="8" ci="0" mb="0" cb="0"/><line nr="379" mi="6" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="2" ci="0" mb="0" cb="0"/><line nr="392" mi="8" ci="0" mb="0" cb="0"/><line nr="393" mi="3" ci="0" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="5" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="2" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="2" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="2" ci="0" mb="2" cb="0"/><line nr="426" mi="2" ci="0" mb="2" cb="0"/><line nr="427" mi="7" ci="0" mb="0" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="2" cb="0"/><line nr="433" mi="7" ci="0" mb="0" cb="0"/><line nr="435" mi="6" ci="0" mb="0" cb="0"/><line nr="438" mi="1" ci="0" mb="0" cb="0"/><line nr="441" mi="9" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="2" cb="0"/><line nr="446" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="1" ci="0" mb="0" cb="0"/><line nr="451" mi="4" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="2" cb="0"/><line nr="454" mi="19" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="2" ci="0" mb="0" cb="0"/><line nr="458" mi="22" ci="0" mb="0" cb="0"/><line nr="460" mi="4" ci="0" mb="0" cb="0"/><line nr="461" mi="8" ci="0" mb="2" cb="0"/><line nr="462" mi="5" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="2" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="479" mi="11" ci="0" mb="0" cb="0"/><line nr="480" mi="12" ci="0" mb="0" cb="0"/><line nr="481" mi="12" ci="0" mb="0" cb="0"/><line nr="482" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="6" ci="0" mb="2" cb="0"/><line nr="484" mi="4" ci="0" mb="2" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="0" mb="0" cb="0"/><line nr="488" mi="9" ci="0" mb="0" cb="0"/><line nr="489" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="26" ci="0" mb="0" cb="0"/><line nr="492" mi="7" ci="0" mb="2" cb="0"/><line nr="493" mi="4" ci="0" mb="2" cb="0"/><line nr="494" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="9" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="499" mi="26" ci="0" mb="0" cb="0"/><line nr="501" mi="7" ci="0" mb="2" cb="0"/><line nr="502" mi="9" ci="0" mb="0" cb="0"/><line nr="503" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="26" ci="0" mb="0" cb="0"/><line nr="506" mi="1" ci="0" mb="0" cb="0"/><line nr="507" mi="14" ci="0" mb="0" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="0" mb="0" cb="0"/><line nr="518" mi="6" ci="0" mb="2" cb="0"/><line nr="519" mi="9" ci="0" mb="0" cb="0"/><line nr="521" mi="1" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="529" mi="1" ci="0" mb="0" cb="0"/><line nr="532" mi="7" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="2" cb="0"/><line nr="534" mi="7" ci="0" mb="0" cb="0"/><line nr="536" mi="1" ci="0" mb="0" cb="0"/><line nr="539" mi="7" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="2" cb="0"/><line nr="541" mi="7" ci="0" mb="0" cb="0"/><line nr="543" mi="1" ci="0" mb="0" cb="0"/><line nr="546" mi="7" ci="0" mb="0" cb="0"/><line nr="547" mi="7" ci="0" mb="0" cb="0"/><line nr="548" mi="3" ci="0" mb="2" cb="0"/><line nr="549" mi="7" ci="0" mb="0" cb="0"/><line nr="550" mi="7" ci="0" mb="0" cb="0"/><line nr="552" mi="1" ci="0" mb="0" cb="0"/><line nr="555" mi="7" ci="0" mb="0" cb="0"/><line nr="556" mi="3" ci="0" mb="2" cb="0"/><line nr="557" mi="7" ci="0" mb="0" cb="0"/><line nr="559" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1001" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="203" covered="0"/><counter type="COMPLEXITY" missed="62" covered="0"/><counter type="METHOD" missed="36" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractStdExplanationPipeline.java"><line nr="32" mi="20" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="26" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1088" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="220" covered="0"/><counter type="COMPLEXITY" missed="68" covered="0"/><counter type="METHOD" missed="42" covered="0"/><counter type="CLASS" missed="4" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor"><class name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor/BaselineRuleExplanationFilter" sourcefilename="BaselineRuleExplanationFilter.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="31"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postprocess" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="47"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="66"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor/Postprocessor" sourcefilename="Postprocessor.java"/><class name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor/PairwiseRuleExplanationMetricFilter" sourcefilename="PairwiseRuleExplanationMetricFilter.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;Ljava/util/function/BiFunction;)V" line="31"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postprocess" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="49"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="76"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Boolean;" line="44"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor/MetricRuleExplanationFilter" sourcefilename="MetricRuleExplanationFilter.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)V" line="25"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="38"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postprocess" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="50"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="72"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Boolean;" line="44"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Boolean;" line="27"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor/ObsoleteDisjunctionFilter" sourcefilename="ObsoleteDisjunctionFilter.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postprocess" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="23"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/postprocessor/RuleSetEnhancementFilter" sourcefilename="RuleSetEnhancementFilter.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;Ljava/util/function/BiFunction;)V" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postprocess" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="54"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Ljava/lang/Boolean;" line="34"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="RuleSetEnhancementFilter.java"><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="2" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="2" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PairwiseRuleExplanationMetricFilter.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="13" ci="0" mb="2" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="10" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="10" ci="0" mb="2" cb="0"/><line nr="59" mi="8" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObsoleteDisjunctionFilter.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="10" ci="0" mb="2" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="11" ci="0" mb="2" cb="0"/><line nr="29" mi="10" ci="0" mb="2" cb="0"/><line nr="30" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BaselineRuleExplanationFilter.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="10" ci="0" mb="2" cb="0"/><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MetricRuleExplanationFilter.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="2" cb="0"/><line nr="28" mi="7" ci="0" mb="2" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="7" ci="0" mb="2" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="10" ci="0" mb="2" cb="0"/><line nr="56" mi="7" ci="0" mb="2" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Postprocessor.java"/><counter type="INSTRUCTION" missed="483" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="126" covered="0"/><counter type="COMPLEXITY" missed="43" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_structurer"><class name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_structurer/NullRuleExplanationStructurer" sourcefilename="NullRuleExplanationStructurer.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="structure" desc="(Ljava/util/Set;)Ljava/util/List;" line="14"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_structurer/ExplanationStructurer" sourcefilename="ExplanationStructurer.java"/><sourcefile name="NullRuleExplanationStructurer.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="10" ci="0" mb="2" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="7" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExplanationStructurer.java"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/persistence/calculator_persistence_service"><class name="de/viadee/xai/framework/persistence/calculator_persistence_service/NullCalculatorPersister" sourcefilename="NullCalculatorPersister.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistCalculator" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;)I" line="8"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadCalculator" desc="(I)Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;" line="13"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="terminate" desc="()V" line="17"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/persistence/calculator_persistence_service/CalculatorPersistenceService" sourcefilename="CalculatorPersistenceService.java"/><sourcefile name="CalculatorPersistenceService.java"/><sourcefile name="NullCalculatorPersister.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper"><class name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/AllConditionsMapper" sourcefilename="AllConditionsMapper.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapExplanations" desc="(I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="25"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocalExplainer" desc="(Lde/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter;)V" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="42"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$initialize$0" desc="(I)Ljava/lang/Integer;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/ExplanationMapper" sourcefilename="ExplanationMapper.java"/><class name="de/viadee/xai/framework/global_explanation_procedure_step/explanation_mapper/ModifiedMAGIXExplanationMapper" sourcefilename="ModifiedMAGIXExplanationMapper.java"><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;Lde/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter;)V" line="37"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/BiFunction;ZLjava/util/function/Function;Ljava/util/function/Function;)V" line="73"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lde/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;Ljava/util/function/BiFunction;ZLjava/util/function/Function;Ljava/util/function/Function;)V" line="107"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapExplanations" desc="(I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="124"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="breakUpRuleExplanation" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)[Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="148"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leaveAsWhole" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)[Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;" line="166"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocalExplainer" desc="(Lde/viadee/xai/framework/adapter/local_explainer_adapter/LocalExplainerAdapter;)V" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationFactory;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSetFactory;)V" line="176"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Ljava/lang/Boolean;" line="57"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Boolean;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Ljava/lang/Integer;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Ljava/lang/Boolean;" line="53"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Lde/viadee/xai/framework/explanation_calculation/calculator/RoaringBitmapCalculator;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Ljava/lang/Boolean;" line="44"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanation;)Ljava/lang/Boolean;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/lang/Integer;Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;)Ljava/lang/Boolean;" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="327" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="71" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AllConditionsMapper.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="11" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="10" ci="0" mb="2" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModifiedMAGIXExplanationMapper.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="14" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="15" ci="0" mb="2" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="2" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="2" cb="0"/><line nr="130" mi="8" ci="0" mb="2" cb="0"/><line nr="131" mi="6" ci="0" mb="2" cb="0"/><line nr="132" mi="8" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="16" ci="0" mb="2" cb="0"/><line nr="135" mi="7" ci="0" mb="2" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="2" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="12" ci="0" mb="2" cb="0"/><line nr="151" mi="12" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="10" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="327" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="71" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExplanationMapper.java"/><counter type="INSTRUCTION" missed="411" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="90" covered="0"/><counter type="COMPLEXITY" missed="35" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="org/apache/commons/csv"><class name="org/apache/commons/csv/CSVParser$CSVRecordIterator" sourcefilename="CSVParser.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/csv/CSVParser;)V" line="528"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextRecord" desc="()Lorg/apache/commons/csv/CSVRecord;" line="533"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="542"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lorg/apache/commons/csv/CSVRecord;" line="554"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="573"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/CSVFormat$Predefined" sourcefilename="CSVFormat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILorg/apache/commons/csv/CSVFormat;)V" line="225"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormat" desc="()Lorg/apache/commons/csv/CSVFormat;" line="235"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="168"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/Token$Type" sourcefilename="Token.java"><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/CSVFormat" sourcefilename="CSVFormat.java"><method name="isLineBreak" desc="(C)Z" line="552"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLineBreak" desc="(Ljava/lang/Character;)Z" line="564"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFormat" desc="(C)Lorg/apache/commons/csv/CSVFormat;" line="588"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;" line="601"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V" line="682"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="705"><counter type="INSTRUCTION" missed="144" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="([Ljava/lang/Object;)Ljava/lang/String;" line="780"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllowMissingColumnNames" desc="()Z" line="797"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAutoFlush" desc="()Z" line="807"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommentMarker" desc="()Ljava/lang/Character;" line="816"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelimiter" desc="()C" line="825"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEscapeCharacter" desc="()Ljava/lang/Character;" line="834"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeader" desc="()[Ljava/lang/String;" line="843"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeaderComments" desc="()[Ljava/lang/String;" line="852"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreEmptyLines" desc="()Z" line="862"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreHeaderCase" desc="()Z" line="872"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreSurroundingSpaces" desc="()Z" line="881"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNullString" desc="()Ljava/lang/String;" line="895"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuoteCharacter" desc="()Ljava/lang/Character;" line="904"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuoteMode" desc="()Lorg/apache/commons/csv/QuoteMode;" line="913"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecordSeparator" desc="()Ljava/lang/String;" line="922"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSkipHeaderRecord" desc="()Z" line="931"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTrailingDelimiter" desc="()Z" line="941"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTrim" desc="()Z" line="950"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="955"><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCommentMarkerSet" desc="()Z" line="981"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEscapeCharacterSet" desc="()Z" line="990"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullStringSet" desc="()Z" line="999"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isQuoteCharacterSet" desc="()Z" line="1008"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;" line="1025"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;" line="1042"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;" line="1064"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Ljava/lang/Object;Ljava/lang/Appendable;Z)V" line="1085"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V" line="1105"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;" line="1137"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printAndEscape" desc="(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V" line="1145"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printAndQuote" desc="(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V" line="1186"><counter type="INSTRUCTION" missed="170" covered="0"/><counter type="BRANCH" missed="37" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printer" desc="()Lorg/apache/commons/csv/CSVPrinter;" line="1302"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="println" desc="(Ljava/lang/Appendable;)V" line="1315"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printRecord" desc="(Ljava/lang/Appendable;[Ljava/lang/Object;)V" line="1341"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="1349"><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringArray" desc="([Ljava/lang/Object;)[Ljava/lang/String;" line="1393"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trim" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="1405"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="1427"><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withAllowMissingColumnNames" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1480"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withAllowMissingColumnNames" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="1492"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withAutoFlush" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="1507"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withCommentMarker" desc="(C)Lorg/apache/commons/csv/CSVFormat;" line="1524"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withCommentMarker" desc="(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;" line="1539"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withDelimiter" desc="(C)Lorg/apache/commons/csv/CSVFormat;" line="1557"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withEscape" desc="(C)Lorg/apache/commons/csv/CSVFormat;" line="1575"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withEscape" desc="(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;" line="1588"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withFirstRecordAsHeader" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1613"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withHeader" desc="(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;" line="1643"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withHeader" desc="(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;" line="1681"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withHeader" desc="(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;" line="1711"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withHeader" desc="([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;" line="1746"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withHeaderComments" desc="([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;" line="1767"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withIgnoreEmptyLines" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1780"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withIgnoreEmptyLines" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="1792"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withIgnoreHeaderCase" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1805"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withIgnoreHeaderCase" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="1818"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withIgnoreSurroundingSpaces" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1831"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withIgnoreSurroundingSpaces" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="1843"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withNullString" desc="(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;" line="1862"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withQuote" desc="(C)Lorg/apache/commons/csv/CSVFormat;" line="1877"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withQuote" desc="(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;" line="1890"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withQuoteMode" desc="(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;" line="1907"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withRecordSeparator" desc="(C)Lorg/apache/commons/csv/CSVFormat;" line="1926"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withRecordSeparator" desc="(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;" line="1945"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withSkipHeaderRecord" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1959"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withSkipHeaderRecord" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="1972"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withSystemRecordSeparator" desc="()Lorg/apache/commons/csv/CSVFormat;" line="1990"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withTrailingDelimiter" desc="()Lorg/apache/commons/csv/CSVFormat;" line="2000"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withTrailingDelimiter" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="2013"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withTrim" desc="()Lorg/apache/commons/csv/CSVFormat;" line="2025"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withTrim" desc="(Z)Lorg/apache/commons/csv/CSVFormat;" line="2038"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="254"><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="LINE" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2276" covered="0"/><counter type="BRANCH" missed="261" covered="0"/><counter type="LINE" missed="390" covered="0"/><counter type="COMPLEXITY" missed="210" covered="0"/><counter type="METHOD" missed="78" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/CSVPrinter" sourcefilename="CSVPrinter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V" line="75"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="119"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="(Z)V" line="131"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="147"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOut" desc="()Ljava/lang/Appendable;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Ljava/lang/Object;)V" line="170"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printComment" desc="(Ljava/lang/String;)V" line="196"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="13" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="println" desc="()V" line="232"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printRecord" desc="(Ljava/lang/Iterable;)V" line="250"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printRecord" desc="([Ljava/lang/Object;)V" line="270"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printRecords" desc="(Ljava/lang/Iterable;)V" line="314"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printRecords" desc="([Ljava/lang/Object;)V" line="365"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printRecords" desc="(Ljava/sql/ResultSet;)V" line="379"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="273" covered="0"/><counter type="BRANCH" missed="43" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="35" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/CSVParser" sourcefilename="CSVParser.java"><method name="parse" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;" line="153"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;" line="182"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/nio/file/Path;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;" line="204"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;" line="246"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;" line="273"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V" line="325"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V" line="292"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRecordValue" desc="(Z)V" line="365"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="382"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentLineNumber" desc="()J" line="398"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirstEndOfLine" desc="()Ljava/lang/String;" line="408"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHeaderMap" desc="()Ljava/util/Map;" line="419"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecordNumber" desc="()J" line="433"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecords" desc="()Ljava/util/List;" line="450"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initializeHeader" desc="()Ljava/util/Map;" line="464"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClosed" desc="()Z" line="508"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="525"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextRecord" desc="()Lorg/apache/commons/csv/CSVRecord;" line="585"><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="481" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="101" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/CSVRecord" sourcefilename="CSVRecord.java"><method name="&lt;init&gt;" desc="([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V" line="52"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Enum;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharacterPosition" desc="()J" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComment" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecordNumber" desc="()J" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConsistent" desc="()Z" line="162"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasComment" desc="()Z" line="175"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMapped" desc="(Ljava/lang/String;)Z" line="186"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSet" desc="(Ljava/lang/String;)Z" line="197"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putIn" desc="(Ljava/util/Map;)Ljava/util/Map;" line="218"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="236"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Ljava/util/List;" line="247"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="()Ljava/util/Map;" line="256"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()[Ljava/lang/String;" line="273"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="251" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/ExtendedBufferedReader" sourcefilename="ExtendedBufferedReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="58"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastChar" desc="()I" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([CII)I" line="81"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookAhead" desc="()I" line="144"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentLineNumber" desc="()J" line="158"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()J" line="170"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClosed" desc="()Z" line="174"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="186"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/QuoteMode" sourcefilename="QuoteMode.java"><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/Constants" sourcefilename="Constants.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/Token" sourcefilename="Token.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="59"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/Assertions" sourcefilename="Assertions.java"><method name="notNull" desc="(Ljava/lang/Object;Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/csv/Lexer" sourcefilename="Lexer.java"><method name="getFirstEol" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V" line="67"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextToken" desc="(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;" line="92"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseSimpleToken" desc="(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;" line="195"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseEncapsulatedToken" desc="(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;" line="248"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapNullToDisabled" desc="(Ljava/lang/Character;)C" line="298"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentLineNumber" desc="()J" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharacterPosition" desc="()J" line="316"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readEscape" desc="()I" line="333"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trimTrailingSpaces" desc="(Ljava/lang/StringBuilder;)V" line="364"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readEndOfLine" desc="(I)Z" line="380"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClosed" desc="()Z" line="401"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhitespace" desc="(I)Z" line="408"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStartOfLine" desc="(I)Z" line="418"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEndOfFile" desc="(I)Z" line="425"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDelimiter" desc="(I)Z" line="429"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEscape" desc="(I)Z" line="433"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isQuoteChar" desc="(I)Z" line="437"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCommentStart" desc="(I)Z" line="441"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMetaChar" desc="(I)Z" line="445"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="459"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="621" covered="0"/><counter type="BRANCH" missed="128" covered="0"/><counter type="LINE" missed="142" covered="0"/><counter type="COMPLEXITY" missed="89" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="QuoteMode.java"><line nr="22" mi="24" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CSVPrinter.java"><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="17" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="4" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="4" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="2" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="2" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="8" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="2" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="3" cb="0"/><line nr="208" mi="13" ci="0" mb="4" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="8" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="9" ci="0" mb="2" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="6" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="9" ci="0" mb="2" cb="0"/><line nr="315" mi="3" ci="0" mb="2" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="2" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="8" ci="0" mb="0" cb="0"/><line nr="322" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="382" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="386" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="273" covered="0"/><counter type="BRANCH" missed="43" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="35" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExtendedBufferedReader.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="6" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="9" ci="0" mb="2" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="12" ci="0" mb="4" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="16" ci="0" mb="8" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Lexer.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="6" ci="0" mb="4" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="6" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="4" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="2" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="6" ci="0" mb="4" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="2" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="2" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="2" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="2" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="2" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="2" cb="0"/><line nr="208" mi="12" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="2" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="12" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="2" cb="0"/><line nr="261" mi="6" ci="0" mb="2" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="2" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="2" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="4" ci="0" mb="2" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="4" ci="0" mb="2" cb="0"/><line nr="281" mi="15" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="2" cb="0"/><line nr="288" mi="14" ci="0" mb="0" cb="0"/><line nr="292" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="2" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="8" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="2" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="365" mi="9" ci="0" mb="4" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="4" ci="0" mb="2" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="371" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="8" ci="0" mb="4" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="2" cb="0"/><line nr="385" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="2" cb="0"/><line nr="390" mi="3" ci="0" mb="2" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="2" cb="0"/><line nr="393" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="10" ci="0" mb="4" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="12" ci="0" mb="4" cb="0"/><line nr="418" mi="13" ci="0" mb="6" cb="0"/><line nr="425" mi="7" ci="0" mb="2" cb="0"/><line nr="429" mi="8" ci="0" mb="2" cb="0"/><line nr="433" mi="8" ci="0" mb="2" cb="0"/><line nr="437" mi="8" ci="0" mb="2" cb="0"/><line nr="441" mi="8" ci="0" mb="2" cb="0"/><line nr="445" mi="20" ci="0" mb="8" cb="0"/><line nr="459" mi="3" ci="0" mb="0" cb="0"/><line nr="460" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="621" covered="0"/><counter type="BRANCH" missed="128" covered="0"/><counter type="LINE" missed="142" covered="0"/><counter type="COMPLEXITY" missed="89" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Constants.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Assertions.java"><line nr="34" mi="2" ci="0" mb="2" cb="0"/><line nr="35" mi="14" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CSVFormat.java"><line nr="168" mi="44" ci="0" mb="0" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="211" mi="7" ci="0" mb="0" cb="0"/><line nr="216" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="21" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="2" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="421" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="0" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="2" ci="0" mb="0" cb="0"/><line nr="458" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="0" cb="0"/><line nr="461" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="463" mi="2" ci="0" mb="0" cb="0"/><line nr="493" mi="2" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="518" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="1" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="552" mi="10" ci="0" mb="4" cb="0"/><line nr="564" mi="10" ci="0" mb="4" cb="0"/><line nr="588" mi="21" ci="0" mb="0" cb="0"/><line nr="601" mi="4" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="3" ci="0" mb="0" cb="0"/><line nr="684" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="686" mi="3" ci="0" mb="0" cb="0"/><line nr="687" mi="3" ci="0" mb="0" cb="0"/><line nr="688" mi="3" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="690" mi="3" ci="0" mb="0" cb="0"/><line nr="691" mi="3" ci="0" mb="0" cb="0"/><line nr="692" mi="3" ci="0" mb="0" cb="0"/><line nr="693" mi="5" ci="0" mb="0" cb="0"/><line nr="694" mi="9" ci="0" mb="2" cb="0"/><line nr="695" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="3" ci="0" mb="0" cb="0"/><line nr="697" mi="3" ci="0" mb="0" cb="0"/><line nr="698" mi="3" ci="0" mb="0" cb="0"/><line nr="699" mi="3" ci="0" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="701" mi="1" ci="0" mb="0" cb="0"/><line nr="705" mi="3" ci="0" mb="2" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="2" cb="0"/><line nr="709" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="5" ci="0" mb="2" cb="0"/><line nr="712" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="3" ci="0" mb="0" cb="0"/><line nr="716" mi="5" ci="0" mb="2" cb="0"/><line nr="717" mi="2" ci="0" mb="0" cb="0"/><line nr="719" mi="5" ci="0" mb="2" cb="0"/><line nr="720" mi="2" ci="0" mb="0" cb="0"/><line nr="722" mi="3" ci="0" mb="2" cb="0"/><line nr="723" mi="3" ci="0" mb="2" cb="0"/><line nr="724" mi="2" ci="0" mb="0" cb="0"/><line nr="726" mi="6" ci="0" mb="2" cb="0"/><line nr="727" mi="2" ci="0" mb="0" cb="0"/><line nr="729" mi="3" ci="0" mb="2" cb="0"/><line nr="730" mi="3" ci="0" mb="2" cb="0"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="733" mi="6" ci="0" mb="2" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="736" mi="3" ci="0" mb="2" cb="0"/><line nr="737" mi="3" ci="0" mb="2" cb="0"/><line nr="738" mi="2" ci="0" mb="0" cb="0"/><line nr="740" mi="6" ci="0" mb="2" cb="0"/><line nr="741" mi="2" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="2" cb="0"/><line nr="744" mi="3" ci="0" mb="2" cb="0"/><line nr="745" mi="2" ci="0" mb="0" cb="0"/><line nr="747" mi="6" ci="0" mb="2" cb="0"/><line nr="748" mi="2" ci="0" mb="0" cb="0"/><line nr="750" mi="6" ci="0" mb="2" cb="0"/><line nr="751" mi="2" ci="0" mb="0" cb="0"/><line nr="753" mi="5" ci="0" mb="2" cb="0"/><line nr="754" mi="2" ci="0" mb="0" cb="0"/><line nr="756" mi="5" ci="0" mb="2" cb="0"/><line nr="757" mi="2" ci="0" mb="0" cb="0"/><line nr="759" mi="5" ci="0" mb="2" cb="0"/><line nr="760" mi="2" ci="0" mb="0" cb="0"/><line nr="762" mi="3" ci="0" mb="2" cb="0"/><line nr="763" mi="3" ci="0" mb="2" cb="0"/><line nr="764" mi="2" ci="0" mb="0" cb="0"/><line nr="766" mi="6" ci="0" mb="2" cb="0"/><line nr="767" mi="2" ci="0" mb="0" cb="0"/><line nr="769" mi="2" ci="0" mb="0" cb="0"/><line nr="780" mi="4" ci="0" mb="0" cb="0"/><line nr="781" mi="8" ci="0" mb="0" cb="0"/><line nr="782" mi="3" ci="0" mb="0" cb="0"/><line nr="783" mi="6" ci="0" mb="0" cb="0"/><line nr="784" mi="1" ci="0" mb="0" cb="0"/><line nr="786" mi="5" ci="0" mb="0" cb="0"/><line nr="797" mi="3" ci="0" mb="0" cb="0"/><line nr="807" mi="3" ci="0" mb="0" cb="0"/><line nr="816" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="3" ci="0" mb="0" cb="0"/><line nr="834" mi="3" ci="0" mb="0" cb="0"/><line nr="843" mi="10" ci="0" mb="2" cb="0"/><line nr="852" mi="10" ci="0" mb="2" cb="0"/><line nr="862" mi="3" ci="0" mb="0" cb="0"/><line nr="872" mi="3" ci="0" mb="0" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="895" mi="3" ci="0" mb="0" cb="0"/><line nr="904" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="922" mi="3" ci="0" mb="0" cb="0"/><line nr="931" mi="3" ci="0" mb="0" cb="0"/><line nr="941" mi="3" ci="0" mb="0" cb="0"/><line nr="950" mi="3" ci="0" mb="0" cb="0"/><line nr="955" mi="2" ci="0" mb="0" cb="0"/><line nr="956" mi="2" ci="0" mb="0" cb="0"/><line nr="958" mi="7" ci="0" mb="0" cb="0"/><line nr="959" mi="13" ci="0" mb="2" cb="0"/><line nr="960" mi="13" ci="0" mb="2" cb="0"/><line nr="961" mi="13" ci="0" mb="2" cb="0"/><line nr="962" mi="13" ci="0" mb="2" cb="0"/><line nr="963" mi="13" ci="0" mb="2" cb="0"/><line nr="964" mi="11" ci="0" mb="2" cb="0"/><line nr="965" mi="11" ci="0" mb="2" cb="0"/><line nr="966" mi="11" ci="0" mb="2" cb="0"/><line nr="967" mi="11" ci="0" mb="2" cb="0"/><line nr="968" mi="13" ci="0" mb="2" cb="0"/><line nr="969" mi="8" ci="0" mb="0" cb="0"/><line nr="970" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="7" ci="0" mb="2" cb="0"/><line nr="990" mi="7" ci="0" mb="2" cb="0"/><line nr="999" mi="7" ci="0" mb="2" cb="0"/><line nr="1008" mi="7" ci="0" mb="2" cb="0"/><line nr="1025" mi="6" ci="0" mb="0" cb="0"/><line nr="1042" mi="6" ci="0" mb="0" cb="0"/><line nr="1064" mi="13" ci="0" mb="0" cb="0"/><line nr="1085" mi="2" ci="0" mb="2" cb="0"/><line nr="1087" mi="4" ci="0" mb="2" cb="0"/><line nr="1088" mi="3" ci="0" mb="0" cb="0"/><line nr="1090" mi="4" ci="0" mb="2" cb="0"/><line nr="1091" mi="15" ci="0" mb="0" cb="0"/><line nr="1093" mi="4" ci="0" mb="0" cb="0"/><line nr="1097" mi="9" ci="0" mb="2" cb="0"/><line nr="1099" mi="9" ci="0" mb="2" cb="0"/><line nr="1100" mi="9" ci="0" mb="0" cb="0"/><line nr="1101" mi="1" ci="0" mb="0" cb="0"/><line nr="1105" mi="2" ci="0" mb="2" cb="0"/><line nr="1106" mi="5" ci="0" mb="0" cb="0"/><line nr="1108" mi="2" ci="0" mb="2" cb="0"/><line nr="1109" mi="5" ci="0" mb="0" cb="0"/><line nr="1110" mi="3" ci="0" mb="2" cb="0"/><line nr="1112" mi="9" ci="0" mb="0" cb="0"/><line nr="1113" mi="3" ci="0" mb="2" cb="0"/><line nr="1114" mi="7" ci="0" mb="0" cb="0"/><line nr="1116" mi="8" ci="0" mb="0" cb="0"/><line nr="1118" mi="1" ci="0" mb="0" cb="0"/><line nr="1137" mi="8" ci="0" mb="0" cb="0"/><line nr="1145" mi="2" ci="0" mb="0" cb="0"/><line nr="1146" mi="2" ci="0" mb="0" cb="0"/><line nr="1147" mi="4" ci="0" mb="0" cb="0"/><line nr="1149" mi="3" ci="0" mb="0" cb="0"/><line nr="1150" mi="4" ci="0" mb="0" cb="0"/><line nr="1152" mi="3" ci="0" mb="2" cb="0"/><line nr="1153" mi="4" ci="0" mb="0" cb="0"/><line nr="1154" mi="12" ci="0" mb="8" cb="0"/><line nr="1156" mi="3" ci="0" mb="2" cb="0"/><line nr="1157" mi="6" ci="0" mb="0" cb="0"/><line nr="1159" mi="3" ci="0" mb="2" cb="0"/><line nr="1160" mi="3" ci="0" mb="0" cb="0"/><line nr="1161" mi="3" ci="0" mb="2" cb="0"/><line nr="1162" mi="2" ci="0" mb="0" cb="0"/><line nr="1165" mi="4" ci="0" mb="0" cb="0"/><line nr="1166" mi="4" ci="0" mb="0" cb="0"/><line nr="1168" mi="4" ci="0" mb="0" cb="0"/><line nr="1171" mi="1" ci="0" mb="0" cb="0"/><line nr="1172" mi="1" ci="0" mb="0" cb="0"/><line nr="1175" mi="3" ci="0" mb="2" cb="0"/><line nr="1176" mi="6" ci="0" mb="0" cb="0"/><line nr="1178" mi="1" ci="0" mb="0" cb="0"/><line nr="1186" mi="2" ci="0" mb="0" cb="0"/><line nr="1187" mi="2" ci="0" mb="0" cb="0"/><line nr="1188" mi="2" ci="0" mb="0" cb="0"/><line nr="1189" mi="4" ci="0" mb="0" cb="0"/><line nr="1191" mi="3" ci="0" mb="0" cb="0"/><line nr="1192" mi="4" ci="0" mb="0" cb="0"/><line nr="1194" mi="3" ci="0" mb="0" cb="0"/><line nr="1195" mi="2" ci="0" mb="2" cb="0"/><line nr="1196" mi="2" ci="0" mb="0" cb="0"/><line nr="1198" mi="5" ci="0" mb="5" cb="0"/><line nr="1201" mi="2" ci="0" mb="0" cb="0"/><line nr="1202" mi="1" ci="0" mb="0" cb="0"/><line nr="1204" mi="7" ci="0" mb="2" cb="0"/><line nr="1205" mi="1" ci="0" mb="0" cb="0"/><line nr="1208" mi="6" ci="0" mb="0" cb="0"/><line nr="1209" mi="1" ci="0" mb="0" cb="0"/><line nr="1211" mi="2" ci="0" mb="2" cb="0"/><line nr="1216" mi="2" ci="0" mb="2" cb="0"/><line nr="1217" mi="3" ci="0" mb="0" cb="0"/><line nr="1220" mi="4" ci="0" mb="0" cb="0"/><line nr="1222" mi="3" ci="0" mb="2" cb="0"/><line nr="1226" mi="3" ci="0" mb="0" cb="0"/><line nr="1228" mi="3" ci="0" mb="2" cb="0"/><line nr="1229" mi="4" ci="0" mb="0" cb="0"/><line nr="1230" mi="12" ci="0" mb="8" cb="0"/><line nr="1231" mi="2" ci="0" mb="0" cb="0"/><line nr="1232" mi="1" ci="0" mb="0" cb="0"/><line nr="1234" mi="2" ci="0" mb="0" cb="0"/><line nr="1237" mi="2" ci="0" mb="2" cb="0"/><line nr="1238" mi="4" ci="0" mb="0" cb="0"/><line nr="1239" mi="4" ci="0" mb="0" cb="0"/><line nr="1242" mi="3" ci="0" mb="2" cb="0"/><line nr="1243" mi="2" ci="0" mb="0" cb="0"/><line nr="1249" mi="2" ci="0" mb="2" cb="0"/><line nr="1251" mi="6" ci="0" mb="0" cb="0"/><line nr="1252" mi="1" ci="0" mb="0" cb="0"/><line nr="1256" mi="12" ci="0" mb="0" cb="0"/><line nr="1259" mi="2" ci="0" mb="2" cb="0"/><line nr="1261" mi="6" ci="0" mb="0" cb="0"/><line nr="1262" mi="1" ci="0" mb="0" cb="0"/><line nr="1266" mi="4" ci="0" mb="0" cb="0"/><line nr="1270" mi="3" ci="0" mb="2" cb="0"/><line nr="1271" mi="4" ci="0" mb="0" cb="0"/><line nr="1272" mi="3" ci="0" mb="2" cb="0"/><line nr="1276" mi="8" ci="0" mb="0" cb="0"/><line nr="1279" mi="2" ci="0" mb="0" cb="0"/><line nr="1281" mi="1" ci="0" mb="0" cb="0"/><line nr="1282" mi="1" ci="0" mb="0" cb="0"/><line nr="1285" mi="6" ci="0" mb="0" cb="0"/><line nr="1286" mi="4" ci="0" mb="0" cb="0"/><line nr="1287" mi="1" ci="0" mb="0" cb="0"/><line nr="1302" mi="6" ci="0" mb="0" cb="0"/><line nr="1315" mi="3" ci="0" mb="2" cb="0"/><line nr="1316" mi="5" ci="0" mb="0" cb="0"/><line nr="1318" mi="3" ci="0" mb="2" cb="0"/><line nr="1319" mi="5" ci="0" mb="0" cb="0"/><line nr="1321" mi="1" ci="0" mb="0" cb="0"/><line nr="1341" mi="8" ci="0" mb="2" cb="0"/><line nr="1342" mi="11" ci="0" mb="2" cb="0"/><line nr="1344" mi="3" ci="0" mb="0" cb="0"/><line nr="1345" mi="1" ci="0" mb="0" cb="0"/><line nr="1349" mi="4" ci="0" mb="0" cb="0"/><line nr="1350" mi="9" ci="0" mb="0" cb="0"/><line nr="1351" mi="3" ci="0" mb="2" cb="0"/><line nr="1352" mi="4" ci="0" mb="0" cb="0"/><line nr="1353" mi="9" ci="0" mb="0" cb="0"/><line nr="1355" mi="3" ci="0" mb="2" cb="0"/><line nr="1356" mi="4" ci="0" mb="0" cb="0"/><line nr="1357" mi="9" ci="0" mb="0" cb="0"/><line nr="1359" mi="3" ci="0" mb="2" cb="0"/><line nr="1360" mi="4" ci="0" mb="0" cb="0"/><line nr="1361" mi="9" ci="0" mb="0" cb="0"/><line nr="1363" mi="3" ci="0" mb="2" cb="0"/><line nr="1364" mi="4" ci="0" mb="0" cb="0"/><line nr="1365" mi="9" ci="0" mb="0" cb="0"/><line nr="1367" mi="3" ci="0" mb="2" cb="0"/><line nr="1368" mi="4" ci="0" mb="0" cb="0"/><line nr="1369" mi="9" ci="0" mb="0" cb="0"/><line nr="1371" mi="3" ci="0" mb="2" cb="0"/><line nr="1372" mi="4" ci="0" mb="0" cb="0"/><line nr="1374" mi="3" ci="0" mb="2" cb="0"/><line nr="1375" mi="4" ci="0" mb="0" cb="0"/><line nr="1377" mi="3" ci="0" mb="2" cb="0"/><line nr="1378" mi="4" ci="0" mb="0" cb="0"/><line nr="1380" mi="7" ci="0" mb="0" cb="0"/><line nr="1381" mi="3" ci="0" mb="2" cb="0"/><line nr="1382" mi="4" ci="0" mb="0" cb="0"/><line nr="1383" mi="8" ci="0" mb="0" cb="0"/><line nr="1385" mi="3" ci="0" mb="2" cb="0"/><line nr="1386" mi="4" ci="0" mb="0" cb="0"/><line nr="1387" mi="8" ci="0" mb="0" cb="0"/><line nr="1389" mi="3" ci="0" mb="0" cb="0"/><line nr="1393" mi="2" ci="0" mb="2" cb="0"/><line nr="1394" mi="2" ci="0" mb="0" cb="0"/><line nr="1396" mi="4" ci="0" mb="0" cb="0"/><line nr="1397" mi="8" ci="0" mb="2" cb="0"/><line nr="1398" mi="4" ci="0" mb="0" cb="0"/><line nr="1399" mi="9" ci="0" mb="2" cb="0"/><line nr="1401" mi="2" ci="0" mb="0" cb="0"/><line nr="1405" mi="3" ci="0" mb="2" cb="0"/><line nr="1406" mi="4" ci="0" mb="0" cb="0"/><line nr="1408" mi="3" ci="0" mb="0" cb="0"/><line nr="1409" mi="2" ci="0" mb="0" cb="0"/><line nr="1410" mi="2" ci="0" mb="0" cb="0"/><line nr="1412" mi="8" ci="0" mb="4" cb="0"/><line nr="1413" mi="2" ci="0" mb="0" cb="0"/><line nr="1415" mi="10" ci="0" mb="4" cb="0"/><line nr="1416" mi="2" ci="0" mb="0" cb="0"/><line nr="1418" mi="12" ci="0" mb="4" cb="0"/><line nr="1427" mi="4" ci="0" mb="2" cb="0"/><line nr="1428" mi="5" ci="0" mb="0" cb="0"/><line nr="1431" mi="9" ci="0" mb="4" cb="0"/><line nr="1432" mi="15" ci="0" mb="0" cb="0"/><line nr="1436" mi="9" ci="0" mb="4" cb="0"/><line nr="1437" mi="15" ci="0" mb="0" cb="0"/><line nr="1441" mi="9" ci="0" mb="4" cb="0"/><line nr="1442" mi="15" ci="0" mb="0" cb="0"/><line nr="1446" mi="9" ci="0" mb="4" cb="0"/><line nr="1447" mi="15" ci="0" mb="0" cb="0"/><line nr="1451" mi="9" ci="0" mb="4" cb="0"/><line nr="1452" mi="15" ci="0" mb="0" cb="0"/><line nr="1456" mi="7" ci="0" mb="4" cb="0"/><line nr="1457" mi="5" ci="0" mb="0" cb="0"/><line nr="1461" mi="3" ci="0" mb="2" cb="0"/><line nr="1462" mi="4" ci="0" mb="0" cb="0"/><line nr="1463" mi="17" ci="0" mb="2" cb="0"/><line nr="1464" mi="4" ci="0" mb="2" cb="0"/><line nr="1465" mi="13" ci="0" mb="0" cb="0"/><line nr="1466" mi="5" ci="0" mb="0" cb="0"/><line nr="1470" mi="1" ci="0" mb="0" cb="0"/><line nr="1480" mi="4" ci="0" mb="0" cb="0"/><line nr="1492" mi="37" ci="0" mb="0" cb="0"/><line nr="1507" mi="37" ci="0" mb="0" cb="0"/><line nr="1524" mi="5" ci="0" mb="0" cb="0"/><line nr="1539" mi="3" ci="0" mb="2" cb="0"/><line nr="1540" mi="5" ci="0" mb="0" cb="0"/><line nr="1542" mi="37" ci="0" mb="0" cb="0"/><line nr="1557" mi="3" ci="0" mb="2" cb="0"/><line nr="1558" mi="5" ci="0" mb="0" cb="0"/><line nr="1560" mi="37" ci="0" mb="0" cb="0"/><line nr="1575" mi="5" ci="0" mb="0" cb="0"/><line nr="1588" mi="3" ci="0" mb="2" cb="0"/><line nr="1589" mi="5" ci="0" mb="0" cb="0"/><line nr="1591" mi="37" ci="0" mb="0" cb="0"/><line nr="1613" mi="6" ci="0" mb="0" cb="0"/><line nr="1643" mi="2" ci="0" mb="0" cb="0"/><line nr="1644" mi="2" ci="0" mb="2" cb="0"/><line nr="1645" mi="4" ci="0" mb="0" cb="0"/><line nr="1646" mi="4" ci="0" mb="0" cb="0"/><line nr="1647" mi="8" ci="0" mb="2" cb="0"/><line nr="1648" mi="7" ci="0" mb="0" cb="0"/><line nr="1651" mi="4" ci="0" mb="0" cb="0"/><line nr="1681" mi="9" ci="0" mb="2" cb="0"/><line nr="1711" mi="2" ci="0" mb="0" cb="0"/><line nr="1712" mi="2" ci="0" mb="2" cb="0"/><line nr="1713" mi="3" ci="0" mb="0" cb="0"/><line nr="1714" mi="3" ci="0" mb="0" cb="0"/><line nr="1715" mi="7" ci="0" mb="2" cb="0"/><line nr="1716" mi="8" ci="0" mb="0" cb="0"/><line nr="1719" mi="4" ci="0" mb="0" cb="0"/><line nr="1746" mi="37" ci="0" mb="0" cb="0"/><line nr="1767" mi="37" ci="0" mb="0" cb="0"/><line nr="1780" mi="4" ci="0" mb="0" cb="0"/><line nr="1792" mi="37" ci="0" mb="0" cb="0"/><line nr="1805" mi="4" ci="0" mb="0" cb="0"/><line nr="1818" mi="37" ci="0" mb="0" cb="0"/><line nr="1831" mi="4" ci="0" mb="0" cb="0"/><line nr="1843" mi="37" ci="0" mb="0" cb="0"/><line nr="1862" mi="37" ci="0" mb="0" cb="0"/><line nr="1877" mi="5" ci="0" mb="0" cb="0"/><line nr="1890" mi="3" ci="0" mb="2" cb="0"/><line nr="1891" mi="5" ci="0" mb="0" cb="0"/><line nr="1893" mi="37" ci="0" mb="0" cb="0"/><line nr="1907" mi="37" ci="0" mb="0" cb="0"/><line nr="1926" mi="5" ci="0" mb="0" cb="0"/><line nr="1945" mi="37" ci="0" mb="0" cb="0"/><line nr="1959" mi="4" ci="0" mb="0" cb="0"/><line nr="1972" mi="37" ci="0" mb="0" cb="0"/><line nr="1990" mi="5" ci="0" mb="0" cb="0"/><line nr="2000" mi="4" ci="0" mb="0" cb="0"/><line nr="2013" mi="37" ci="0" mb="0" cb="0"/><line nr="2025" mi="4" ci="0" mb="0" cb="0"/><line nr="2038" mi="37" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2401" covered="0"/><counter type="BRANCH" missed="261" covered="0"/><counter type="LINE" missed="405" covered="0"/><counter type="COMPLEXITY" missed="213" covered="0"/><counter type="METHOD" missed="81" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="CSVRecord.java"><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="16" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="21" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="14" ci="0" mb="4" cb="0"/><line nr="175" mi="7" ci="0" mb="2" cb="0"/><line nr="186" mi="12" ci="0" mb="4" cb="0"/><line nr="197" mi="18" ci="0" mb="4" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="12" ci="0" mb="2" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="2" cb="0"/><line nr="224" mi="9" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="9" ci="0" mb="0" cb="0"/><line nr="267" mi="23" ci="0" mb="0" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="251" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Token.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="24" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="CSVParser.java"><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="13" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="8" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="9" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="11" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="325" mi="6" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="10" ci="0" mb="0" cb="0"/><line nr="358" mi="6" ci="0" mb="0" cb="0"/><line nr="359" mi="4" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="5" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="9" ci="0" mb="2" cb="0"/><line nr="367" mi="9" ci="0" mb="6" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="11" ci="0" mb="2" cb="0"/><line nr="372" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="2" cb="0"/><line nr="383" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="11" ci="0" mb="2" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="5" ci="0" mb="2" cb="0"/><line nr="452" mi="5" ci="0" mb="0" cb="0"/><line nr="454" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="2" ci="0" mb="0" cb="0"/><line nr="465" mi="4" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="2" cb="0"/><line nr="467" mi="13" ci="0" mb="2" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="2" cb="0"/><line nr="474" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="2" cb="0"/><line nr="476" mi="3" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="2" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="0" mb="2" cb="0"/><line nr="487" mi="8" ci="0" mb="2" cb="0"/><line nr="488" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="4" ci="0" mb="0" cb="0"/><line nr="490" mi="10" ci="0" mb="4" cb="0"/><line nr="491" mi="8" ci="0" mb="6" cb="0"/><line nr="492" mi="12" ci="0" mb="0" cb="0"/><line nr="493" mi="5" ci="0" mb="0" cb="0"/><line nr="495" mi="6" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="528" mi="6" ci="0" mb="0" cb="0"/><line nr="533" mi="4" ci="0" mb="0" cb="0"/><line nr="534" mi="1" ci="0" mb="0" cb="0"/><line nr="535" mi="6" ci="0" mb="0" cb="0"/><line nr="536" mi="12" ci="0" mb="0" cb="0"/><line nr="542" mi="4" ci="0" mb="2" cb="0"/><line nr="543" mi="2" ci="0" mb="0" cb="0"/><line nr="545" mi="3" ci="0" mb="2" cb="0"/><line nr="546" mi="4" ci="0" mb="0" cb="0"/><line nr="549" mi="7" ci="0" mb="2" cb="0"/><line nr="554" mi="4" ci="0" mb="2" cb="0"/><line nr="555" mi="5" ci="0" mb="0" cb="0"/><line nr="557" mi="3" ci="0" mb="0" cb="0"/><line nr="558" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="2" ci="0" mb="2" cb="0"/><line nr="562" mi="3" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="2" cb="0"/><line nr="564" mi="5" ci="0" mb="0" cb="0"/><line nr="568" mi="2" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="585" mi="2" ci="0" mb="0" cb="0"/><line nr="586" mi="3" ci="0" mb="0" cb="0"/><line nr="587" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="7" ci="0" mb="0" cb="0"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="591" mi="6" ci="0" mb="0" cb="0"/><line nr="592" mi="7" ci="0" mb="6" cb="0"/><line nr="594" mi="3" ci="0" mb="0" cb="0"/><line nr="595" mi="1" ci="0" mb="0" cb="0"/><line nr="597" mi="3" ci="0" mb="0" cb="0"/><line nr="598" mi="1" ci="0" mb="0" cb="0"/><line nr="600" mi="4" ci="0" mb="2" cb="0"/><line nr="601" mi="4" ci="0" mb="0" cb="0"/><line nr="605" mi="15" ci="0" mb="0" cb="0"/><line nr="607" mi="2" ci="0" mb="2" cb="0"/><line nr="608" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="0" cb="0"/><line nr="612" mi="6" ci="0" mb="0" cb="0"/><line nr="613" mi="4" ci="0" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="616" mi="14" ci="0" mb="0" cb="0"/><line nr="618" mi="5" ci="0" mb="2" cb="0"/><line nr="620" mi="4" ci="0" mb="2" cb="0"/><line nr="621" mi="6" ci="0" mb="0" cb="0"/><line nr="622" mi="7" ci="0" mb="2" cb="0"/><line nr="623" mi="18" ci="0" mb="0" cb="0"/><line nr="626" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="563" covered="0"/><counter type="BRANCH" missed="68" covered="0"/><counter type="LINE" missed="121" covered="0"/><counter type="COMPLEXITY" missed="60" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="4472" covered="0"/><counter type="BRANCH" missed="560" covered="0"/><counter type="LINE" missed="852" covered="0"/><counter type="COMPLEXITY" missed="464" covered="0"/><counter type="METHOD" missed="177" covered="0"/><counter type="CLASS" missed="13" covered="0"/></package><package name="de/viadee/xai/framework/persistence/explanation_persistence_service"><class name="de/viadee/xai/framework/persistence/explanation_persistence_service/ExplanationPersistenceService" sourcefilename="ExplanationPersistenceService.java"/><class name="de/viadee/xai/framework/persistence/explanation_persistence_service/NullExplanationPersister" sourcefilename="NullExplanationPersister.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistExplanations" desc="(Ljava/util/List;I)Ljava/util/Map;" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadExplanations" desc="(I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="18"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadExplanationsForAllLabels" desc="([I)Ljava/util/Set;" line="23"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="terminate" desc="()V" line="27"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/viadee/xai/framework/persistence/explanation_persistence_service/TextExplanationPersister" sourcefilename="TextExplanationPersister.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="persistExplanations" desc="(Ljava/util/List;I)Ljava/util/Map;" line="33"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadExplanations" desc="(I)Lde/viadee/xai/framework/explanation_calculation/explanation/RuleExplanationSet;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadExplanationsForAllLabels" desc="([I)Ljava/util/Set;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="terminate" desc="()V" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="162" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ExplanationPersistenceService.java"/><sourcefile name="TextExplanationPersister.java"><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="20" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="10" ci="0" mb="2" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="2" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="11" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="13" ci="0" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="2" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="162" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NullExplanationPersister.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="174" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><counter type="INSTRUCTION" missed="15178" covered="2709"/><counter type="BRANCH" missed="1148" covered="96"/><counter type="LINE" missed="3091" covered="507"/><counter type="COMPLEXITY" missed="1256" covered="174"/><counter type="METHOD" missed="670" covered="131"/><counter type="CLASS" missed="86" covered="23"/></report>