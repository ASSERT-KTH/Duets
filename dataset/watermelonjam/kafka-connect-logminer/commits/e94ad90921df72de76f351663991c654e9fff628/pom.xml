<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright 2018 David Arnold

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.extr</groupId>
	<artifactId>kafka-connect-logminer</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<organization>
		<name>extr.io</name>
		<url>http://extr.io</url>
	</organization>
	<url>http://extr.io</url>
	<description>
       A Kafka Connect Oracle LogMiner connector for generating Kafka data from database changes.
    </description>

	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/watermelonjam/kafka-connect-logminer.git</connection>
		<developerConnection>scm:git:git@github.com:watermelonjam/kafka-connect-logminer.git</developerConnection>
		<url>https://github.com/watermelonjam/kafka-connect-logminer</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
		<scala.version>2.12</scala.version>
		<kafka.version>2.1.0</kafka.version>
	</properties>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<docker.database.image>none</docker.database.image>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<skipITs>true</skipITs>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<configuration>
							<skipRun>true</skipRun>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>docker.database.image</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>12.2.0.1.0</version>
					<scope>test</scope>
					<optional>true</optional>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.27.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Werror</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<it-database.host>${kcl-integration-db.ip}</it-database.host>
						<it-database.port>${kcl-integration-db.port}</it-database.port>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<vebose>true</vebose>
					<registry>${docker.registry}</registry>
					<portPropertyFile>docker-ports.properties</portPropertyFile>
					<!-- <removeVolumes>true</removeVolumes> -->
					<images>
						<image>
							<name>${docker.database.image}</name>
							<alias>kcl-integration-db</alias>
							<run>
								<env>
									<ORACLE_SID>KCLDB</ORACLE_SID>
									<ORACLE_PDB>KCLPDB</ORACLE_PDB>
									<ORACLE_PWD>KCLpass123</ORACLE_PWD>
									<ORACLE_CHARACTERSET>AL32UTF8</ORACLE_CHARACTERSET>
								</env>
								<ports>
									<port>+kcl-integration-db.ip:kcl-integration-db.port:1521</port>
									<port>+kcl-integration-em.ip:kcl-integration-em.port:5500</port>
								</ports>
								<volumes>
									<bind>
										<volume>${project.build.testOutputDirectory}/sql/startup:/opt/oracle/scripts/startup:ro</volume>
										<volume>${project.build.testOutputDirectory}/sql/setup:/opt/oracle/scripts/setup:ro</volume>
										<volume>${project.basedir}/tmp:/opt/oracle/oradata</volume>
									</bind>
								</volumes>
								<wait>
									<log>(?s)DATABASE IS READY TO USE!</log>
									<!-- Oracle on docker is not a speed demon -->
									<time>3600000</time>
								</wait>
								<log>
									<prefix>%a: </prefix>
									<date>DEFAULT</date>
									<color>BLUE</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>prepare-it-database</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>remove-it-database</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>connect-api</artifactId>
			<version>${kafka.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>