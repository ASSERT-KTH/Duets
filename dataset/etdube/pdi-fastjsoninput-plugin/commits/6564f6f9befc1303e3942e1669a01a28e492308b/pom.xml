<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.trail2peak.pdi</groupId>
	<artifactId>FastJsonInput</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- <packaging>jar</packaging> -->

	<name>FastJsonInput</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<pdi.plugin.dir>plugins/steps/${project.name}</pdi.plugin.dir>
		<pdi.plugin.lib_name>fastjsoninput.jar</pdi.plugin.lib_name>
		<pdi.plugin.includelibs>json-path-1.2.0.jar,json-smart-2.1.0.jar,asm-1.0.2.jar</pdi.plugin.includelibs>
		<pdi.home>/home/soliumuser/workspace/pentaho-kettle/dist</pdi.home>

		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>

	<repositories>
		<repository>
			<id>pentaho-repo</id>
			<url>http://repo.pentaho.org/artifactory/repo</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-core</artifactId>
			<version>5.0.9</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-engine</artifactId>
			<version>5.0.9</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-ui-swt</artifactId>
			<version>5.0.9</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jsonpath</groupId>
			<artifactId>jsonpath</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>asm</artifactId>
			<version>1.0.2</version>
		</dependency>

	</dependencies>

	<build>
		<outputDirectory>target/classes</outputDirectory>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deplibs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assemble/plugin-lib.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<echo>Copying images etc to pdi plugin directory
									(${pdi.plugin.dir})</echo>
								<copy todir="${pdi.plugin.dir}" overwrite="true">
									<fileset dir="${project.build.outputDirectory}"
										includes="**/*.png,**/*.xml" />
								</copy>
								<echo>Copying the plugin lib to pdi plugin directory
									(${pdi.plugin.dir})</echo>
								<copy toFile="${pdi.plugin.dir}/${pdi.plugin.lib_name}"
									file="${project.build.directory}/${project.artifactId}-${project.version}-plugin-lib.jar"
									overwrite="true" />
								<echo>Copying the additional libs to pdi plugin directory
									(${pdi.plugin.dir})</echo>
								<copy toDir="${pdi.plugin.dir}">
									<fileset dir="${project.build.directory}/deplibs"
										includes="${pdi.plugin.includelibs}" />
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>
		</plugins>
	</build>
</project>
