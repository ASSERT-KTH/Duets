<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.kmood</groupId>
	<artifactId>officeexport-java</artifactId>
	<name>officeexport-java</name>
	<packaging>jar</packaging>
	<version>1.0.0-RELEASE</version>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<tag>master</tag>
		<url>https://github.com/kmood/officeexport-java.git</url>
		<connection>https://github.com/kmood/officeexport-java.git</connection>
		<developerConnection>https://github.com/kmood/officeexport-java</developerConnection>
	</scm>
	<developers>
		<developer>
			<name>kmood</name>
			<email>17611104164@163.com</email>
			<organization>kmood</organization>
		</developer>
	</developers>

	<properties>
		<java-version>1.8</java-version>
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/dom4j/dom4j -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jaxen/jaxen -->
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.28</version>
		</dependency>
		<!-- commons工具类 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
        <!-- GSON -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.12</version>
		</dependency>

	</dependencies>
	<build>

		<plugins>
			<plugin>
				<!--配置src/main/resources目录的资源打包-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>

				<configuration>
					<resources>
						<resource>
							<directory>src/main/java</directory>
							<includes>
								<include>**/*.properties</include>
								<include>**/*.xml</include>
							</includes>
							<filtering>false</filtering>
						</resource>
						<resource>
							<directory>src/main/resources</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<filtering>false</filtering>
						</resource>

						<resource>
							<directory>src/test/java</directory>
							<includes>
								<include>**/*.properties</include>
								<include>**/*.xml</include>
							</includes>
							<filtering>false</filtering>
						</resource>
						<resource>
							<directory>src/test/resources</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<filtering>false</filtering>
						</resource>
					</resources>
					<includeEmptyDirs>true</includeEmptyDirs>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!--打包 webapp 下空文件夹-->
					<includeEmptyDirectories>true</includeEmptyDirectories>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>

				<configuration>
					<encoding>UTF-8</encoding>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<failOnError>true</failOnError> <!-- 表示当碰到错误就自动停止 -->
					<verbose>true</verbose> <!-- 表示提供详细的输出信息。 -->
					<fork>true</fork> <!-- fork is enable,用于明确表示编译版本配置的可用 -->
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					<source>1.8</source> <!-- 源代码使用的开发版本 -->
					<target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.test.int1.Main</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
