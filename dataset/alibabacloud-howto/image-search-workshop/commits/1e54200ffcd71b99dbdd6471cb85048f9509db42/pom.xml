<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
    </parent>

    <groupId>com.alibaba.intl.imagesearch</groupId>
    <artifactId>web-image-search-engine</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <name>web-image-search-engine</name>

    <properties>
        <apache-commons-io.version>2.6</apache-commons-io.version>
        <apache-lang.version>3.7</apache-lang.version>
        <mockito.version>1.10.19</mockito.version>
        <hibernate-validator.version>6.0.9.Final</hibernate-validator.version>

        <aliyun-core.version>3.2.8</aliyun-core.version>
        <aliyun-imagesearch.version>1.0.4</aliyun-imagesearch.version>
        <aliyun-oss.version>3.1.0</aliyun-oss.version>

        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.jacoco.reportPath>${project.basedir}/target/coverage-reports/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.junit.reportPaths>${project.basedir}/target/surefire-reports</sonar.junit.reportPaths>
        <sonar.binaries>target/classes</sonar.binaries>
        <sonar.sources>src/main/java</sonar.sources>
        <sonar.tests>src/test/java</sonar.tests>
    </properties>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Persistence -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
        </dependency>

        <!-- Alibaba Cloud -->
        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
            <version>${aliyun-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-imagesearch</artifactId>
            <version>${aliyun-imagesearch.version}</version>
        </dependency>

        <!-- Miscellaneous -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache-commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache-lang.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>web-image-search-engine</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <configuration>
                    <argLine>${surefireArgLine}</argLine>
                    <skipTests>${skip.unit.tests}</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <destFile>${sonar.jacoco.reportPath}</destFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.2.0</version>
                <configuration>
                    <group>Applications/Internet</group>
                    <packager>SWWDC</packager>
                    <needarch>noarch</needarch>
                    <targetOS>linux</targetOS>
                    <mappings>
                        <mapping>
                            <directory>/opt/web-image-search-engine</directory>
                            <sources>
                                <source>
                                    <location>target/web-image-search-engine.jar</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/systemd/system</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>rpm/etc/systemd/system/web-image-search-engine.service</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <requires>
                        <require>java-1.8.0-openjdk</require>
                    </requires>
                    <requiresPre>
                        <require>/usr/sbin/useradd</require>
                        <require>/usr/bin/getent</require>
                        <require>/usr/bin/chown</require>
                    </requiresPre>
                    <requiresPreun>
                        <require>/usr/sbin/userdel</require>
                    </requiresPreun>
                    <postinstallScriptlet>
                        <scriptFile>rpm/postinstall.sh</scriptFile>
                    </postinstallScriptlet>
                    <postremoveScriptlet>
                        <scriptFile>rpm/postun.sh</scriptFile>
                    </postremoveScriptlet>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
