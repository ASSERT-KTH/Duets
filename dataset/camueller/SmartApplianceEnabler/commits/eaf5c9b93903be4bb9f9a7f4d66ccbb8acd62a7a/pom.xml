<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.avanux.smartapplianceenabler</groupId>
	<artifactId>SmartApplianceEnabler</artifactId>
    <packaging>war</packaging>
	<version>1.3.33-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.0.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.fourthline.cling</groupId>
			<artifactId>cling-core</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<!-- <version>4.2</version> -->
		</dependency>
		<dependency>
			<groupId>com.pi4j</groupId>
			<artifactId>pi4j-core</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ghgande</groupId>
			<artifactId>j2mod</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.owlike</groupId>
			<artifactId>genson</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.0.54-beta</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<properties>
		<java.version>1.8</java.version>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
	</properties>


	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/src/main/resources/static</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>eot</nonFilteredFileExtension>
						<nonFilteredFileExtension>svg</nonFilteredFileExtension>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
						<nonFilteredFileExtension>ico</nonFilteredFileExtension>
						<nonFilteredFileExtension>png</nonFilteredFileExtension>
						<nonFilteredFileExtension>js</nonFilteredFileExtension>
						<nonFilteredFileExtension>map</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
    <profiles>
        <profile>
            <id>web</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
							<execution>
								<id>clean-node-modules</id>
								<phase>clean</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>rm</executable>
									<arguments>
										<argument>-rf</argument>
										<argument>node_modules</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-angular-cli</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>-g</argument>
										<argument>@angular/cli@1.6.2</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-install-semantic-ui</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>semantic-ui-css</argument>
										<argument>--save</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-install-clockpicker</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>clockpicker</argument>
										<argument>--save</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-install-ngx-translate-core</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>@ngx-translate/core</argument>
										<argument>--save</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-install-ngx-translate-http-loader</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>@ngx-translate/http-loader</argument>
										<argument>--save</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-install-karma-coverage-istanbul-reporter</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>karma-coverage-istanbul-reporter</argument>
										<argument>--save-dev</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>npm-install-istanbul-cobertura-badger</id>
								<phase>generate-sources</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>istanbul-cobertura-badger</argument>
										<argument>--save-dev</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
                            <execution>
                                <id>npm-install</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
                                    <executable>npm</executable>
                                    <arguments>
                                        <argument>install</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>ng-build</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
                                    <executable>ng</executable>
                                    <arguments>
                                        <argument>build</argument>
										<argument>--aot</argument>
										<argument>--output-hashing=all</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
							<execution>
								<id>ng-test</id>
								<phase>test</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>ng</executable>
									<arguments>
										<argument>test</argument>
										<argument>--code-coverage</argument>
										<argument>--watch=false</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>ng-coverage-badge</id>
								<phase>test</phase>
								<configuration>
									<workingDirectory>${project.basedir}/src/main/angular</workingDirectory>
									<executable>node</executable>
									<arguments>
										<argument>node_modules/istanbul-cobertura-badger/lib/cli.js</argument>
										<argument>-r</argument>
										<argument>coverage/cobertura-coverage.xml</argument>
										<argument>-d</argument>
										<argument>coverage</argument>
										<argument>-b</argument>
										<argument>SmartApplianceEnabler-web-coverage</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>travis</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <!-- this test fails ONLY on travis because to timeframe is unmarshalled -->
                                <exclude>**/SaeControllerTest.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
		<repository>
			<id>4thline.org-repo</id>
			<url>http://4thline.org/m2</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>oss-snapshots-repo</id>
			<name>Sonatype OSS Maven Repository</name>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>
</project>
