{"id":163215184,"node_id":"MDEwOlJlcG9zaXRvcnkxNjMyMTUxODQ=","name":"role-based-oauth2","full_name":"only2dhir/role-based-oauth2","private":false,"owner":{"login":"only2dhir","id":10099049,"node_id":"MDQ6VXNlcjEwMDk5MDQ5","gravatar_id":"","url":"https://api.github.com/users/only2dhir","type":"User","site_admin":false},"description":"In this article, we will be securing REST APIs with role based OAUTH2 implementation. To do so, we will be creating two custom roles as ADMIN and USER and we will use <code>@secured</code> annotation provided by spring security to secure our controller methods based on role.","fork":false,"url":"https://api.github.com/repos/only2dhir/role-based-oauth2","created_at":"2018-12-26T20:27:00Z","updated_at":"2020-04-15T10:54:51Z","pushed_at":"2018-12-26T20:42:04Z","homepage":"https://www.devglan.com/spring-security/spring-oauth2-role-based-authorization","size":16,"stargazers_count":10,"watchers_count":10,"language":"Java","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":16,"archived":false,"disabled":false,"open_issues_count":1,"forks":16,"open_issues":1,"watchers":10,"default_branch":"master","permissions":{"admin":false,"push":false,"pull":true},"temp_clone_token":"","network_count":16,"subscribers_count":2}