{"id":133413567,"node_id":"MDEwOlJlcG9zaXRvcnkxMzM0MTM1Njc=","name":"spring-security-jwt","full_name":"only2dhir/spring-security-jwt","private":false,"owner":{"login":"only2dhir","id":10099049,"node_id":"MDQ6VXNlcjEwMDk5MDQ5","gravatar_id":"","url":"https://api.github.com/users/only2dhir","type":"User","site_admin":false},"description":"In this article, we will be creating a sample REST CRUD APIs and provide JWT role based authorization using spring security to these APIs. We will be using spring boot 2.0 and JWT 0.9.0. In the DB, we will have two roles defined as ADMIN and USER with custom UserDetailsService implemented and based on these roles the authorization will be decided. We will be using spring data to perform our CRUD operations and spring provided annotations such as @PreAuthorize, @Secured and @EnableGlobalMethodSecurity for authorization.","fork":false,"url":"https://api.github.com/repos/only2dhir/spring-security-jwt","created_at":"2018-05-14T19:49:14Z","updated_at":"2020-06-22T09:50:10Z","pushed_at":"2018-11-20T06:42:51Z","homepage":"http://www.devglan.com/spring-security/jwt-role-based-authorization","size":12,"stargazers_count":61,"watchers_count":61,"language":"Java","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":64,"archived":false,"disabled":false,"open_issues_count":1,"forks":64,"open_issues":1,"watchers":61,"default_branch":"master","permissions":{"admin":false,"push":false,"pull":true},"temp_clone_token":"","network_count":64,"subscribers_count":7}