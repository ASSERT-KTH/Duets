<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.bch.c3pro</groupId>
    <artifactId>c3pro-server</artifactId>
    <version>0.0.1</version>
    <packaging>war</packaging>
    <name>c3pro server</name>
  
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jboss.bom.version>1.0.3.Final</jboss.bom.version>
        <sun.jna.version>3.0.9</sun.jna.version>
        <jboss.spec.version>2.0.0.Final</jboss.spec.version>
        <jboss.spec.javax.version>1.0.0.Final</jboss.spec.javax.version>
        <wro4j.version>1.4.6</wro4j.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.8.4</mockito.version>
        <jboss.resteasy.version>2.2.1.GA</jboss.resteasy.version>
        <commons-io.version>2.0.1</commons-io.version>
        <javax.servlet.version>3.0.1</javax.servlet.version>
        <json.version>20090211</json.version>
        <xmlunit.version>1.4</xmlunit.version>
    </properties>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>oss-snapshots</id>
            <snapshots>
	        <enabled>true</enabled>
            </snapshots>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
	</repository>
    </repositories>
    
    <dependencyManagement>
        <dependencies>
            <!-- JBoss distributes a complete set of Java EE 6 APIs including
      a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
      a collection) of artifacts. We use this here so that we always get the correct
      versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack
      (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras
      tools for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate
      stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras
      from the Hibernate family of projects) -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${jboss.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        <!-- This dependency includes the core HAPI-FHIR classes -->
	<dependency>
	    <groupId>ca.uhn.hapi.fhir</groupId>
		<artifactId>hapi-fhir-base</artifactId>
		<version>0.9</version>
	    </dependency>
        <!-- At least one "structures" JAR must also be included -->
	<dependency>
	    <groupId>ca.uhn.hapi.fhir</groupId>
	    <artifactId>hapi-fhir-structures-dstu2</artifactId>
	    <version>0.9</version>
	</dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.9.33</version>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>com.sun.jna</groupId>
			<artifactId>jna</artifactId>
			<version>${sun.jna.version}</version>
		</dependency>
		<dependency>  	
        	<groupId>org.jboss.spec</groupId>  
         	<artifactId>jboss-javaee-web-6.0</artifactId>  
         	<version>${jboss.spec.version}</version>  
         	<type>pom</type>  
         	<scope>provided</scope>  
         	<exclusions>  
            	<exclusion>  
               		<artifactId>xalan</artifactId>  
               		<groupId>org.apache.xalan</groupId>  
            	</exclusion>  
         	</exclusions>  
      	</dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
            <version>${jboss.spec.javax.version}</version>  
         	<type>pom</type>  
         	<scope>provided</scope>  
        </dependency>
        
        <!-- Import the EJB API, we use provided scope as the API is included in JBoss -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Needed for running tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- A nice tool for mocking classes -->
		<dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian allows to test enterprise code such as EJBs and Transactional(JTA) JPA from JUnit.
             Ideal for automated integration tests -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>  
        	<groupId>org.jboss.resteasy</groupId>  
         	<artifactId>resteasy-jaxrs</artifactId>
         	<scope>provided</scope>  
         	<version>${jboss.resteasy.version}</version>
      	</dependency>

        <!--For unit test XMLs  -->
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <scope>test</scope>
            <version>${xmlunit.version}</version>
        </dependency>

        <dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<scope>provided</scope>
			<version>${jboss.resteasy.version}</version>
			<exclusions>  
            	<exclusion>  
               		<artifactId>resteasy-jaxrs</artifactId>  
               		<groupId>org.jboss.resteasy</groupId>  
            	</exclusion>  
         	</exclusions>  
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>	
																		
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>${javax.servlet.version}</version>
		    <scope>provided</scope>
		</dependency>
    
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
    
		<dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <version>${jboss.spec.javax.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>org.jboss.shrinkwrap.resolver</groupId>  
        	<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
        	<scope>test</scope>
    	</dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2</artifactId>
            <version>1.6.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-transport-local</artifactId>
            <version>1.6.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-transport-http</artifactId>
            <version>1.6.2</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox</artifactId>
            <version>4.9.1.Final</version>
        </dependency>

    </dependencies>

    <build>
        <!-- Maven will append the version to the finalName (which is the name given to the generated war, and hence the context 
            root) -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Plugin to deploy generated war in JBoss deployments directory -->
            <!-- To use, run: mvn package jboss-as:deploy -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>7.3.Final</version>
            </plugin>                   
        
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <!--
            Default profile, for DEV
            -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources/dev</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.4.3</version>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
            Profile for PROD
            -->
            <id>prod</id>
            <activation>
                <property>
                    <name>prod</name>
                </property>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources/prod</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.4.3</version>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
            Profile for QA
            -->
            <id>qa</id>
            <activation>
                <property>
                    <name>qa</name>
                </property>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources/qa</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.4.3</version>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your JBoss AS instance -->
            <!-- This profile will start a new JBoss AS instance, and execute the test, shutting it down when done -->
            <!-- Run with: mvn clean test -Parq-jbossas-managed -->
            <id>arq-jbossas-managed</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources/dev</directory>
                    </resource>
                </resources>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-managed</artifactId>
                    <version>7.1.1.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in a remote JBoss AS instance -->
            <!-- Run with: mvn clean test -Parq-jbossas-remote -->
            <id>arq-jbossas-remote</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources/dev</directory>
                    </resource>
                </resources>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-remote</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>