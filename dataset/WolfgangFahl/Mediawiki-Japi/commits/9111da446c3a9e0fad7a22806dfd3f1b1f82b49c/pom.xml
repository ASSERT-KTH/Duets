<!-- Copyright (c) 2015-2017 BITPlan GmbH Project details and license at: 
	https://github.com/WolfgangFahl/Mediawiki-Japi -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.bitplan.pom</groupId>
		<artifactId>com.bitplan.pom</artifactId>
		<version>0.0.5</version>
		<relativePath>../com.bitplan.pom/pom.xml</relativePath>
	</parent>
	<groupId>com.bitplan</groupId>
	<artifactId>mediawiki-japi</artifactId>
	<packaging>jar</packaging>
	<name>BITPlan-Mediawiki-Japi</name>
	<version>0.1.02</version>
	<description>Java library to call Mediawiki api</description>
	<properties>
		<!-- for parent pom to work -->
		<github.project>Mediawiki-Japi</github.project>
		<github.owner>WolfgangFahl</github.owner>
		<!--  can be removed when com.bitplan.pom 0.0.6 is available -->
		<maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
		<!-- versions of other libraries to be used -->
		<jersey.version>1.19.3</jersey.version>
		<junit4.version>4.11</junit4.version>
		<guice.version>3.0</guice.version>
		<mockito.version>1.10.16</mockito.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.version>3.4</commons.version>
		<moxy.version>2.6.5</moxy.version>
		<!-- <moxy.version>2.5.2</moxy.version> -->
		<args4j.version>2.0.29</args4j.version>
		<dependency.locations.enabled>false</dependency.locations.enabled>
	</properties>
	<dependencies>
		<!-- Google Guice dependency injection -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- commons io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<!-- Jersey client -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- Jersey apache client -->
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-apache-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- Multipart support -->
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- eclipse moxy -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
			<version>${moxy.version}</version>
		</dependency>
		<!-- needed by eclipse moxy 2.6.0-M3 http://dev.eclipse.org/mhonarc/lists/eclipselink-users/msg08372.html 
			http://mvnrepository.com/artifact/javax.validation/validation-api/1.1.0.Final -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<!-- Jersey moxy -->
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-moxy</artifactId>
			<version>${jersey.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- JUnit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit4.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- args4j command line utility -->
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>${args4j.version}</version>
		</dependency>
		<!-- Mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.1</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- jar creation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>com.bitplan.mediawiki.japi.Mediawiki</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- executable jar with dependencies see http://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven 
				run with mvn clean compile assembly:single -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.bitplan.mediawiki.japi.Mediawiki</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<configuration>
					<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<overview>${basedir}\src\main\java\overview.html</overview>
					<verbose>true</verbose>
					<additionalJOption>${javadoc.opts}</additionalJOption>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
