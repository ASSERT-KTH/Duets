<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.simon</groupId>
	<artifactId>qbankserver</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>qbankserver</name>
	<description>Question Bank Server</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.registry>127.0.0.1:5000</docker.registry>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1206-jdbc42</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>1.8</version>
		</dependency>

		<!--actuator是spring boot提供的对应用系统的自省和监控的集成功能，可以对应用系统进行配置查看、相关功能统计等。-->
		<!--actuator start-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>hal-browser</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-docs</artifactId>
		</dependency>
		<!--actuator end-->

		<!-- swagger依赖start -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.1</version>
		</dependency>
		<!-- swagger依赖end -->

		<!-- ali dayu jar start -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dayu</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dayu-source</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- ali dayu jar end -->
		<!-- ali dayu jar start -->
		<!--<dependency>
			<groupId>com.alibaba</groupId>  &lt;!&ndash;自定义&ndash;&gt;
			<artifactId>dayu</artifactId>    &lt;!&ndash;自定义&ndash;&gt;
			<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;
			<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar。以后，Maven就不会在Repository中查找它&ndash;&gt;
			<systemPath>${project.basedir}/src/main/resources/jars/taobao-sdk-java-auto_1455552377940-20160607.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;
			&lt;!&ndash;<type>jar</type>
			<optional>true</optional>&ndash;&gt;
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>  &lt;!&ndash;自定义&ndash;&gt;
			<artifactId>dayu-source</artifactId>    &lt;!&ndash;自定义&ndash;&gt;
			<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;
			<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar。以后，Maven就不会在Repository中查找它&ndash;&gt;
			<systemPath>${project.basedir}/src/main/resources/jars/taobao-sdk-java-auto_1455552377940-20160607-source.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;
			&lt;!&ndash;<type>jar</type>
			<optional>true</optional>&ndash;&gt;
		</dependency>-->
		<!-- ali dayu jar end -->

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.47</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.5</version>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<dockerDirectory>src/main/resources</dockerDirectory>
					<baseImage>java</baseImage>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<!-- copy the service's jar file from target into the root directory of the image -->
					<imageName>${docker.registry}/${project.groupId}/${project.artifactId}:${project.version}</imageName>
					<!-- <dockerHost>https://192.168.99.100:2376</dockerHost> -->
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>${basedir}/src/main/resources</directory>
							<includes>
								<include>*</include>
							</includes>
						</resource>
					</resources>
				</configuration>
			</plugin>

			<!-- 该插件用来产生git的版本信息 -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
				</configuration>
			</plugin>

			<!--解决Maven关于本地jar包的打包处理的问题。不加，打包时不会把dayu的jar也处理。-->
			<!--屌用没有-->
			<!--<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<extdirs>${project.basedir}/src/main/resources/jars</extdirs>
					</compilerArguments>
				</configuration>
			</plugin>-->
		</plugins>
	</build>
</project>
