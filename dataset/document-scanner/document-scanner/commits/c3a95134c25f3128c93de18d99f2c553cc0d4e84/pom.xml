<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>richtercloud</groupId>
        <artifactId>document-scanner-aggregator</artifactId>
        <version>1.0-beta2</version>
    </parent>
    <artifactId>document-scanner</artifactId>
    <packaging>jar</packaging>
    <name>document-scanner</name>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <richtercloud.document.scanner.openjpa.version>2.2.0</richtercloud.document.scanner.openjpa.version>
        <richtercloud.document.scanner.hibernate.version>5.0.11.Final</richtercloud.document.scanner.hibernate.version>
        <richtercloud.document.scanner.eclipselink.version>2.6.4</richtercloud.document.scanner.eclipselink.version>
        <izpack.version>5.0.11-SNAPSHOT</izpack.version>
        <izpack.staging>${project.build.directory}/staging</izpack.staging>
        <richtercloud.document.scanner.version>1.0-beta2</richtercloud.document.scanner.version>
            <!-- for izpack plugin below (property for better visibility) -->
    </properties>
    <dependencies>
        <!--document-scanner dependencies-->
        <dependency>
            <groupId>richtercloud</groupId>
            <artifactId>document-scanner-ifaces</artifactId>
            <version>1.0-beta2</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>richtercloud</groupId>
            <artifactId>document-scanner-flexdock</artifactId>
            <version>1.0-beta</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>richtercloud</groupId>
            <artifactId>reflection-form-builder-jpa</artifactId>
            <version>1.0-beta2</version>
            <type>jar</type>
        </dependency>
        <!--Other dependencies-->
        <dependency>
            <groupId>com.googlecode.jfreesane</groupId>
            <artifactId>jfreesane</artifactId>
            <version>0.97</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.12</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.axet</groupId>
            <artifactId>lookup</artifactId>
            <version>0.2.14</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.13.1.1</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.13.1.1</version>
            <type>jar</type>
        </dependency>

        <!--JPA provider-->
        <!--explanations and reasons for JPA provider and caching are documented
                in comments in persistence.xml-->
<!--        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${richtercloud.document.scanner.hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
        </dependency>-->
            <!--use org.hibernate:hibernate-entitymanager instead of
                org.hibernate:hibernate-core
                <ref>http://hibernate.org/orm/downloads/</ref>-->
            <!--Hibernate needs one run with hibernate.hbm2ddl.auto set to
                    validate in order to provide any half-useful feedback at all
                    and to avoid failing with incomprehensive runtime exceptions
                    -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>${richtercloud.document.scanner.eclipselink.version}</version>
                <!--class specified in property eclipselink.session.customizer
                        isn't invoked in 2.6.2, but in 2.6.4-->
        </dependency>
        <!--<dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>${richtercloud.document.scanner.openjpa.version}</version>
        </dependency>-->

        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math4</artifactId>
            <version>4.0-SNAPSHOT</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.47</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.4.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.9</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>richtercloud</groupId>
            <artifactId>swing-worker-get-wait-dialog</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>1.13</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>richtercloud</groupId>
            <artifactId>message-handler</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>jar</type>
        </dependency>

        <!--Caching-->
        <!--Apache Ignite doesn't cache values, asked
                http://stackoverflow.com/questions/41010708/how-to-use-apache-ignite-as-jsr-107-cache
                for input-->
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>jcache</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!--<dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-core</artifactId>
            <version>1.7.0</version>
        </dependency>-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.12</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.10</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>richtercloud</groupId>
            <artifactId>credential-store</artifactId>
            <version>1.0-beta2</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>check_style</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>check_style.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <debug>true</debug>
                </configuration>
            </plugin>
            <!--<plugin>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa-maven-plugin</artifactId>
                <version>${richtercloud.document.scanner.openjpa.version}</version>
                <configuration>
                    <includes>**/model/*.class</includes>
                    <addDefaultConstructor>true</addDefaultConstructor>
                    <enforcePropertyRestrictions>true</enforcePropertyRestrictions>
                </configuration>
                <executions>
                    <execution>
                        <id>enhancer</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.openjpa</groupId>
                        <artifactId>openjpa</artifactId>
                        <version>${richtercloud.document.scanner.openjpa.version}</version>
                    </dependency>
                </dependencies>
            </plugin>-->
<!--            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <version>${richtercloud.document.scanner.hibernate.version}</version>
                <executions>
                    <execution>
                        <id>enhancer</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    includes and excludes can't be specified because
                            specifying dir causes enhancement to fail
                    <failOnError>true</failOnError>
                    <enableLazyInitialization>true</enableLazyInitialization>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-core</artifactId>
                        <version>${richtercloud.document.scanner.hibernate.version}</version>
                    </dependency>
                </dependencies>
            </plugin>-->
            <plugin>
                <groupId>de.empulse.eclipselink</groupId>
                <artifactId>staticweave-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                       <phase>process-classes</phase>
                        <goals>
                            <goal>weave</goal>
                        </goals>
                        <configuration>
                            <persistenceXMLLocation>META-INF/persistence.xml</persistenceXMLLocation>
                            <logLevel>FINE</logLevel>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.persistence</groupId>
                        <artifactId>org.eclipse.persistence.jpa</artifactId>
                        <version>${richtercloud.document.scanner.eclipselink.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--Packaging-->
            <!--Since it's overly hard to get "getting started" configurations
            works without binding executions to a phase, minimize dependencies
            bloating up the .deb and .dmg files and run at every packaging
            plugins `mvn clean install` which also reduces the danger of having
            outdated packages-->
            <plugin>
                <groupId>net.trajano.mojo</groupId>
                <artifactId>batik-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>convert-svg-to-ico</id>
                        <goals>
                            <goal>rasterizer</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <destDir>${izpack.staging}</destDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--This plugin's configuration must come *before* the Debian
                        Maven Plugin.-->
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>copy-deb-resources</id>
                        <phase>process-resources</phase>
                        <goals><goal>copy-resources</goal></goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${basedir}/target/deb</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/deb/resources</directory>
                                    <!-- Uncomment the following line to enable Velocity filtering. -->
                                    <!--
                                    <filtering>true</filtering>
                                    -->
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-jar-for-izpack</id>
                        <phase>package</phase>
                        <goals><goal>copy-resources</goal></goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${izpack.staging}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.sf.debian-maven</groupId>
                <artifactId>debian-maven-plugin</artifactId>
                <version>1.0.6</version>
                <configuration>
                    <packageName>document-scanner</packageName>
                    <packageVersion>${project.version}</packageVersion>
                    <packageDescription>A scaning assistant and document
                    management system</packageDescription>
                    <maintainerName>Karl-Philipp Richter</maintainerName>
                    <maintainerEmail>krichter@posteo.de</maintainerEmail>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>sh.tak.appbundler</groupId>
                <artifactId>appbundle-maven-plugin</artifactId>
                <version>1.2.0</version>
                <configuration>
                    <mainClass>richtercloud.document.scanner.gui.DocumentScanner</mainClass>
                    <generateDiskImageFile>true</generateDiskImageFile>
                        <!--Create dmg file-->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--copy jar after creation (in maven-debian-plugin) (declaration
                    of maven-resource-plugin above)...-->
            <!--...and rename because version number of pom can't be used in
                    izpack shortcut configuration file (and shouldn't be
                    maintained at more than one location)-->
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>rename-file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>rename</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${izpack.staging}/${project.build.finalName}.jar</sourceFile>
                            <destinationFile>${izpack.staging}/${project.name}.jar</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.izpack</groupId>
                <artifactId>izpack-maven-plugin</artifactId>
                <version>${izpack.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals><goal>izpack</goal></goals>
                        <configuration>
                            <!-- base for relative paths in izpack descriptor -->
                            <baseDir>${izpack.staging}</baseDir>
                            <validating>true</validating>
                            <mkdirs>true</mkdirs>
                            <installFile>${basedir}/src/main/izpack/install.xml</installFile>
                            <outputDirectory>${project.build.directory}/izpack-installer/</outputDirectory>
                            <finalName>${project.build.finalName}-installer</finalName>
                                <!--.jar extension is added-->
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.izpack</groupId>
                        <artifactId>izpack-panel</artifactId>
                        <version>${izpack.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>richtercloud</groupId>
                        <artifactId>document-scanner</artifactId>
                        <version>${richtercloud.document.scanner.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-staging-area</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy todir="${izpack.staging}">
                                    <fileset dir="${basedir}/src/main/izpack"/>
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <excludeTransitive>false</excludeTransitive>
                    <stripVersion>true</stripVersion>
                    <overWriteReleases>true</overWriteReleases>
                    <overWriteSnapshots>true</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <excludeScope>system</excludeScope>
                </configuration>
                <executions>
                    <execution>
                        <!-- copy product jars to izpack staging lib -->
                        <id>copy-product-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${izpack.staging}/lib</outputDirectory>
                            <excludeScope>system</excludeScope>
                            <!-- this excludes tools.jar, e.g. -->
                            <excludeArtifactIds>mycustompanels</excludeArtifactIds>
                            <excludeGroupIds>org.codehaus.izpack</excludeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- copy izpack custom (custom panels, etc.) jars to izpack staging custom -->
                        <id>copy-izpack-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${izpack.staging}/custom</outputDirectory>
                            <includeArtifactIds>mycustompanels</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <!-- profile for a headless environment (most likely every CI
                    service -->
            <!-- Doesn't work, but should -->
            <id>headless</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludedGroups>richtercloud.document.scanner.JavaFXGUITests</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
