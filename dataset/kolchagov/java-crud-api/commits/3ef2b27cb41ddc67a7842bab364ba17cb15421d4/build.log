[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------< eu.hadeco:java-crud-api >-----------------------
[INFO] Building Java CRUD API 1.0
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ java-crud-api ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmpuexs_9cr/java-crud-api/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ java-crud-api ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /tmp/tmpuexs_9cr/java-crud-api/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ java-crud-api ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 7 source files to /tmp/tmpuexs_9cr/java-crud-api/target/classes
[WARNING] /tmp/tmpuexs_9cr/java-crud-api/src/main/java/eu/hadeco/crudapi/RequestHandler.java: /tmp/tmpuexs_9cr/java-crud-api/src/main/java/eu/hadeco/crudapi/RequestHandler.java uses unchecked or unsafe operations.
[WARNING] /tmp/tmpuexs_9cr/java-crud-api/src/main/java/eu/hadeco/crudapi/RequestHandler.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ java-crud-api ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 6 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ java-crud-api ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 31 source files to /tmp/tmpuexs_9cr/java-crud-api/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ java-crud-api ---
[INFO] Surefire report directory: /tmp/tmpuexs_9cr/java-crud-api/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.ivanceras.fluent.TestSQLBuilderInsert
cleansed expected:
insert into films ( select * from tmp_films where date_prod < ? )
cleansed actual: 
insert into films ( select * from tmp_films where date_prod < ? )
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.102 sec - in com.ivanceras.fluent.TestSQLBuilderInsert
Running com.ivanceras.fluent.TestStringBuilderTechniques
Breakdown First: took 346 ms 
Breakdown Second: took 227 ms 
First: took 129 ms 
Second: took 34 ms 
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.726 sec - in com.ivanceras.fluent.TestStringBuilderTechniques
Running com.ivanceras.fluent.TestSQLBuilderIn
cleansed expected:
select * from user where name not in ( ? , ? , ? )
cleansed actual: 
select * from user where name not in ( ? , ? , ? )
cleansed expected:
select * from user where name in ( ? , ? , ? )
cleansed actual: 
select * from user where name in ( ? , ? , ? )
SELECT * 
 FROM User 
 WHERE name = ? ORDER BY name , lastname , password DESC 
cleansed expected:
select * from user where name = ? order by name , lastname , password desc
cleansed actual: 
select * from user where name = ? order by name , lastname , password desc
cleansed expected:
with recursive child as ( select option.option_id , option.clause , option.description , option.dax_clause , option.parent_option_id from dax.option where parent_option_id = ? union select option.option_id , option.clause , option.description , option.dax_clause , option.parent_option_id from dax.option inner join child on option.parent_option_id = child.option_id ) select * from child intersect select * from dax.option where option_id not in ( select distinct parent_option_id from dax.option where parent_option_id is not null )
cleansed actual: 
with recursive child as ( select option.option_id , option.clause , option.description , option.dax_clause , option.parent_option_id from dax.option where parent_option_id = ? union select option.option_id , option.clause , option.description , option.dax_clause , option.parent_option_id from dax.option inner join child on option.parent_option_id = child.option_id ) select * from child intersect select * from dax.option where option_id not in ( select distinct parent_option_id from dax.option where parent_option_id is not null )
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec - in com.ivanceras.fluent.TestSQLBuilderIn
Running com.ivanceras.fluent.TestSQLBuilderDelete
cleansed expected:
delete from products where price is not null
cleansed actual: 
delete from products where price is not null
cleansed expected:
delete from products where price = ?
cleansed actual: 
delete from products where price = ?
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.ivanceras.fluent.TestSQLBuilderDelete
Running com.ivanceras.fluent.TestStaticCreate
CREATE TABLE portal.user ( name character varying (60) , password character varying , firstname character varying , lastname character varying , email character varying , user_id character varying NOT NULL , photo character varying , CONSTRAINT user_pkey PRIMARY KEY ( user_id ) , CONSTRAINT unique_name UNIQUE ( name ) ) 
cleansed expected:
create table portal.user ( name character varying (60) , password character varying , firstname character varying , lastname character varying , email character varying , user_id character varying not null , photo character varying , constraint user_pkey primary key ( user_id ) , constraint unique_name unique ( name ) )
cleansed actual: 
create table portal.user ( name character varying (60) , password character varying , firstname character varying , lastname character varying , email character varying , user_id character varying not null , photo character varying , constraint user_pkey primary key ( user_id ) , constraint unique_name unique ( name ) )
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in com.ivanceras.fluent.TestStaticCreate
Running com.ivanceras.fluent.TestSQL1
cleansed expected:
select customers.customername , orders.orderid from customers inner join orders on customers.customerid = orders.customerid order by customers.customername
cleansed actual: 
select customers.customername , orders.orderid from customers inner join orders on customers.customerid = orders.customerid order by customers.customername
expected: 
 WITH LatestOrders AS (		SELECT  MAX ( ID ) 			FROM dbo.Orders 			GROUP BY CustomerID		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT  COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )  )            AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         ON Customers.ID = Orders.CustomerID  WHERE     Orders.ID IN ( SELECT ID FROM LatestOrders ) 
actual: 
WITH LatestOrders AS ( SELECT MAX ( ID ) 
 FROM dbo.Orders GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders ON Customers.ID = Orders.CustomerID 
 WHERE Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with latestorders as ( select max ( id ) from dbo.orders group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders on customers.id = orders.customerid where orders.id in ( select id from latestorders )
cleansed actual: 
with latestorders as ( select max ( id ) from dbo.orders group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders on customers.id = orders.customerid where orders.id in ( select id from latestorders )
expected: 
 WITH LatestOrders AS (		SELECT CustomerName ,  SUM ( COUNT ( ID ) )  ,				 COUNT ( MAX ( n_items ) ) 							FROM dbo.Orders			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT  COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )        )      AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         USING ID WHERE 	Orders.n_items > ?    AND Orders.ID IN ( SELECT ID FROM LatestOrders ) 
actual: 
WITH LatestOrders AS ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) 
 FROM dbo.Orders RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders USING ID 
 WHERE Orders.n_items > ? AND Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
cleansed actual: 
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
cleansed expected:
delete from products where price = ?
cleansed actual: 
delete from products where price = ?
cleansed expected:
delete from products where price = ?
cleansed actual: 
delete from products where price = ?
cleansed expected:
insert into films ( select * from tmp_films where date_prod < ? )
cleansed actual: 
insert into films ( select * from tmp_films where date_prod < ? )
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec - in com.ivanceras.fluent.TestSQL1
Running com.ivanceras.fluent.TestSQLBuilderSelect
cleansed expected:
select * from products where price is not null
cleansed actual: 
select * from products where price is not null
cleansed expected:
select name from products where price >= ?
cleansed actual: 
select name from products where price >= ?
cleansed expected:
select name from products where price < ?
cleansed actual: 
select name from products where price < ?
cleansed expected:
select name from products where price > ? limit 10 offset 1
cleansed actual: 
select name from products where price > ? limit 10 offset 1
cleansed expected:
select name from products left join item using item_id , name where price > ? limit 10 offset 1
cleansed actual: 
select name from products left join item using item_id , name where price > ? limit 10 offset 1
cleansed expected:
select name from products left join item on item_id = product_id and products.name = item.name where price > ? limit 10 offset 1
cleansed actual: 
select name from products left join item on item_id = product_id and products.name = item.name where price > ? limit 10 offset 1
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in com.ivanceras.fluent.TestSQLBuilderSelect
Running com.ivanceras.fluent.TestSQLBuilderEquality
cleansed expected:
delete from products where price = ?
cleansed actual: 
delete from products where price = ?
cleansed expected:
delete from products where price = ?
cleansed actual: 
delete from products where price = ?
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.ivanceras.fluent.TestSQLBuilderEquality
Running com.ivanceras.fluent.TestSQLBuilderNamedColumns
cleansed expected:
select prefmgr.name as prefmgr_name , ( select 1 from dual ) as one_dual , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed actual: 
select prefmgr.name as prefmgr_name , ( select 1 from dual ) as one_dual , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed expected:
select distinct prefmgr.name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed actual: 
select distinct prefmgr.name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed expected:
select * from prefmgr where prefmgr.name is not null
cleansed actual: 
select * from prefmgr where prefmgr.name is not null
cleansed expected:
select distinct on ( prefmgr.name , prefmgr.description ) prefmgr.name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed actual: 
select distinct on ( prefmgr.name , prefmgr.description ) prefmgr.name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed expected:
select prefmgr.name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed actual: 
select prefmgr.name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed expected:
select prefmgr.name as prefmgr_name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
cleansed actual: 
select prefmgr.name as prefmgr_name , prefmgr.description from ads.prefmgr where prefmgr.name is not null
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in com.ivanceras.fluent.TestSQLBuilderNamedColumns
Running com.ivanceras.fluent.TestSQLOrderBy
cleansed expected:
select customers.customername , orders.orderid from customers order by name desc , description
cleansed actual: 
select customers.customername , orders.orderid from customers order by name desc , description
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.ivanceras.fluent.TestSQLOrderBy
Running com.ivanceras.fluent.TestSimpleComplexFunctions
expected: 
 WITH LatestOrders AS (		SELECT CustomerName ,  SUM ( COUNT ( ID ) )  ,				 COUNT ( MAX ( n_items ) ) 							FROM dbo.Orders			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT  COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID ) )              AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         USING ID WHERE 	Orders.n_items > ?    AND Orders.ID IN ( SELECT ID FROM LatestOrders ) 
actual: 
WITH LatestOrders AS ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) 
 FROM dbo.Orders RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders USING ID 
 WHERE Orders.n_items > ? AND Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
cleansed actual: 
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec - in com.ivanceras.fluent.TestSimpleComplexFunctions
Running com.ivanceras.fluent.TestSQLBuilderFunctions
expected: 
 WITH LatestOrders AS (		SELECT CustomerName , SUM ( COUNT ( ID ) ) ,				COUNT ( MAX ( n_items ) ) 							FROM dbo.Orders			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )        )     AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         USING ID WHERE 	Orders.n_items > ?    AND Orders.ID IN ( SELECT ID FROM LatestOrders ) 
actual: 
WITH LatestOrders AS ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) 
 FROM dbo.Orders RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders USING ID 
 WHERE Orders.n_items > ? AND Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
cleansed actual: 
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec - in com.ivanceras.fluent.TestSQLBuilderFunctions
Running com.ivanceras.fluent.TestStaticSelects
SELECT * 
 FROM Users 
cleansed expected:
select * from users
cleansed actual: 
select * from users
SELECT * 
 FROM Users 
cleansed expected:
select * from users
cleansed actual: 
select * from users
SELECT * 
 FROM Users 
 WHERE name = ? 
cleansed expected:
select * from users where name = ?
cleansed actual: 
select * from users where name = ?
SELECT MAX ( SUM ( length ) ) 
 FROM Users 
 WHERE name = ? 
cleansed expected:
select max ( sum ( length ) ) from users where name = ?
cleansed actual: 
select max ( sum ( length ) ) from users where name = ?
SELECT SUM ( SUM ( SUM ( length ) ) ) 
 FROM Users 
 WHERE name = ? 
cleansed expected:
select sum ( sum ( sum ( length ) ) ) from users where name = ?
cleansed actual: 
select sum ( sum ( sum ( length ) ) ) from users where name = ?
SELECT SUM ( SUM ( SUM ( length ) ) ) 
 FROM Users 
 WHERE name = ? 
cleansed expected:
select sum ( sum ( sum ( length ) ) ) from users where name = ?
cleansed actual: 
select sum ( sum ( sum ( length ) ) ) from users where name = ?
SELECT SUM ( SUM ( SUM ( length ) ) ) , MAX ( MAX ( SELECT 
 FROM dual ) ) 
 FROM Users 
 LEFT JOIN Role USING name , firstname RIGHT JOIN User_role ON id = id 
 WHERE name = ? AND description IN ( ? , ? , ? ) UNION SELECT DISTINCT name , description 
 WHERE name 
 IN ( SUM ( SUM ( lee ) ) ) GROUP BY name , description ORDER BY name DESC LIMIT 10 OFFSET 20 
cleansed expected:
select sum ( sum ( sum ( length ) ) ) , max ( max ( select from dual ) ) from users left join role using name , firstname right join user_role on id = id where name = ? and description in ( ? , ? , ? ) union select distinct name , description where name in ( sum ( sum ( lee ) ) ) group by name , description order by name desc limit 10 offset 20
cleansed actual: 
select sum ( sum ( sum ( length ) ) ) , max ( max ( select from dual ) ) from users left join role using name , firstname right join user_role on id = id where name = ? and description in ( ? , ? , ? ) union select distinct name , description where name in ( sum ( sum ( lee ) ) ) group by name , description order by name desc limit 10 offset 20
SELECT SUM ( MAX ( MIN ( length ) ) ) , AVG ( SELECT 
 FROM dual ) 
 FROM Users 
 LEFT JOIN Role USING name , firstname RIGHT JOIN User_role ON id = id 
 WHERE name = ? AND description IN ( ? , ? , ? ) UNION SELECT DISTINCT name , description 
 WHERE name 
 IN ( SUM ( SUM ( lee ) ) ) AND SUM ( ID ) > ? GROUP BY LOWER ( name ) , description HAVING name = ? ORDER BY name DESC LIMIT 10 OFFSET 30 
cleansed expected:
select sum ( max ( min ( length ) ) ) , avg ( select from dual ) from users left join role using name , firstname right join user_role on id = id where name = ? and description in ( ? , ? , ? ) union select distinct name , description where name in ( sum ( sum ( lee ) ) ) and sum ( id ) > ? group by lower ( name ) , description having name = ? order by name desc limit 10 offset 30
cleansed actual: 
select sum ( max ( min ( length ) ) ) , avg ( select from dual ) from users left join role using name , firstname right join user_role on id = id where name = ? and description in ( ? , ? , ? ) union select distinct name , description where name in ( sum ( sum ( lee ) ) ) and sum ( id ) > ? group by lower ( name ) , description having name = ? order by name desc limit 10 offset 30
SELECT name , SUM ( MAX ( MIN ( length ) ) ) , AVG ( SELECT 
 FROM dual ) 
 FROM Users 
 LEFT JOIN Role USING name , firstname RIGHT JOIN User_role ON id = id 
 WHERE name = ? AND description IN ( ? , ? , ? ) UNION SELECT DISTINCT name , description 
 WHERE name 
 IN ( SELECT SUM ( SUM ( lee ) ) ) GROUP BY LOWER ( name ) , description HAVING name = ? ORDER BY name DESC LIMIT 10 OFFSET 30 
cleansed expected:
select name , sum ( max ( min ( length ) ) ) , avg ( select from dual ) from users left join role using name , firstname right join user_role on id = id where name = ? and description in ( ? , ? , ? ) union select distinct name , description where name in ( select sum ( sum ( lee ) ) ) group by lower ( name ) , description having name = ? order by name desc limit 10 offset 30
cleansed actual: 
select name , sum ( max ( min ( length ) ) ) , avg ( select from dual ) from users left join role using name , firstname right join user_role on id = id where name = ? and description in ( ? , ? , ? ) union select distinct name , description where name in ( select sum ( sum ( lee ) ) ) group by lower ( name ) , description having name = ? order by name desc limit 10 offset 30
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec - in com.ivanceras.fluent.TestStaticSelects
Running com.ivanceras.fluent.TestComplexQuery
cleansed expected:
select customers.customername , orders.orderid from customers inner join orders on customers.customerid = orders.customerid order by customers.customername
cleansed actual: 
select customers.customername , orders.orderid from customers inner join orders on customers.customerid = orders.customerid order by customers.customername
expected: 
 WITH LatestOrders AS (		SELECT  MAX ( ID )  			FROM dbo.Orders 			GROUP BY CustomerID		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT  COUNT ( * )  		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )       )       AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         ON Customers.ID = Orders.CustomerID  WHERE     Orders.ID IN ( SELECT ID FROM LatestOrders ) 
actual: 
WITH LatestOrders AS ( SELECT MAX ( ID ) 
 FROM dbo.Orders GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders ON Customers.ID = Orders.CustomerID 
 WHERE Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with latestorders as ( select max ( id ) from dbo.orders group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders on customers.id = orders.customerid where orders.id in ( select id from latestorders )
cleansed actual: 
with latestorders as ( select max ( id ) from dbo.orders group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders on customers.id = orders.customerid where orders.id in ( select id from latestorders )
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec - in com.ivanceras.fluent.TestComplexQuery
Running com.ivanceras.fluent.TestQuery2HiveSQL
cleansed expected:
select * from products where price is not null
cleansed actual: 
select * from products where price is not null
cleansed expected:
select sum ( price ) from products where price is not null
cleansed actual: 
select sum ( price ) from products where price is not null
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.ivanceras.fluent.TestQuery2HiveSQL
Running com.ivanceras.fluent.TestSQLBuilderRecursive
expected: 
 WITH LatestOrders AS (		SELECT CustomerName , 				SUM ( COUNT ( ID ) ) ,				COUNT ( MAX ( n_items ) ) , 				Red as color			FROM dbo.Orders			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )        )      AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         USING ID WHERE    Orders.ID IN ( SELECT ID FROM LatestOrders )	AND Orders.n_items > ? 
actual: 
WITH LatestOrders AS ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) , Red AS color 
 FROM dbo.Orders RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders USING ID 
 WHERE Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) AND Orders.n_items > ? 
cleansed expected:
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) , red as color from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.id in ( select id from latestorders ) and orders.n_items > ?
cleansed actual: 
with latestorders as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) , red as color from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.id in ( select id from latestorders ) and orders.n_items > ?
0
expected: 
 WITH LatestOrders ( sum_count_idm , count_max_items , cname , colour ) AS (		SELECT 				CustomerName ,                SUM ( COUNT ( ID ) ) ,				COUNT ( MAX ( n_items ) ) , 				? as color			FROM dbo.Orders , customers , persons			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID		)  SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )         )     AS TotalItemsPurchased  FROM dbo.Customers , people , pg_tables  INNER JOIN dbo.Orders         USING ID WHERE 	Orders.n_items > ?    AND Orders.ID IN ( SELECT ID FROM LatestOrders )
actual: 
WITH LatestOrders ( sum_count_idm , count_max_items , cname , colour ) AS ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) , ? AS color 
 FROM dbo.Orders , customers , persons RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers , people , pg_tables INNER JOIN dbo.Orders USING ID 
 WHERE Orders.n_items > ? AND Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with latestorders ( sum_count_idm , count_max_items , cname , colour ) as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) , ? as color from dbo.orders , customers , persons right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers , people , pg_tables inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
cleansed actual: 
with latestorders ( sum_count_idm , count_max_items , cname , colour ) as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) , ? as color from dbo.orders , customers , persons right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers , people , pg_tables inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
Red
0
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec - in com.ivanceras.fluent.TestSQLBuilderRecursive
Running com.ivanceras.fluent.TestSQLFieldsComma
cleansed expected:
select customers.customername , orders.orderid from customers group by customername , date
cleansed actual: 
select customers.customername , orders.orderid from customers group by customername , date
cleansed expected:
select customers.customername , orders.orderid from customers
cleansed actual: 
select customers.customername , orders.orderid from customers
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.ivanceras.fluent.TestSQLFieldsComma
Running com.ivanceras.fluent.TestSQLBuilderWithRecursive
expected: 
 WITH  RECURSIVE LatestOrders ( sum_count_idm , count_max_items , cname , colour ) 	AS (		SELECT customername , SUM ( COUNT ( ID ) ) ,				COUNT ( MAX ( n_items ) ) , 				? as color			FROM dbo.Orders			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID 		)   SELECT     Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID ) )            AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         USING ID WHERE 	Orders.n_items > ?    AND Orders.ID IN ( SELECT ID FROM LatestOrders )
actual: 
WITH RECURSIVE LatestOrders ( sum_count_idm , count_max_items , cname , colour ) AS ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) , ? AS color 
 FROM dbo.Orders RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) SELECT Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders USING ID 
 WHERE Orders.n_items > ? AND Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) 
cleansed expected:
with recursive latestorders ( sum_count_idm , count_max_items , cname , colour ) as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) , ? as color from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
cleansed actual: 
with recursive latestorders ( sum_count_idm , count_max_items , cname , colour ) as ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) , ? as color from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) select customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders )
Red
0
cleansed expected:
with recursive child as ( select option.option_id , option.clause , option.description , option.dax_clause , option.parent_option_id from dax.option )
cleansed actual: 
with recursive child as ( select option.option_id , option.clause , option.description , option.dax_clause , option.parent_option_id from dax.option )
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in com.ivanceras.fluent.TestSQLBuilderWithRecursive
Running com.ivanceras.fluent.TestSQLBuilderUpdate
cleansed expected:
update films set kind = ? where kind = ?
cleansed actual: 
update films set kind = ? where kind = ?
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.ivanceras.fluent.TestSQLBuilderUpdate
Running com.ivanceras.fluent.TestSQLBuilderMoreComplexFunctions
expected: 
 SELECT 		( SELECT CustomerName ,  SUM ( COUNT ( ID ) ) ,				COUNT ( MAX ( n_items ) )			FROM dbo.Orders			RIGHT JOIN Customers				on Orders.Customer_ID = Customers.ID 			LEFT JOIN Persons				ON Persons.name = Customer.name				AND Persons.lastName = Customer.lastName			GROUP BY CustomerID 		) AS LatestOrders ,    Customers.* ,     Orders.OrderTime AS LatestOrderTime ,     ( SELECT COUNT ( * ) 		FROM dbo.OrderItems 		WHERE OrderID IN         ( SELECT ID FROM dbo.Orders WHERE CustomerID = Customers.ID )       )      AS TotalItemsPurchased  FROM dbo.Customers  INNER JOIN dbo.Orders         USING ID WHERE 	Orders.n_items > ?    AND Orders.ID IN ( SELECT ID FROM LatestOrders )	ORDER BY ID DESC  LIMIT 100  OFFSET 20
actual: 
SELECT ( SELECT CustomerName , SUM ( COUNT ( ID ) ) , COUNT ( MAX ( n_items ) ) 
 FROM dbo.Orders RIGHT JOIN Customers ON Orders.customer_ID = Customers.ID 
 LEFT JOIN Persons ON Persons.name = Customer.name AND Persons.lastName = Customer.lastName GROUP BY CustomerID ) AS LatestOrders , Customers.* , Orders.OrderTime AS LatestOrderTime , ( SELECT COUNT ( * ) 
 FROM dbo.OrderItems 
 WHERE OrderID 
 IN ( SELECT ID 
 FROM dbo.Orders 
 WHERE CustomerID = Customers.ID ) ) AS TotalItemsPurchased 
 FROM dbo.Customers INNER JOIN dbo.Orders USING ID 
 WHERE Orders.n_items > ? AND Orders.ID 
 IN ( SELECT ID 
 FROM LatestOrders ) ORDER BY ID DESC LIMIT 100 OFFSET 20 
cleansed expected:
select ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) as latestorders , customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders ) order by id desc limit 100 offset 20
cleansed actual: 
select ( select customername , sum ( count ( id ) ) , count ( max ( n_items ) ) from dbo.orders right join customers on orders.customer_id = customers.id left join persons on persons.name = customer.name and persons.lastname = customer.lastname group by customerid ) as latestorders , customers.* , orders.ordertime as latestordertime , ( select count ( * ) from dbo.orderitems where orderid in ( select id from dbo.orders where customerid = customers.id ) ) as totalitemspurchased from dbo.customers inner join dbo.orders using id where orders.n_items > ? and orders.id in ( select id from latestorders ) order by id desc limit 100 offset 20
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec - in com.ivanceras.fluent.TestSQLBuilderMoreComplexFunctions
Running eu.hadeco.crudapi.MysqlTest
Jul 30, 2020 3:54:08 PM eu.hadeco.crudapi.TestBase setupClass
SEVERE: Server class is not configured!
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.093 sec - in eu.hadeco.crudapi.MysqlTest
Running eu.hadeco.crudapi.SqlServerTest
Jul 30, 2020 3:54:08 PM eu.hadeco.crudapi.TestBase setupClass
SEVERE: Server class is not configured!
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0 sec - in eu.hadeco.crudapi.SqlServerTest
Running eu.hadeco.crudapi.SqliteTest
3.21.0
Jul 30, 2020 3:54:11 PM eu.hadeco.crudapi.RequestHandler handleRequest
WARNING: {"user_id":"must be numeric or boolean"}
Jul 30, 2020 3:54:11 PM eu.hadeco.crudapi.RequestHandler handleRequest
INFO: CREATE operation failed
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (near " ": syntax error)
	at org.sqlite.core.DB.newSQLException(DB.java:909)
	at org.sqlite.core.DB.newSQLException(DB.java:921)
	at org.sqlite.core.DB.throwex(DB.java:886)
	at org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.sqlite.core.NativeDB.prepare(NativeDB.java:127)
	at org.sqlite.core.DB.prepare(DB.java:227)
	at org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:41)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:30)
	at org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:19)
	at org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:48)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:263)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:235)
	at org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:242)
	at com.zaxxer.hikari.proxy.ConnectionProxy.prepareStatement(ConnectionProxy.java:297)
	at com.zaxxer.hikari.proxy.HikariConnectionProxy.prepareStatement(HikariConnectionProxy.java)
	at eu.hadeco.crudapi.RequestHandler.prepareStatement(RequestHandler.java:907)
	at eu.hadeco.crudapi.RequestHandler.handleRequest(RequestHandler.java:1235)
	at eu.hadeco.crudapi.RequestHandler.handle(RequestHandler.java:176)
	at eu.hadeco.crudapi.TestApi.expect(TestApi.java:65)
	at eu.hadeco.crudapi.TestApi.expect(TestApi.java:55)
	at eu.hadeco.crudapi.Tests.testAddPostFailure(Tests.java:321)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)

Jul 30, 2020 3:54:11 PM eu.hadeco.crudapi.RequestHandler handleRequest
WARNING: {"category_id":"must be numeric or boolean"}
Jul 30, 2020 3:54:12 PM eu.hadeco.crudapi.RequestHandler handleRequest
INFO: CREATE operation failed
org.sqlite.SQLiteException: [SQLITE_CONSTRAINT_PRIMARYKEY]  A PRIMARY KEY constraint failed (UNIQUE constraint failed: posts.id)
	at org.sqlite.core.DB.newSQLException(DB.java:909)
	at org.sqlite.core.DB.newSQLException(DB.java:921)
	at org.sqlite.core.DB.execute(DB.java:825)
	at org.sqlite.jdbc3.JDBC3PreparedStatement.execute(JDBC3PreparedStatement.java:53)
	at com.zaxxer.hikari.proxy.PreparedStatementProxy.execute(PreparedStatementProxy.java:44)
	at com.zaxxer.hikari.proxy.HikariPreparedStatementProxy.execute(HikariPreparedStatementProxy.java)
	at eu.hadeco.crudapi.RequestHandler.handleRequest(RequestHandler.java:1236)
	at eu.hadeco.crudapi.RequestHandler.handle(RequestHandler.java:176)
	at eu.hadeco.crudapi.TestApi.expect(TestApi.java:65)
	at eu.hadeco.crudapi.TestApi.expect(TestApi.java:55)
	at eu.hadeco.crudapi.Tests.testErrorOnDuplicatePrimaryKey(Tests.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)

Tests run: 81, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.603 sec - in eu.hadeco.crudapi.SqliteTest
Running eu.hadeco.crudapi.PostgresqlTest
Jul 30, 2020 3:54:12 PM eu.hadeco.crudapi.TestBase setupClass
SEVERE: Server class is not configured!
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.001 sec - in eu.hadeco.crudapi.PostgresqlTest
Running eu.hadeco.crudapi.OracleTest
Jul 30, 2020 3:54:12 PM eu.hadeco.crudapi.TestBase setupClass
SEVERE: Server class is not configured!
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.001 sec - in eu.hadeco.crudapi.OracleTest

Results :

Tests run: 137, Failures: 0, Errors: 0, Skipped: 4

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ java-crud-api ---
[INFO] Loading execution data file /tmp/tmpuexs_9cr/java-crud-api/target/jacoco.exec
[INFO] Analyzed bundle 'Java CRUD API' with 102 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  16.503 s
[INFO] Finished at: 2020-07-30T15:54:13Z
[INFO] ------------------------------------------------------------------------
