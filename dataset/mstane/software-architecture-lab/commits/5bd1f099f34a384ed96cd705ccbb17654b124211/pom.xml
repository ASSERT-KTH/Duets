<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.sm.lab.mybooks</groupId>
	<artifactId>mybooks</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>mybooks</name>
	<description>MyBooks with AngularJS, Bootstrap, Thymeleaf and Spring</description>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<wro4j.version>1.7.8</wro4j.version>
		<java.version>1.8</java.version>
		<hazelcast.version>3.5.2</hazelcast.version>
		<javax.inject.version>1</javax.inject.version>
	</properties>
	

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.7.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1202-jdbc42</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		
       <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-hibernate4</artifactId>
            <version>${hazelcast.version}</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-spring</artifactId>
            <version>${hazelcast.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        
        <dependency>
        	<groupId>org.springframework.security</groupId>
        	<artifactId>spring-security-test</artifactId>
      	</dependency>
      	
		<dependency>
		    <groupId>com.jayway.jsonpath</groupId>
		    <artifactId>json-path</artifactId>
		</dependency>      	
        
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>        		

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.10.4</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-resources</directory>
			</resource>
            <resource>
                <directory>${project.build.directory}/generated-resources</directory>
            </resource>			
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<!-- Serves *only* to filter the wro.xml so it can get an absolute 
							path for the project -->
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/wro</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/wro</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>ro.isdc.wro4j</groupId>
				<artifactId>wro4j-maven-plugin</artifactId>
				<version>${wro4j.version}</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
					<cssDestinationFolder>${project.build.directory}/generated-resources/static/css</cssDestinationFolder>
					<jsDestinationFolder>${project.build.directory}/generated-resources/static/js</jsDestinationFolder>
					<wroFile>${project.build.directory}/wro/wro.xml</wroFile>
					<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
					<contextFolder>${basedir}/src/main/wro</contextFolder>
				</configuration>
                <dependencies>
                    <dependency>
			            <groupId>org.webjars</groupId>
			            <artifactId>jquery</artifactId>
			            <version>2.1.3</version>
			        </dependency>               
			        <dependency>
			            <groupId>org.webjars</groupId>
			            <artifactId>angularjs</artifactId>
			            <version>1.3.15</version>
			        </dependency>
			        <dependency>
			            <groupId>org.webjars</groupId>
			            <artifactId>bootstrap</artifactId>
			            <version>3.3.4</version>
			        </dependency>
					<dependency>
					    <groupId>org.webjars</groupId>
					    <artifactId>angular-ui-bootstrap</artifactId>
					    <version>0.13.0</version>
					</dependency>			        
                </dependencies>				
			</plugin>
			<plugin>
				<groupId>com.github.klieber</groupId>
				<artifactId>phantomjs-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<version>1.9.7</version>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>1.3.1.5</version>
<!-- 					<executions> -->
<!-- 						<execution> -->
<!-- 							<goals> -->
<!-- 								<goal>test</goal> -->
<!-- 							</goals> -->
<!-- 						</execution> -->
<!-- 					</executions> -->
					<configuration>
                         <preloadSources>
                               <source>webjars/angular.min.js</source>
                               <source>webjars/angular-mocks.js</source>
                        </preloadSources>                                                               
                        <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
                        <webDriverCapabilities>
                            <capability>
                                <name>phantomjs.binary.path</name>
                                <value>${phantomjs.binary}</value>
                            </capability>
                        </webDriverCapabilities>
						<jsSrcDir>${project.basedir}/src/main/resources/static/js</jsSrcDir>
						<jsTestSrcDir>${project.basedir}/src/test/resources/static/js/unit</jsTestSrcDir>
					</configuration>								
			</plugin>			

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>org.hsqldb.server.Server</mainClass>
					<arguments>
						<argument>--database.0</argument>
						<argument>file:db/mybooks.db</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.yaml</groupId>
						<artifactId>snakeyaml</artifactId>
						<version>1.16</version>
					</dependency>
				</dependencies>
				<version>3.4.1</version>
					<configuration>
						<changeLogFile>src/main/resources/db/changelog/db.changelog-master.yaml</changeLogFile>
						<driver>org.hsqldb.jdbcDriver</driver>
						<url>jdbc:hsqldb:hsql://localhost:9001/</url>
						<username>sa</username>
						<password></password>
					</configuration>			
			</plugin>

		</plugins>


		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.klieber</groupId>
										<artifactId>phantomjs-maven-plugin</artifactId>
										<versionRange>[0.7,)</versionRange>
										<goals>
											<goal>install</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
    <profiles>
		<profile>
			<id>debug</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</jvmArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
			
		</profile>

        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
	
	</profiles>

</project>
