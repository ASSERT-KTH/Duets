<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <groupId>net.automation.selenium</groupId>
 <artifactId>Seletest</artifactId>
 <version>0.0.1-SNAPSHOT</version>
 <packaging>jar</packaging>
 <name>Selenium QA Test Framework</name>
 <profiles>
  <!-- Custom profile for performing code coverage to our Project -->
  <profile>
   <id>instrument</id>
   <build>
    <plugins>
     <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>cobertura-maven-plugin</artifactId>
      <configuration>
      </configuration>
      <executions>
       <execution>
        <id>instrument-code</id>
        <phase>process-classes</phase>
        <goals>
         <goal>instrument</goal>
        </goals>
        <configuration>
         <attach>true</attach>
        </configuration>
       </execution>
      </executions>
     </plugin>
     <plugin>
      <artifactId>maven-source-plugin</artifactId>
      <executions>
       <execution>
        <id>attach-sources</id>
        <goals>
         <goal>jar</goal>
        </goals>
       </execution>
      </executions>
      <inherited>true</inherited>
     </plugin>
    </plugins>
   </build>
  </profile>
 </profiles>
 <build>
  <pluginManagement>
   <plugins>

    <plugin>
     <!-- use mvn cobertura:cobertura to generate cobertura reports -->
     <groupId>org.codehaus.mojo</groupId>
     <artifactId>cobertura-maven-plugin</artifactId>
     <version>2.6</version>
     <configuration>
      <formats>
       <format>html</format>
       <format>xml</format>
      </formats>
     </configuration>
    </plugin>

    <!-- Build a JAR from the current project -->
    <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-jar-plugin</artifactId>
    </plugin>

    <!-- Clean up after the build -->
    <plugin>
     <artifactId>maven-clean-plugin</artifactId>
     <version>2.5</version>
    </plugin>

    <!-- Compiles Java sources -->
    <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-compiler-plugin</artifactId>
     <version>2.5.1</version>
     <inherited>true</inherited>
     <configuration>
      <source>1.7</source>
      <target>1.7</target>
      <testSource>1.7</testSource>
      <testTarget>1.7</testTarget>
      <showDeprecation>true</showDeprecation>
      <showWarnings>true</showWarnings>
      <executable>${env.JAVA_HOME}/bin/javac</executable>
     </configuration>
    </plugin>

    <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-release-plugin</artifactId>
     <version>2.4.1</version>
    </plugin>

    <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-javadoc-plugin</artifactId>
     <version>2.9.1</version>
     <configuration>
      <doclet>ydoc.doclets.YStandard</doclet>
      <docletPath>${pathToUML}/yworks-uml-doclet-3.0_02-jdk1.5/lib/ydoc.jar:${pathToUML}/yworks-uml-doclet-3.0_02-jdk1.5/resources</docletPath>
      <additionalparam>-umlautogen</additionalparam>
      <systemPropertyVariables>
       <pathToUML>${pathToUML}</pathToUML>
      </systemPropertyVariables>
     </configuration>
    </plugin>

   </plugins>
  </pluginManagement>
 </build>


 <pluginRepositories>
  <pluginRepository>
   <id>autoincrement-versions-maven-plugin</id>
   <name>autoincrement-versions-maven-plugin</name>
   <url>http://autoincrement-versions-maven-plugin.googlecode.com/svn/repo</url>
   <snapshots>
    <enabled>true</enabled>
   </snapshots>
  </pluginRepository>
 </pluginRepositories>
 <dependencies>

  <!-- Suite of Java SSH applications providing a Java SSH API, SSH Terminal, 
   SSH secured VNC client, SFTP client and SSH Daemon <dependency> <groupId>sshtools</groupId> 
   <artifactId>j2ssh-core</artifactId> <version>0.2.9</version> </dependency> -->
  <dependency>
   <groupId>sshtools</groupId>
   <artifactId>j2ssh-core</artifactId>
   <version>0.2.9</version>
  </dependency>

  <dependency>
   <groupId>com.jcraft</groupId>
   <artifactId>jsch</artifactId>
   <version>0.1.49</version>
  </dependency>

  <!-- TestNG framework -->
  <dependency>
   <groupId>org.testng</groupId>
   <artifactId>testng</artifactId>
   <version>6.8.8</version>
  </dependency>

  <!-- ReportNG, a simple HTML reporting plug-in for the TestNG unit-testing 
   framework Usually in our project newer TestNG version is used, so that ReportNG 
   dependency should be excluded -->
  <dependency>
   <groupId>org.uncommons</groupId>
   <artifactId>reportng</artifactId>
   <version>1.1.4</version>
   <exclusions>
    <exclusion>
     <groupId>org.testng</groupId>
     <artifactId>testng</artifactId>
    </exclusion>
   </exclusions>
  </dependency>

  <dependency>
   <groupId>com.github.detro.ghostdriver</groupId>
   <artifactId>phantomjsdriver</artifactId>
   <version>1.0.4</version>
  </dependency>

  <dependency>
   <groupId>velocity</groupId>
   <artifactId>velocity</artifactId>
   <version>1.5</version>
  </dependency>

  <dependency>
   <groupId>com.google.inject</groupId>
   <artifactId>guice</artifactId>
   <version>3.0</version>
  </dependency>

  <!-- Selenium Server Standalone -->
  <dependency>
   <groupId>org.seleniumhq.selenium</groupId>
   <artifactId>selenium-server</artifactId>
   <version>${selenium.version}</version>
  </dependency>

  <dependency>
   <groupId>com.opera</groupId>
   <artifactId>operadriver</artifactId>
   <version>1.2</version>
  </dependency>

  <dependency>
   <groupId>com.googlecode.json-simple</groupId>
   <artifactId>json-simple</artifactId>
   <version>1.1.1</version>
  </dependency>

  <!-- OBTAINING SPRING RELEASES FROM MANEN CENTRAL -->

  <!-- Core utilities used by other modules. -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-core</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- Bean Factory and JavaBeans utilities (depends on spring-core) -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-beans</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
   spring-beans) -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-aop</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
   spring-beans) -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-context</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- Various Application Context utilities, including EhCache, JavaMail, 
   Quartz, and Freemarker integration -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-context-support</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
   spring-aop, spring-context) -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-tx</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
   spring-tx) -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-jdbc</artifactId>
   <version>${org.springframework.version}</version>
  </dependency>

  <!-- AspectJ Dependencies -->
  <dependency>
   <groupId>org.aspectj</groupId>
   <artifactId>aspectjrt</artifactId>
   <version>${aspectj.version}</version>
  </dependency>
  <dependency>
   <groupId>org.aspectj</groupId>
   <artifactId>aspectjweaver</artifactId>
   <version>${aspectj.version}</version>
  </dependency>
  <dependency>
   <groupId>cglib</groupId>
   <artifactId>cglib</artifactId>
   <version>3.1</version>
  </dependency>

  <!-- Support for testing Spring applications with tools such as JUnit and 
   TestNG This artifact is generally always defined with a 'test' scope for 
   the integration testing framework and unit testing stubs -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-test</artifactId>
   <version>${org.springframework.version}</version>
   <exclusions>
    <exclusion>
     <groupId>commons-logging</groupId>
     <artifactId>commons-logging</artifactId>
    </exclusion>
   </exclusions>
  </dependency>


  <!-- Logging to console with slf4j and logback-classic -->
  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>slf4j-api</artifactId>
   <version>1.7.5</version>
  </dependency>

  <dependency>
   <groupId>ch.qos.logback</groupId>
   <artifactId>logback-classic</artifactId>
   <version>1.0.13</version>
   <scope>test</scope>
  </dependency>

  <!-- Read from a csv file -->
  <dependency>
   <groupId>net.sf.opencsv</groupId>
   <artifactId>opencsv</artifactId>
   <version>2.3</version>
  </dependency>


  <!-- Return values of xls table into array -->
  <dependency>
   <groupId>net.sourceforge.jexcelapi</groupId>
   <artifactId>jxl</artifactId>
   <version>2.6.12</version>
  </dependency>

  <!-- Tool for performance testing of web applications generating HAR files -->
  <dependency>
   <groupId>net.lightbody.bmp</groupId>
   <artifactId>browsermob-proxy</artifactId>
   <version>2.0-beta-9</version>
   <exclusions>
    <exclusion>
     <groupId>org.seleniumhq.selenium</groupId>
     <artifactId>selenium-api</artifactId>
    </exclusion>
    <exclusion>
     <groupId>org.slf4j</groupId>
     <artifactId>slf4j-jdk14</artifactId>
    </exclusion>
   </exclusions>
  </dependency>

  <!-- Project lombok for generating custom code runtime like setters-getters -->
  <dependency>
   <groupId>org.projectlombok</groupId>
   <artifactId>lombok</artifactId>
   <version>1.12.6</version>
   <scope>provided</scope>
  </dependency>

  <!-- TestNG data bind framework for reading from excel-csv-properties files -->
  <dependency>
   <groupId>net.sf.testngdatabind</groupId>
   <artifactId>testng-databinding-core</artifactId>
   <version>2.0</version>
  </dependency>

  <!-- Mail service jars -->
  <dependency>
   <groupId>javax.mail</groupId>
   <artifactId>mail</artifactId>
   <version>1.4.5</version>
  </dependency>

  <dependency>
   <groupId>javax.activation</groupId>
   <artifactId>activation</artifactId>
   <version>1.1.1</version>
  </dependency>

  <!-- Appium java client for mobile native apps -->
  <dependency>
   <groupId>io.appium</groupId>
   <artifactId>java-client</artifactId>
   <version>1.1.0</version>
   <exclusions>
    <exclusion>
     <groupId>org.seleniumhq.selenium</groupId>
     <artifactId>selenium-api</artifactId>
    </exclusion>
   </exclusions>
  </dependency>
 </dependencies>


 <!-- Shared version number properties -->
 <properties>
  <org.springframework.version>4.0.3.RELEASE</org.springframework.version>
  <selenium.version>2.42.2</selenium.version>
  <aspectj.version>1.6.11</aspectj.version>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
 </properties>
</project>