<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.dbunit</groupId>
  <artifactId>samples</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>DbUnit Framework: Samples</name>
  <url>http://dbunit.sourceforge.net</url>
  <inceptionYear>2010</inceptionYear>
  <description>
    DbUnit is a JUnit extension (also usable from Ant) targeted for database-driven projects that, among other things, puts your database into a known state between test runs. This is an excellent way to avoid the myriad of problems that can occur when one test case corrupts the database and causes subsequent tests to fail or exacerbate the damage.
  </description>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <properties>
    <db.driver>oracle.jdbc.OracleDriver</db.driver>
    <db.url>jdbc:oracle:thin:@oracle_on_vmware:1521:XE</db.url>
    <db.userid>birt</db.userid>
    <db.password>birt</db.password>
    <db.schema>BIRT</db.schema>
    <db.system.userid>system</db.system.userid>
    <db.system.password>manager</db.system.password>
    <compileSource>1.6</compileSource>
    <slf4jVersion>1.5.6</slf4jVersion>
    <oracleVersion>11.2.0.1.0</oracleVersion>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>3.0.0.RELEASE</version>
    </dependency>
    <!--
      Download from
      http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htdocs/jdbc_112010.html
      Then:

        mvn install:install-file \
          -Dfile=ojdbc6.jar \
          -DgroupId=com.oracle \
          -DartifactId=ojdbc6 \
          -Dversion=11.2.0.1.0 \
          -Dpackaging=jar \
          -DgeneratePom=true
    -->
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>${oracleVersion}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <version>2.4.7</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.5.6</version>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>test</defaultGoal>
    <plugins>
      <!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <version>1.3</version>
        <configuration>
          <driver>oracle.jdbc.OracleDriver</driver>
          <url>${db.url}</url>
          <username>${db.userid}</username>
          <password>${db.password}</password>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>${oracleVersion}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>sql-ddl</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <srcFiles>
                <srcFile>src/test/resources/sql/${dbunit.profile.ddl}</srcFile>
              </srcFiles>
              <onError>continue</onError>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${compileSource}</source>
          <target>${compileSource}</target>
          <compilerVersion>${compileSource}</compilerVersion>
          <debug>true</debug>
          <fork>true</fork>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <systemProperties>
            <property>
              <name>db.url</name>
              <value>${db.url}</value>
            </property>
            <property>
              <name>db.userid</name>
              <value>${db.userid}</value>
            </property>
            <property>
              <name>db.password</name>
              <value>${db.password}</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <reportSets>
          <reportSet>
            <id>tests</id>
            <reports>
              <report>report-only</report>
            </reports>
            <configuration>
              <outputName>surefire-report</outputName>
              <reportsDirectories>
                <reportsDirectory>target/surefire-reports</reportsDirectory>
              </reportsDirectories>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
